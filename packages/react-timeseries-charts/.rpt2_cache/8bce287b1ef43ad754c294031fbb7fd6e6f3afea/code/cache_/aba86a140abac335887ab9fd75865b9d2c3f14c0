{"code":"import * as tslib_1 from \"tslib\";\r\nvar primaryColor = \"steelblue\";\r\nvar highlightColor = \"#5a98cb\";\r\nvar selectedColor = primaryColor;\r\nvar mutedColor = \"grey\";\r\nvar areaOpacity = 0.75;\r\nvar mutedLineOpacity = 0.4;\r\nvar mutedAreaOpacity = 0.2;\r\nexport var defaultLineChartChannelStyle = {\r\n    line: {\r\n        normal: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 1 },\r\n        highlighted: { stroke: \"#5a98cb\", fill: \"none\", strokeWidth: 1 },\r\n        selected: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 2 },\r\n        muted: { stroke: \"steelblue\", fill: \"none\", opacity: mutedLineOpacity, strokeWidth: 1 }\r\n    }\r\n};\r\nexport var defaultAreaChartStyle = {\r\n    line: {\r\n        normal: { stroke: primaryColor, fill: \"none\", strokeWidth: 1 },\r\n        highlighted: { stroke: highlightColor, fill: \"none\", strokeWidth: 1 },\r\n        selected: { stroke: selectedColor, fill: \"none\", strokeWidth: 1 },\r\n        muted: { stroke: primaryColor, fill: \"none\", opacity: mutedLineOpacity, strokeWidth: 1 }\r\n    },\r\n    area: {\r\n        normal: { fill: primaryColor, stroke: \"none\", opacity: areaOpacity },\r\n        highlighted: { fill: highlightColor, stroke: \"none\", opacity: areaOpacity },\r\n        selected: { fill: selectedColor, stroke: \"none\", opacity: areaOpacity },\r\n        muted: { fill: primaryColor, stroke: \"none\", opacity: mutedAreaOpacity }\r\n    }\r\n};\r\nexport var defaultBarChartChannelStyle = {\r\n    bar: {\r\n        normal: { fill: primaryColor, opacity: 0.8 },\r\n        highlighted: { fill: highlightColor, opacity: 1.0 },\r\n        selected: { fill: selectedColor, opacity: 1.0 },\r\n        muted: { fill: primaryColor, opacity: 0.4 }\r\n    }\r\n};\r\nvar defaultBoxFillStyle = {\r\n    fill: primaryColor,\r\n    stroke: \"none\"\r\n};\r\nvar defaultMutedBoxFillStyle = {\r\n    fill: mutedColor,\r\n    stroke: \"none\"\r\n};\r\nexport var defaultBoxChartStyle = [\r\n    {\r\n        normal: tslib_1.__assign({}, defaultBoxFillStyle, { opacity: 0.2 }),\r\n        highlighted: tslib_1.__assign({}, defaultBoxFillStyle, { opacity: 0.3 }),\r\n        selected: tslib_1.__assign({}, defaultBoxFillStyle, { opacity: 0.3 }),\r\n        muted: tslib_1.__assign({}, defaultMutedBoxFillStyle, { opacity: 0.1 })\r\n    },\r\n    {\r\n        normal: tslib_1.__assign({}, defaultBoxFillStyle, { opacity: 0.5 }),\r\n        highlighted: tslib_1.__assign({}, defaultBoxFillStyle, { opacity: 0.6 }),\r\n        selected: tslib_1.__assign({}, defaultBoxFillStyle, { opacity: 0.6 }),\r\n        muted: tslib_1.__assign({}, defaultMutedBoxFillStyle, { opacity: 0.2 })\r\n    },\r\n    {\r\n        normal: tslib_1.__assign({}, defaultBoxFillStyle, { opacity: 0.9 }),\r\n        highlighted: tslib_1.__assign({}, defaultBoxFillStyle, { opacity: 1.0 }),\r\n        selected: tslib_1.__assign({}, defaultBoxFillStyle, { opacity: 1.0 }),\r\n        muted: tslib_1.__assign({}, defaultMutedBoxFillStyle, { opacity: 0.2 })\r\n    }\r\n];\r\nexport var defaultScatterChartChannelStyle = {\r\n    point: {\r\n        normal: { fill: \"steelblue\", opacity: 0.8 },\r\n        highlighted: { fill: \"steelblue\", opacity: 1.0 },\r\n        selected: { fill: \"steelblue\", opacity: 1.0 },\r\n        muted: { fill: \"steelblue\", opacity: 0.4 }\r\n    }\r\n};\r\nexport var baselineDefaultStyle = {\r\n    label: {\r\n        fill: \"#8B7E7E\",\r\n        fontSize: 11,\r\n        pointerEvents: \"none\"\r\n    },\r\n    line: {\r\n        stroke: \"#626262\",\r\n        strokeWidth: 1,\r\n        strokeDasharray: \"5,3\",\r\n        pointerEvents: \"none\"\r\n    }\r\n};\r\nexport var defaultInfoBoxStyle = {\r\n    box: {\r\n        fill: \"#FEFEFE\",\r\n        stroke: \"#DDD\",\r\n        opacity: 0.8,\r\n        pointerEvents: \"none\"\r\n    },\r\n    text: {\r\n        fontSize: 11,\r\n        fill: \"#bdbdbd\",\r\n        pointerEvents: \"none\"\r\n    }\r\n};\r\nexport var defaultEventMarkerStyle = tslib_1.__assign({ stem: {\r\n        stroke: \"#999\",\r\n        cursor: \"crosshair\",\r\n        pointerEvents: \"none\"\r\n    }, marker: {\r\n        fill: \"#999\"\r\n    } }, defaultInfoBoxStyle);\r\nexport var defaultTimeMarkerStyle = tslib_1.__assign({ line: {\r\n        stroke: \"#999\",\r\n        cursor: \"crosshair\",\r\n        pointerEvents: \"none\"\r\n    } }, defaultInfoBoxStyle);\r\nexport var defaultLegendCategoryStyle = {\r\n    symbol: {\r\n        normal: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 1 },\r\n        highlighted: { stroke: \"#5a98cb\", fill: \"none\", strokeWidth: 1 },\r\n        selected: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 2 },\r\n        muted: { stroke: \"steelblue\", fill: \"none\", opacity: 0.4, strokeWidth: 1 }\r\n    },\r\n    label: {\r\n        normal: { fontSize: \"normal\", color: \"#333\" },\r\n        highlighted: { fontSize: \"normal\", color: \"#222\" },\r\n        selected: { fontSize: \"normal\", color: \"#333\" },\r\n        muted: { fontSize: \"normal\", color: \"#333\", opacity: 0.4 }\r\n    },\r\n    value: {\r\n        normal: { fontSize: \"normal\", color: \"#333\" },\r\n        highlighted: { fontSize: \"normal\", color: \"#222\" },\r\n        selected: { fontSize: \"normal\", color: \"#333\" },\r\n        muted: { fontSize: \"normal\", color: \"#333\", opacity: 0.4 }\r\n    }\r\n};\r\n","map":{"mappings":""},"dts":{"name":"/Users/pmurphy/code/react-timeseries-charts/packages/react-timeseries-charts/style.d.ts","text":"/// <reference types=\"react\" />\r\nimport { Event, Key } from \"pondjs\";\r\nexport declare type StyleMode = \"normal\" | \"selected\" | \"highlighted\" | \"muted\";\r\nexport declare type ElementStyle = {\r\n    normal: React.CSSProperties;\r\n    highlighted: React.CSSProperties;\r\n    selected: React.CSSProperties;\r\n    muted: React.CSSProperties;\r\n    [mode: string]: React.CSSProperties;\r\n};\r\nexport declare type LineChartChannelStyle = {\r\n    line: ElementStyle;\r\n    [elem: string]: ElementStyle;\r\n};\r\nexport declare type LineChartStyle = {\r\n    [channel: string]: LineChartChannelStyle;\r\n};\r\nexport declare const defaultLineChartChannelStyle: {\r\n    line: {\r\n        normal: {\r\n            stroke: string;\r\n            fill: string;\r\n            strokeWidth: number;\r\n        };\r\n        highlighted: {\r\n            stroke: string;\r\n            fill: string;\r\n            strokeWidth: number;\r\n        };\r\n        selected: {\r\n            stroke: string;\r\n            fill: string;\r\n            strokeWidth: number;\r\n        };\r\n        muted: {\r\n            stroke: string;\r\n            fill: string;\r\n            opacity: number;\r\n            strokeWidth: number;\r\n        };\r\n    };\r\n};\r\nexport declare type AreaChartChannelStyle = {\r\n    line: ElementStyle;\r\n    area: ElementStyle;\r\n};\r\nexport declare type AreaChartStyle = {\r\n    [channel: string]: AreaChartChannelStyle;\r\n};\r\nexport declare const defaultAreaChartStyle: AreaChartChannelStyle;\r\nexport interface BarChartChannelStyle {\r\n    bar: ElementStyle;\r\n    [key: string]: ElementStyle;\r\n}\r\nexport declare type BarChartStyle = {\r\n    [channel: string]: BarChartChannelStyle;\r\n};\r\nexport declare const defaultBarChartChannelStyle: BarChartChannelStyle;\r\nexport declare type LevelStyle = {\r\n    normal: React.CSSProperties;\r\n    highlighted: React.CSSProperties;\r\n    selected: React.CSSProperties;\r\n    muted: React.CSSProperties;\r\n};\r\nexport declare type BoxChartChannelStyle = LevelStyle[];\r\nexport declare type BoxChartStyle = {\r\n    [channel: string]: BoxChartChannelStyle;\r\n};\r\nexport declare const defaultBoxChartStyle: BoxChartChannelStyle;\r\nexport declare type ScatterChartChannelStyle = {\r\n    point: ElementStyle;\r\n    [elem: string]: ElementStyle;\r\n};\r\nexport declare type ScatterChartStyle = {\r\n    [channel: string]: ScatterChartChannelStyle;\r\n};\r\nexport declare const defaultScatterChartChannelStyle: {\r\n    point: {\r\n        normal: {\r\n            fill: string;\r\n            opacity: number;\r\n        };\r\n        highlighted: {\r\n            fill: string;\r\n            opacity: number;\r\n        };\r\n        selected: {\r\n            fill: string;\r\n            opacity: number;\r\n        };\r\n        muted: {\r\n            fill: string;\r\n            opacity: number;\r\n        };\r\n    };\r\n};\r\nexport declare type EventChartStyle = (event: Event<Key>, mode: string) => React.CSSProperties;\r\nexport declare type BaselineStyle = {\r\n    label: React.CSSProperties;\r\n    line: React.CSSProperties;\r\n};\r\nexport declare const baselineDefaultStyle: {\r\n    label: {\r\n        fill: string;\r\n        fontSize: number;\r\n        pointerEvents: string;\r\n    };\r\n    line: {\r\n        stroke: string;\r\n        strokeWidth: number;\r\n        strokeDasharray: string;\r\n        pointerEvents: string;\r\n    };\r\n};\r\nexport declare type InfoBoxStyle = {\r\n    text: React.CSSProperties;\r\n    box: React.CSSProperties;\r\n};\r\nexport declare const defaultInfoBoxStyle: InfoBoxStyle;\r\nexport declare type EventMarkerStyle = InfoBoxStyle & {\r\n    stem: React.CSSProperties;\r\n    marker: React.CSSProperties;\r\n};\r\nexport declare const defaultEventMarkerStyle: EventMarkerStyle;\r\nexport declare type TimeMarkerStyle = InfoBoxStyle & {\r\n    line: React.CSSProperties;\r\n};\r\nexport declare const defaultTimeMarkerStyle: TimeMarkerStyle;\r\nexport declare type CategoryStyle = {\r\n    symbol: ElementStyle;\r\n    label: ElementStyle;\r\n    value: ElementStyle;\r\n    [elem: string]: ElementStyle;\r\n};\r\nexport declare type LegendStyle = {\r\n    [key: string]: CategoryStyle;\r\n};\r\nexport declare const defaultLegendCategoryStyle: CategoryStyle;\r\n"}}
