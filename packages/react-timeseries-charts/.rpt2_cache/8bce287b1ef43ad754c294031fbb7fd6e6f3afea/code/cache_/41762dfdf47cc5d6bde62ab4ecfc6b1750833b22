{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from \"react\";\r\nimport { Axis } from \"react-axis\";\r\nimport { ScaleType } from \"./Charts\";\r\nvar defaultStyle = {\r\n    labels: {\r\n        labelColor: \"#8B7E7E\",\r\n        labelWeight: 100,\r\n        labelSize: 11\r\n    },\r\n    axis: {\r\n        axisColor: \"#C0C0C0\"\r\n    }\r\n};\r\nvar YAxis = (function (_super) {\r\n    tslib_1.__extends(YAxis, _super);\r\n    function YAxis() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    YAxis.prototype.render = function () {\r\n        return (React.createElement(Axis, { label: this.props.label ? this.props.label : this.props.id, labelStyle: this.props.style, width: this.props.width, position: this.props.align, margin: 5, height: this.props.height, max: this.props.max, min: this.props.min, type: this.props.type, format: this.props.format, tickCount: this.props.tickCount, absolute: this.props.absolute }));\r\n    };\r\n    YAxis.defaultProps = {\r\n        id: \"yaxis\",\r\n        align: \"left\",\r\n        min: 0,\r\n        max: 1,\r\n        type: ScaleType.Linear,\r\n        absolute: false,\r\n        format: \".2s\",\r\n        labelOffset: 0,\r\n        transition: 100,\r\n        width: 80,\r\n        style: defaultStyle\r\n    };\r\n    return YAxis;\r\n}(React.Component));\r\nexport { YAxis };\r\n","map":{"mappings":""},"dts":{"name":"/Users/pmurphy/code/react-timeseries-charts/packages/react-timeseries-charts/YAxis.d.ts","text":"/// <reference types=\"react\" />\r\nimport * as React from \"react\";\r\nimport { AxisProps } from \"./Charts\";\r\nexport interface YAxisStyle {\r\n    labels: React.CSSProperties;\r\n    axis: React.CSSProperties;\r\n}\r\nexport declare type YAxisProps = AxisProps & {\r\n    label?: string;\r\n    min: number;\r\n    max: number;\r\n    width: number;\r\n    style?: YAxisStyle;\r\n    absolute?: boolean;\r\n    labelOffset?: number;\r\n    format?: string;\r\n    align?: string;\r\n    scale?: (...args: any[]) => any;\r\n    tickCount?: number;\r\n};\r\nexport declare class YAxis extends React.Component<YAxisProps> {\r\n    static defaultProps: Partial<YAxisProps>;\r\n    render(): JSX.Element;\r\n}\r\n"}}
