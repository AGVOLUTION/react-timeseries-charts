{
	"id": 0,
	"name": "react-timeseries-charts",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 702,
			"name": "\"AreaChart\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/AreaChart.tsx",
			"children": [
				{
					"id": 703,
					"name": "StyleType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 705,
							"name": "Area",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 38,
									"character": 8
								}
							],
							"defaultValue": "\"area\""
						},
						{
							"id": 704,
							"name": "Line",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 37,
									"character": 8
								}
							],
							"defaultValue": "\"line\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								705,
								704
							]
						}
					],
					"sources": [
						{
							"fileName": "AreaChart.tsx",
							"line": 36,
							"character": 21
						}
					]
				},
				{
					"id": 706,
					"name": "AreaChart",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `<AreaChart>` component is able to display single or multiple stacked\nareas above or below the axis. It used throughout the\n[My ESnet Portal](http://my.es.net).",
						"text": "The `<AreaChart>` should be used within a `<ChartContainer>` structure,\nas this will construct the horizontal and vertical axis, and manage\nother elements. Here is an example of an `<AreaChart>` with an up and down\nnetwork traffic visualization:\n\n ```\n  render() {\n     return (\n         ...\n         <ChartContainer timeRange={trafficSeries.timerange()} width=\"1080\">\n             <ChartRow height=\"150\">\n                 <Charts>\n                     <AreaChart\n                         axis=\"traffic\"\n                         series={trafficSeries}\n                         columns={{up: [\"in\"], down: [\"out\"]}}\n                      />\n                 </Charts>\n                 <YAxis\n                     id=\"traffic\"\n                     label=\"Traffic (bps)\"\n                     min={-max} max={max}\n                     absolute={true}\n                     width=\"60\"\n                     type=\"linear\"\n                 />\n             </ChartRow>\n         </ChartContainer>\n         ...\n     );\n }\n ```\nThe `<AreaChart>` takes a single `TimeSeries` object into its `series` prop. This\nseries can contain multiple columns and those columns can be referenced using the `columns`\nprop. The `columns` props allows you to map columns in the series to the chart,\nletting you specify the stacking and orientation of the data. In the above example\nwe map the \"in\" column in `trafficSeries` to the up direction and the \"out\" column to\nthe down direction. Each direction is specified as an array, so adding multiple\ncolumns into a direction will stack the areas in that direction.\n\nNote: It is recommended that `<ChartContainer>`s be placed within a <Resizable> tag,\nrather than hard coding the width as in the above example.\n"
					},
					"typeParameter": [
						{
							"id": 754,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 755,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 800,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 801,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 802,
									"name": "new AreaChart",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 803,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AreaChartProps",
												"id": 837
											}
										},
										{
											"id": 804,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AreaChart",
										"id": 706
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 827,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 823,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 824,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 825,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																825
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "AreaChartProps",
												"id": 837
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 828,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 829,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 830,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 831,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 826,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 738,
							"name": "areaStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 739,
									"name": "areaStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 740,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 351,
									"character": 13
								}
							]
						},
						{
							"id": 818,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 819,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 820,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 821,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 822,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 724,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 725,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 726,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGPathElement"
													}
												]
											}
										},
										{
											"id": 727,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 267,
									"character": 15
								}
							]
						},
						{
							"id": 718,
							"name": "handleHover",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 719,
									"name": "handleHover",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 720,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGPathElement"
													}
												]
											}
										},
										{
											"id": 721,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 255,
									"character": 15
								}
							]
						},
						{
							"id": 722,
							"name": "handleHoverLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 723,
									"name": "handleHoverLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 261,
									"character": 20
								}
							]
						},
						{
							"id": 735,
							"name": "pathStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 736,
									"name": "pathStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 737,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 347,
									"character": 13
								}
							]
						},
						{
							"id": 728,
							"name": "providedAreaStyleMap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 729,
									"name": "providedAreaStyleMap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 730,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AreaChartChannelStyle",
										"id": 357
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 274,
									"character": 24
								}
							]
						},
						{
							"id": 752,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 753,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 502,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 741,
							"name": "renderArea",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 742,
									"name": "renderArea",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 743,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "AreaData",
													"id": 832
												}
											}
										},
										{
											"id": 744,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 745,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 355,
									"character": 14
								}
							]
						},
						{
							"id": 750,
							"name": "renderAreas",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 751,
									"name": "renderAreas",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 491,
									"character": 15
								}
							]
						},
						{
							"id": 746,
							"name": "renderPaths",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 747,
									"name": "renderPaths",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 748,
											"name": "columnList",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 749,
											"name": "direction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Element"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 399,
									"character": 15
								}
							]
						},
						{
							"id": 805,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 806,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 807,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 808,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 809,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 810,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 811,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 812,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "AreaChartProps",
																				"id": 837
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 813,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 814,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 815,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 816,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 817,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 715,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 716,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 717,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AreaChartProps",
												"id": 837
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 214,
									"character": 25
								}
							]
						},
						{
							"id": 731,
							"name": "style",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 732,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the style used for drawing the path"
									},
									"parameters": [
										{
											"id": 733,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 734,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "StyleType",
												"id": 703
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 291,
									"character": 9
								}
							]
						},
						{
							"id": 780,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 781,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 786,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 787,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 788,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AreaChartProps",
														"id": 837
													}
												]
											}
										},
										{
											"id": 789,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 795,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 796,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 797,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AreaChartProps",
														"id": 837
													}
												]
											}
										},
										{
											"id": 798,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 799,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 765,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 766,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 767,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 768,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 756,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 757,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 773,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 774,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 775,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AreaChartProps",
														"id": 837
													}
												]
											}
										},
										{
											"id": 776,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 777,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 778,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 779,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 782,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 783,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 784,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AreaChartProps",
														"id": 837
													}
												]
											}
										},
										{
											"id": 785,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 763,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 764,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 790,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 791,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 792,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AreaChartProps",
														"id": 837
													}
												]
											}
										},
										{
											"id": 793,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 794,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 769,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 770,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 771,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AreaChartProps",
														"id": 837
													}
												]
											}
										},
										{
											"id": 772,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 758,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 759,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 760,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AreaChartProps",
														"id": 837
													}
												]
											}
										},
										{
											"id": 761,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 762,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 707,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 708,
									"name": "breakArea",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 204,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 712,
									"name": "interpolation",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 209,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"name": "curveLinear",
										"id": 676
									},
									"defaultValue": " CurveInterpolation.curveLinear"
								},
								{
									"id": 713,
									"name": "stack",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 210,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 714,
									"name": "visible",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 211,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 709,
									"name": "columns",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 711,
											"name": "down",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 207,
													"character": 16
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "undefined"
												}
											},
											"defaultValue": " []"
										},
										{
											"id": 710,
											"name": "up",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 206,
													"character": 14
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": " [\"value\"]"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												711,
												710
											]
										}
									],
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 205,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										708,
										712,
										713,
										714
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										709
									]
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 203,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								801
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								827,
								823,
								828,
								826
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								738,
								818,
								724,
								718,
								722,
								735,
								728,
								752,
								741,
								750,
								746,
								805,
								715,
								731,
								780,
								786,
								795,
								765,
								756,
								773,
								778,
								782,
								763,
								790,
								769,
								758
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								707
							]
						}
					],
					"sources": [
						{
							"fileName": "AreaChart.tsx",
							"line": 202,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "AreaChartProps",
									"id": 837
								}
							]
						}
					]
				},
				{
					"id": 837,
					"name": "AreaChartProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "AreaChart.tsx",
							"line": 41,
							"character": 26
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 168
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 838,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 839,
											"name": "axis",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "Reference to the axis which provides the vertical scale for ## drawing. e.g.\nspecifying axis=\"trafficRate\" would refer the y-scale to the YAxis of id=\"trafficRate\"."
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 46,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 840,
											"name": "breakArea",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The determines how to handle bad/missing values in the supplied\nTimeSeries. A missing value can be null or NaN. If breakArea\nis set to true then the area chart will be broken on either side of\nthe bad value(s). If breakArea is false (the default) bad values\nare simply removed and the adjoining points are connected."
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 55,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 841,
											"name": "columns",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "The series columns mapped to stacking up and down.\nHas the format:\n```\n columns: {\n     up: [\"in\", ...],\n     down: [\"out\", ...]\n }\n ```"
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 67,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "AreaChartColumns",
												"id": 665
											}
										},
										{
											"id": 842,
											"name": "highlight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The currenly highlighted column"
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 72,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 843,
											"name": "interpolation",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "Any of D3's interpolation modes.\nFor reference - [d3-curves](https://github.com/d3/d3-shape#curves)"
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 78,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "CurveInterpolation",
												"id": 668
											}
										},
										{
											"id": 852,
											"name": "onHighlightChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Callback called when the highlight changes, i.e. hover event"
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 146,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 853,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 854,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 855,
																	"name": "column",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "AreaChart.tsx",
															"line": 146,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 856,
											"name": "onSelectionChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Callback called when the selection changes, i.e. area is clicked"
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 151,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 857,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 858,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 859,
																	"name": "column",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "AreaChart.tsx",
															"line": 151,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 844,
											"name": "selection",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The currenly selected column"
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 83,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 845,
											"name": "series",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "What [Pond TimeSeries](http://software.es.net/pond/#/class/timeseries) data to visualize"
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 88,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"name": "TimeSeries",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 846,
											"name": "stack",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Stack areas on top of each other"
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 93,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 847,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "The styles to apply to the underlying SVG lines. This is a mapping\nof column names to objects with style attributes, in the following\nformat:",
												"text": "```\nconst style = {\n    in: {\n        line: {\n            normal: {stroke: \"steelblue\", fill: \"none\", strokeWidth: 1},\n            highlighted: {stroke: \"#5a98cb\", fill: \"none\", strokeWidth: 1},\n            selected: {stroke: \"steelblue\", fill: \"none\", strokeWidth: 1},\n            muted: {stroke: \"steelblue\", fill: \"none\", opacity: 0.4, strokeWidth: 1}\n        },\n        area: {\n            normal: {fill: \"steelblue\", stroke: \"none\", opacity: 0.75},\n            highlighted: {fill: \"#5a98cb\", stroke: \"none\", opacity: 0.75},\n            selected: {fill: \"steelblue\", stroke: \"none\", opacity: 0.75},\n            muted: {fill: \"steelblue\", stroke: \"none\", opacity: 0.25}\n        }\n    },\n    out: {\n        ...\n    }\n};\n\n<AreaChart style={style} ... />\n```\n\nAlternatively, you can pass in a Styler. For example:\n\n```\nconst upDownStyler = styler([\n    {key: \"in\", color: \"#C8D5B8\"},\n    {key: \"out\", color: \"#9BB8D7\"}\n]);\n\n<AreaChart columns={[\"in\", \"out\"]} style={upDownStyler} ... />\n\n```\n"
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 136,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "AreaChartStyle",
														"id": 361
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 848,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 849,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 850,
																			"name": "column",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"name": "AreaChartChannelStyle",
																		"id": 357
																	}
																}
															],
															"sources": [
																{
																	"fileName": "AreaChart.tsx",
																	"line": 136,
																	"character": 27
																}
															]
														}
													},
													{
														"type": "reference",
														"name": "Styler",
														"id": 613
													}
												]
											}
										},
										{
											"id": 851,
											"name": "visible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Show or hide this chart"
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 141,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												839,
												840,
												841,
												842,
												843,
												852,
												856,
												844,
												845,
												846,
												847,
												851
											]
										}
									],
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 41,
											"character": 41
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 832,
					"name": "AreaData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "AreaChart.tsx",
							"line": 30,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 833,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 834,
									"name": "x0",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 31,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 835,
									"name": "y0",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 32,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 836,
									"name": "y1",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 33,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										834,
										835,
										836
									]
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 30,
									"character": 22
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						703
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						706
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						837,
						832
					]
				}
			],
			"sources": [
				{
					"fileName": "AreaChart.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1327,
			"name": "\"BarChart\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/BarChart.tsx",
			"children": [
				{
					"id": 1328,
					"name": "BarChart",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a bar chart based on IndexedEvents within a TimeSeries.",
						"text": "This BarChart implementation is a little different that other time axis\nbar charts in that it will render across a the time range of the event\nrather than rendering to specific categories. As a result,\na Aug-2014 bar will render between the Aug 2014 tick mark and\nthe Sept 2014 tickmark. However, this allows it to play well with other\ntypes of charts that maybe integrated into the same visualization.\n\nThe BarChart will render a single TimeSeries. You can specify the columns\nyou want to render with the `columns` prop. Each column will be stacked on\nthe other, in the order specified in the `columns` array.\n\n### IndexedEvents\n\nBarCharts are supposed to be for aggregated values (e.g. average of\nmany points over an hour), so the hours themselves are specified\nwith an \"Index\". An Index is a string that represents that range of time,\nrather than a specific time like a timestamp would.\n\nPond provides several mechanisms for building aggregated series from\na TimeSeries, and the BarChart code is suited to visualizing that\noutput. See Pond for more details (especially TimeSeries.fixedWindowRollup\nand the Pipeline processing facilities). The realtime example in this\nlibrary also shows how to do this on incoming streams of data.\n\nIf you have one timestamped point per hour and really want to represent\nthose with a BarChart, you can use the Pond static method\n`Index.getIndexString(period, date)` to take the Date and return an\nIndex string. Say if those points were hourly, you'll end up with\nstrings that look like \"1h-412715\". This represents a specific hour\nin time (the 412,715th hour since midnight 1 Jan 1970, actually).\nNote that for larger time periods, index strings can be partial\ndates, like \"2016-08-31\" for Aug 31st, 2016 or \"2016-08\" for Aug 2016.\n\nUse those index strings to build your timeseries instead of timestamps.\nHere's the Pond code needed to convert a date to an index string:\n\n```\n  import { Index } from \"pondjs\";\n  const d = new Date(\"2017-01-30T11:58:38.741Z\");\n  const index = Index.getIndexString(\"1h\", d);   // '1h-412715'\n```\n\nWith either the aggregated approach, or the above timestamped\nconversion, you will want a `TimeSeries` of `IndexedEvent`s that\nlooks like this:\n```\n  const series = new TimeSeries({\n    name: \"myseries\",\n    columns: [\"index\", \"value\"],\n    points: [\n      [\"1h-41275\", 22],\n      [\"1h-41276\", 35],\n      [\"1h-41277\", 72],\n      ...\n    ]\n  })\n```\n\nNote: the first column of the timeseries should be \"index\" (not \"time\")\nand each point should have an index string at the beginning.\n\n### Interactivity\n\nThe BarChart supports selection of individual bars. To control this use\n`onSelectionChange` to get a callback of selection changed. Your callback\nwill be called with the selection (an object containing the event\nand column). You can pass this back into the BarChart as `selection`. For\nexample:\n\n```\n <BarChart\n     ...\n     selection={this.state.selection}\n     onSelectionChange={selection => this.setState({selection})} />\n```\n\nSimilarly you can monitor which bar is being hovered over with the\n`onHighlightChange` callback. This can be used to determine the info box\nto display. Info box will display a box (like a tooltip) with a line\nconnecting it to the bar. You use the `info` prop to evoke this and to\nsupply the text for the info box. See the styling notes below for more\ninformation on this.\n\n### Styling\n\nA BarChart supports per-column or per-event styling. Styles can be set for\neach of the four states that are possible: normal, highlighted,\nselected and muted. To style per-column, supply an object. For per-event styling\nsupply a function: `(event, column) => {}` The functon should return a style object.\n\nSee the `style` prop in the API documentation for more information.\n\nSeparately the size of the bars can be controlled with the `spacing` and\n`offset` props. Spacing controls the gap between the bars. Offset moves the\nbars left or right by the given number of pixels. You can use this to place\nbars along side each other. Alternatively, you can give each column a fixed width\nusing the `size` prop. In this case this size will be used in preference to the size\ndetermined from the timerange of the event and the `spacing`.\n\nThe info box is also able to be styled using `infoStyle`, `stemStyle` and\n`markerStyle` This enables you to control the drawing of the box, the connecting\nlines (stem) and dot respectively. Using the `infoWidth` and `infoHeight`\nprops you can control the size of the box, which is fixed. For the info inside\nthe box, it's up to you: it can either be a simple string or an array of\n{label, value} pairs.\n"
					},
					"typeParameter": [
						{
							"id": 1362,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1363,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1408,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1409,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1410,
									"name": "new BarChart",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1411,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BarChartProps",
												"id": 1440
											}
										},
										{
											"id": 1412,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BarChart",
										"id": 1328
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1435,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1431,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1432,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1433,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1433
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BarChartProps",
												"id": 1440
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1436,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1437,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1438,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1439,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1434,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1426,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1427,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1428,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1429,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1430,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1345,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1346,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1347,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										},
										{
											"id": 1348,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 1349,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 337,
									"character": 15
								}
							]
						},
						{
							"id": 1338,
							"name": "handleHover",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1339,
									"name": "handleHover",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1340,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										},
										{
											"id": 1341,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 1342,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 324,
									"character": 15
								}
							]
						},
						{
							"id": 1343,
							"name": "handleHoverLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1344,
									"name": "handleHoverLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 331,
									"character": 20
								}
							]
						},
						{
							"id": 1350,
							"name": "providedBarStyleMap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1351,
									"name": "providedBarStyleMap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1352,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BarChartChannelStyle",
										"id": 309
									}
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 345,
									"character": 23
								}
							]
						},
						{
							"id": 1360,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1361,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 533,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1358,
							"name": "renderBars",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1359,
									"name": "renderBars",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 412,
									"character": 14
								}
							]
						},
						{
							"id": 1413,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1414,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1415,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1416,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1417,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1418,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1419,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 1420,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "BarChartProps",
																				"id": 1440
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1421,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1422,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1423,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1424,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1425,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1353,
							"name": "style",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1354,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the style used for drawing the path"
									},
									"parameters": [
										{
											"id": 1355,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1356,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1357,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 362,
									"character": 9
								}
							]
						},
						{
							"id": 1388,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1389,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1394,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1395,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1396,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BarChartProps",
														"id": 1440
													}
												]
											}
										},
										{
											"id": 1397,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1403,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1404,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1405,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BarChartProps",
														"id": 1440
													}
												]
											}
										},
										{
											"id": 1406,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1407,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1373,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1374,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1375,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1376,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1364,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1365,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1381,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1382,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1383,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BarChartProps",
														"id": 1440
													}
												]
											}
										},
										{
											"id": 1384,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1385,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1386,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1387,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1390,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1391,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1392,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BarChartProps",
														"id": 1440
													}
												]
											}
										},
										{
											"id": 1393,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1371,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1372,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1398,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1399,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1400,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BarChartProps",
														"id": 1440
													}
												]
											}
										},
										{
											"id": 1401,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1402,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1377,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1378,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1379,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BarChartProps",
														"id": 1440
													}
												]
											}
										},
										{
											"id": 1380,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1366,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1367,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1368,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BarChartProps",
														"id": 1440
													}
												]
											}
										},
										{
											"id": 1369,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1370,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1329,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1331,
									"name": "columns",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 315,
											"character": 15
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"defaultValue": " [\"value\"]"
								},
								{
									"id": 1337,
									"name": "infoHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 321,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "30"
								},
								{
									"id": 1336,
									"name": "infoWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 320,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "90"
								},
								{
									"id": 1335,
									"name": "markerRadius",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 319,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								},
								{
									"id": 1334,
									"name": "minBarHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 318,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 1333,
									"name": "offset",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 317,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 1332,
									"name": "spacing",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 316,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 1330,
									"name": "visible",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 314,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1331,
										1337,
										1336,
										1335,
										1334,
										1333,
										1332,
										1330
									]
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 313,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1409
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1435,
								1431,
								1436,
								1434
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1426,
								1345,
								1338,
								1343,
								1350,
								1360,
								1358,
								1413,
								1353,
								1388,
								1394,
								1403,
								1373,
								1364,
								1381,
								1386,
								1390,
								1371,
								1398,
								1377,
								1366
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1329
							]
						}
					],
					"sources": [
						{
							"fileName": "BarChart.tsx",
							"line": 312,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "BarChartProps",
									"id": 1440
								}
							]
						}
					]
				},
				{
					"id": 1440,
					"name": "BarChartProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "BarChart.tsx",
							"line": 28,
							"character": 25
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 168
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1441,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1445,
											"name": "columns",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A list of columns within the series that will be stacked on top of each other"
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 49,
													"character": 11
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1470,
											"name": "highlighted",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The highlighted item, which will be rendered in the `highlighted` style.",
												"text": "See also `onHighlightChange`\n"
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 191,
													"character": 15
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1471,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1473,
															"name": "column",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "BarChart.tsx",
																	"line": 193,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1472,
															"name": "event",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "BarChart.tsx",
																	"line": 192,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1473,
																1472
															]
														}
													],
													"sources": [
														{
															"fileName": "BarChart.tsx",
															"line": 191,
															"character": 17
														}
													]
												}
											}
										},
										{
											"id": 1450,
											"name": "info",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The values to show in the info box. This is either an array of\nobjects, with each object specifying the label and value\nto be shown in the info box, or it can also be a string.",
												"text": "For example:\n```\ninfoValues = [{\n     label: \"Traffic\",\n     value: trafficText\n}];\n```\n"
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 105,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 684
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1453,
											"name": "infoHeight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The height of the info box"
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 133,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1451,
											"name": "infoStyle",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The style of the info box itself and the connecting lines.\nTypically, this is an object where the key can describe\nthe stying of the stem, marker, box  and the text of the infoBox.\nThe style for each of them is in the form of CSS properties",
												"text": "For example:\n```\ninfoStyle = {\n     box: {\n         fill: \"black\",\n         color: \"#DDD\"\n     }\n}\n```\n"
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 123,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "EventMarkerStyle",
												"id": 499
											}
										},
										{
											"id": 1454,
											"name": "infoTimeFormat",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Alter the format of the timestamp shown on the info box.\nThis may be either a function or a string. If you provide a function\nthat will be passed an Index and should return a string. For example:\n```\nindex => moment(index.begin()).format(\"Do MMM 'YY\")\n```\nAlternatively you can pass in a d3 format string. That will be applied\nto the begin time of the Index range."
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 145,
													"character": 18
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1455,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1456,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1457,
																			"name": "args",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isRest": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "BarChart.tsx",
																	"line": 145,
																	"character": 29
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 1452,
											"name": "infoWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The width of the info box"
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 128,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1458,
											"name": "markerRadius",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The radius of the infoBox dot at the end of the marker"
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 150,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1461,
											"name": "minBarHeight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The minimum height of a bar given in pixels.\nBy default, the minimum height of a bar is 1 pixel"
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 167,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1444,
											"name": "offset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The distance in pixels to offset the bar from its center position within the timerange\nit represents"
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 44,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1474,
											"name": "onHighlightChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A callback that will be called when the hovered over bar changes.\nIt will be called with an object containing the event and column."
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 200,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1475,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1476,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1477,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "BarChart.tsx",
															"line": 200,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 1466,
											"name": "onSelectionChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A callback that will be called when the selection changes. It will be called\nwith an object containing the event and column."
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 184,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1467,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1468,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1469,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "BarChart.tsx",
															"line": 184,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 1462,
											"name": "selected",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The selected item, which will be rendered in the `selected` style.\nIf a bar is selected, all other bars will be rendered in the `muted` style.",
												"text": "See also `onSelectionChange`\n"
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 175,
													"character": 12
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1463,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1465,
															"name": "column",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "BarChart.tsx",
																	"line": 177,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1464,
															"name": "event",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "BarChart.tsx",
																	"line": 176,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Event",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "Index"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1465,
																1464
															]
														}
													],
													"sources": [
														{
															"fileName": "BarChart.tsx",
															"line": 175,
															"character": 14
														}
													]
												}
											}
										},
										{
											"id": 1442,
											"name": "series",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "What [Pond TimeSeries](http://software.es.net/pond/#/class/timeseries)\ndata to visualize"
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 33,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"name": "TimeSeries",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 1459,
											"name": "size",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If size is specified, then the bar will be this number of pixels wide. This\nprop takes priority over \"spacing\"."
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 156,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1443,
											"name": "spacing",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The distance in pixels to inset the bar chart from its actual timerange"
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 38,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1446,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The style of the bar chart drawing (using SVG CSS properties).\nThis is an object with a key for each column which is being drawn,\nper the `columns` prop. For each column a style is defined for\neach state the bar may be in. This style is the CSS properties for\nthe underlying SVG <Rect>, so most likely you'll define fill and\nopacity.",
												"text": "For example:\n```\nstyle = {\n    columnName: {\n        bar: {\n            normal: {\n                fill: \"steelblue\",\n                opacity: 0.8,\n            },\n            highlighted: {\n                fill: \"#a7c4dd\",\n                opacity: 1.0,\n            },\n            selected: {\n                fill: \"orange\",\n                opacity: 1.0,\n            },\n            muted: {\n                fill: \"grey\",\n                opacity: 0.5\n            }\n         }\n    }\n}\n```\n\nYou can also supply a function, which will be called with an event\nand column. The function should return an object containing the\nfour states (normal, highlighted, selected and muted) and the corresponding\nCSS properties.\n"
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 90,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BarChartStyle",
														"id": 401
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1447,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1448,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1449,
																			"name": "column",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"name": "BarChartChannelStyle",
																		"id": 309
																	}
																}
															],
															"sources": [
																{
																	"fileName": "BarChart.tsx",
																	"line": 90,
																	"character": 27
																}
															]
														}
													},
													{
														"type": "reference",
														"name": "Styler",
														"id": 613
													}
												]
											}
										},
										{
											"id": 1460,
											"name": "visible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Show or hide this chart"
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 161,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1445,
												1470,
												1450,
												1453,
												1451,
												1454,
												1452,
												1458,
												1461,
												1444,
												1474,
												1466,
												1462,
												1442,
												1459,
												1443,
												1446,
												1460
											]
										}
									],
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 28,
											"character": 40
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1328
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1440
					]
				}
			],
			"sources": [
				{
					"fileName": "BarChart.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1478,
			"name": "\"Baseline\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/Baseline.tsx",
			"children": [
				{
					"id": 1479,
					"name": "Baseline",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The BaseLine component displays a simple horizontal line at a value.",
						"text": "For example the following code overlays Baselines for the mean and stdev\nof a series on top of another chart.\n\n```\n<ChartContainer timeRange={series.timerange()} >\n    <ChartRow height=\"150\">\n        <YAxis\n          id=\"price\"\n          label=\"Price ($)\"\n          min={series.min()} max={series.max()}\n          width=\"60\" format=\"$,.2f\"\n        />\n        <Charts>\n            <LineChart axis=\"price\" series={series} style={style} />\n            <Baseline axis=\"price\" value={series.avg()} label=\"Avg\" position=\"right\" />\n            <Baseline axis=\"price\" value={series.avg()-series.stdev()} />\n            <Baseline axis=\"price\" value={series.avg()+series.stdev()} />\n        </Charts>\n    </ChartRow>\n</ChartContainer>\n```\n"
					},
					"typeParameter": [
						{
							"id": 1492,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1493,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1538,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1539,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1540,
									"name": "new Baseline",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1541,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaselineProps",
												"id": 1570
											}
										},
										{
											"id": 1542,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Baseline",
										"id": 1479
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1565,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1561,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1562,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1563,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1563
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BaselineProps",
												"id": 1570
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1566,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1567,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1568,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1569,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1564,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1556,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1557,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1558,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1559,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1560,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1490,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1491,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "Baseline.tsx",
									"line": 112,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1543,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1544,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1545,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1546,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1547,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1548,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1549,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 1550,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "BaselineProps",
																				"id": 1570
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1551,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1552,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1553,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1554,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1555,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1518,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1519,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1524,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1525,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1526,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaselineProps",
														"id": 1570
													}
												]
											}
										},
										{
											"id": 1527,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1533,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1534,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1535,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaselineProps",
														"id": 1570
													}
												]
											}
										},
										{
											"id": 1536,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1537,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1503,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1504,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1505,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1506,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1494,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1495,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1511,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1512,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1513,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaselineProps",
														"id": 1570
													}
												]
											}
										},
										{
											"id": 1514,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1515,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1516,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1517,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1520,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1521,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1522,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaselineProps",
														"id": 1570
													}
												]
											}
										},
										{
											"id": 1523,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1501,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1502,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1528,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1529,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1530,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaselineProps",
														"id": 1570
													}
												]
											}
										},
										{
											"id": 1531,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1532,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1507,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1508,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1509,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaselineProps",
														"id": 1570
													}
												]
											}
										},
										{
											"id": 1510,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1496,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1497,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1498,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaselineProps",
														"id": 1570
													}
												]
											}
										},
										{
											"id": 1499,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1500,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1480,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1483,
									"name": "label",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Baseline.tsx",
											"line": 106,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								},
								{
									"id": 1484,
									"name": "position",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Baseline.tsx",
											"line": 107,
											"character": 16
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "left"
									},
									"defaultValue": "\"left\""
								},
								{
									"id": 1486,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Baseline.tsx",
											"line": 109,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1487,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1488,
													"name": "label",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 322,
															"character": 9
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												},
												{
													"id": 1489,
													"name": "line",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 323,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1488,
														1489
													]
												}
											]
										}
									},
									"defaultValue": " defaultStyle"
								},
								{
									"id": 1482,
									"name": "value",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Baseline.tsx",
											"line": 105,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 1481,
									"name": "visible",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Baseline.tsx",
											"line": 104,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 1485,
									"name": "vposition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Baseline.tsx",
											"line": 108,
											"character": 17
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "auto"
									},
									"defaultValue": "\"auto\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1483,
										1484,
										1486,
										1482,
										1481,
										1485
									]
								}
							],
							"sources": [
								{
									"fileName": "Baseline.tsx",
									"line": 103,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1539
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1565,
								1561,
								1566,
								1564
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1556,
								1490,
								1543,
								1518,
								1524,
								1533,
								1503,
								1494,
								1511,
								1516,
								1520,
								1501,
								1528,
								1507,
								1496
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1480
							]
						}
					],
					"sources": [
						{
							"fileName": "Baseline.tsx",
							"line": 102,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "BaselineProps",
									"id": 1570
								}
							]
						}
					]
				},
				{
					"id": 1570,
					"name": "BaselineProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Baseline.tsx",
							"line": 20,
							"character": 25
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 168
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1571,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1572,
											"name": "axis",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "Reference to the axis which provides the vertical scale for drawing. e.g.\nspecifying axis=\"trafficRate\" would refer the y-scale to the YAxis of id=\"trafficRate\"."
											},
											"sources": [
												{
													"fileName": "Baseline.tsx",
													"line": 25,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1577,
											"name": "label",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The label to display with the axis."
											},
											"sources": [
												{
													"fileName": "Baseline.tsx",
													"line": 68,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1578,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Whether to display the label on the `left` or `right`."
											},
											"sources": [
												{
													"fileName": "Baseline.tsx",
													"line": 73,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "left"
													},
													{
														"type": "stringLiteral",
														"value": "right"
													}
												]
											}
										},
										{
											"id": 1573,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "An object describing the style of the baseline of the form\n{ label, line }, where \"label\" and \"line\" are both objects containing\nthe inline CSS for that part of the baseline.",
												"text": "For example:\n```\nconst baselineStyleLite = {\n     line: {\n         stroke: \"steelblue\",\n         strokeWidth: 1,\n         opacity: 0.5\n     },\n     label: {\n         fill: \"steelblue\"\n     }\n};\n```\n"
											},
											"sources": [
												{
													"fileName": "Baseline.tsx",
													"line": 46,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "BaselineStyle",
												"id": 469
											}
										},
										{
											"id": 1574,
											"name": "value",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The y-value to display the line at."
											},
											"sources": [
												{
													"fileName": "Baseline.tsx",
													"line": 51,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1575,
											"name": "visible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Show or hide this chart"
											},
											"sources": [
												{
													"fileName": "Baseline.tsx",
													"line": 56,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1576,
											"name": "vposition",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Whether to display the label above or below the line. The default is `auto`,\nwhich will show it above the line unless the position is near to the top\nof the chart."
											},
											"sources": [
												{
													"fileName": "Baseline.tsx",
													"line": 63,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "above"
													},
													{
														"type": "stringLiteral",
														"value": "below"
													},
													{
														"type": "stringLiteral",
														"value": "auto"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1572,
												1577,
												1578,
												1573,
												1574,
												1575,
												1576
											]
										}
									],
									"sources": [
										{
											"fileName": "Baseline.tsx",
											"line": 20,
											"character": 40
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1479
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1570
					]
				}
			],
			"sources": [
				{
					"fileName": "Baseline.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1579,
			"name": "\"BoxChart\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/BoxChart.tsx",
			"children": [
				{
					"id": 1580,
					"name": "BoxChart",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a boxplot chart.",
						"text": "The TimeSeries supplied to the boxplot, as the `series` prop can be one of two types:\n\n 1) It can be a TimeSeries containing IndexedEvents or TimeRangeEvents.\n    In this case a `column` prop should be supplied to specify the\n    data column containing the dimensions of the boxes. This props\n    should be an array of size 1 to 5 elements. e.g. [12, 18, 22, 28]. The\n    numbers should be ordered, lowest to greatest.\n\n 2) A TimeSeries containing timestamp based Events. In this case the\n    boxplot will be aggregated for you. To control the aggregation you can supply\n    an `aggregation` prop: a structure to specify the window size and\n    reducers used to determine the boxes.\n\nIn both cases you are generating up to two ranges and a center marker. In the\nfirst case you are defining this based on the array of numbers. The outer numbers\nspecify the outerRange, the inner numbers specify the innerRange and the middle\nnumber specifies the center marker. In the second case you are building those ranges\nfrom denser data, specifying a window and aggregation functions to build each\nof the ranges and center maker.\n\nIn both cases you do not need to supply all the values. For example if you\nprovide an array of 2 elements, that would define a single range, with no outer range\nand no center marker. The BoxChart is pretty flexible in that way, so you\ncan use it in many situations.\n\nHere is an example of using it to display temperature ranges. The series\npassed to this code would be a TimeSeries containing IndexedEvents. For\neach event, the column `temp` contains an array of values used for the\nbox plot ranges:\n\n```\n<BoxChart\n    axis=\"temperatureAxis\"\n    style={style}\n    column=\"temp\"\n    series={series}\n/>\n```\n\nWhile here is an example with a dense TimeSeries of Events supplied,\nalong with an aggregation specification. This code would produce an\nouter range from the 5th percentile to the 95th, along with an inner\nrange for the interquantile, and a center marker at the median:\n\n```\n<BoxChart\n     axis=\"speedaxis\"\n     series={speed}\n     column=\"speed\"\n     style={style}\n     aggregation={{\n         size: this.state.rollup,\n         reducers: {\n             outer: [percentile(5), percentile(95)],\n             inner: [percentile(25), percentile(75)],\n             center: median(),\n         },\n     }}\n/>\n```\n\nThe BoxChart supports Info boxes, highlighting and selection.\n\nNote: selection and highlighting is on the whole event, not individual ranges.\nAlso note that since the box chart builds an internal TimeSeries for performance\nreasons, selection will give you and IndexedEvent, but it won't be the same\nIndexedEvent in your `series`. Similarly if you are using the aggregation\nspecification you will get events for the rollup, not your original data.\n"
					},
					"typeParameter": [
						{
							"id": 1625,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1626,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1671,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1594,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1595,
									"name": "new BoxChart",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1596,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BoxChartProps",
												"id": 1732
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BoxChart",
										"id": 1580
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 466,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1694,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1591,
							"name": "highlightedStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 464,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1592,
							"name": "mutedStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 465,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1593,
							"name": "normalStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 466,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1690,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1691,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1692,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1692
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BoxChartProps",
												"id": 1732
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1589,
							"name": "providedStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 461,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "LevelStyle",
									"id": 419
								}
							}
						},
						{
							"id": 1695,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1696,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1697,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1698,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1590,
							"name": "selectedStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 463,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1588,
							"name": "series",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 458,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "TimeSeries",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Index"
									}
								]
							}
						},
						{
							"id": 1693,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1597,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1598,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1599,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BoxChartProps",
												"id": 1732
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 482,
									"character": 29
								}
							]
						},
						{
							"id": 1685,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1686,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1687,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1688,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1689,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1609,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1610,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1611,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGElement"
													}
												]
											}
										},
										{
											"id": 1612,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Index"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 589,
									"character": 15
								}
							]
						},
						{
							"id": 1603,
							"name": "handleHover",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1604,
									"name": "handleHover",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1605,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGElement"
													}
												]
											}
										},
										{
											"id": 1606,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Index"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 577,
									"character": 15
								}
							]
						},
						{
							"id": 1607,
							"name": "handleHoverLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1608,
									"name": "handleHoverLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 583,
									"character": 20
								}
							]
						},
						{
							"id": 1613,
							"name": "providedStyleArray",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1614,
									"name": "providedStyleArray",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Given a `column`, look up the ChannelStyle."
									},
									"parameters": [
										{
											"id": 1615,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "LevelStyle",
											"id": 419
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 599,
									"character": 22
								}
							]
						},
						{
							"id": 1623,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1624,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 909,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1621,
							"name": "renderBars",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1622,
									"name": "renderBars",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 702,
									"character": 14
								}
							]
						},
						{
							"id": 1672,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1673,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1674,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1675,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1676,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1677,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1678,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 1679,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "BoxChartProps",
																				"id": 1732
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1680,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1681,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1682,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1683,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1684,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1600,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1601,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1602,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BoxChartProps",
												"id": 1732
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 505,
									"character": 25
								}
							]
						},
						{
							"id": 1616,
							"name": "style",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1617,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the style of a specific column, at a specific level taking into\naccount the mode of the Event (selected, highlighted etc). This is the\nstyle used for drawing the box itself."
									},
									"parameters": [
										{
											"id": 1618,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1619,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Index"
													}
												]
											}
										},
										{
											"id": 1620,
											"name": "level",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LevelStyle",
										"id": 419
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 618,
									"character": 9
								}
							]
						},
						{
							"id": 1651,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1652,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1657,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1658,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1659,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BoxChartProps",
														"id": 1732
													}
												]
											}
										},
										{
											"id": 1660,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1666,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1667,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1668,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BoxChartProps",
														"id": 1732
													}
												]
											}
										},
										{
											"id": 1669,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1670,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1636,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1637,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1638,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1639,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1627,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1628,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1644,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1645,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1646,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BoxChartProps",
														"id": 1732
													}
												]
											}
										},
										{
											"id": 1647,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1648,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1649,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1650,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1653,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1654,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1655,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BoxChartProps",
														"id": 1732
													}
												]
											}
										},
										{
											"id": 1656,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1634,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1635,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1661,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1662,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1663,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BoxChartProps",
														"id": 1732
													}
												]
											}
										},
										{
											"id": 1664,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1665,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1640,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1641,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1642,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BoxChartProps",
														"id": 1732
													}
												]
											}
										},
										{
											"id": 1643,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1629,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1630,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1631,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BoxChartProps",
														"id": 1732
													}
												]
											}
										},
										{
											"id": 1632,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1633,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1581,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1582,
									"name": "column",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 449,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"value\""
								},
								{
									"id": 1587,
									"name": "infoHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 454,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "30"
								},
								{
									"id": 1585,
									"name": "infoMarkerRadius",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 452,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								},
								{
									"id": 1586,
									"name": "infoWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 453,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "90"
								},
								{
									"id": 1583,
									"name": "innerSpacing",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 450,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 1584,
									"name": "outerSpacing",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 451,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1582,
										1587,
										1585,
										1586,
										1583,
										1584
									]
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 448,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1594
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1694,
								1591,
								1592,
								1593,
								1690,
								1589,
								1695,
								1590,
								1588,
								1693
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1597,
								1685,
								1609,
								1603,
								1607,
								1613,
								1623,
								1621,
								1672,
								1600,
								1616,
								1651,
								1657,
								1666,
								1636,
								1627,
								1644,
								1649,
								1653,
								1634,
								1661,
								1640,
								1629
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1581
							]
						}
					],
					"sources": [
						{
							"fileName": "BoxChart.tsx",
							"line": 447,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "BoxChartProps",
									"id": 1732
								}
							]
						}
					]
				},
				{
					"id": 1699,
					"name": "AggregationSpec",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A structure the user can pass into this Chart to automatically build the\nbox ranges using Pond's fixedWindowRollup function."
					},
					"sources": [
						{
							"fileName": "BoxChart.tsx",
							"line": 49,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1700,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1702,
									"name": "reducers",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 51,
											"character": 12
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1703,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1706,
													"name": "center",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "BoxChart.tsx",
															"line": 54,
															"character": 14
														}
													],
													"type": {
														"type": "reference",
														"name": "ReducerFunction"
													}
												},
												{
													"id": 1705,
													"name": "inner",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "BoxChart.tsx",
															"line": 53,
															"character": 13
														}
													],
													"type": {
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"name": "ReducerFunction"
															},
															{
																"type": "reference",
																"name": "ReducerFunction"
															}
														]
													}
												},
												{
													"id": 1704,
													"name": "outer",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "BoxChart.tsx",
															"line": 52,
															"character": 13
														}
													],
													"type": {
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"name": "ReducerFunction"
															},
															{
																"type": "reference",
																"name": "ReducerFunction"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1706,
														1705,
														1704
													]
												}
											],
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 51,
													"character": 13
												}
											]
										}
									}
								},
								{
									"id": 1701,
									"name": "size",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 50,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "Window"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1702,
										1701
									]
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 49,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 1732,
					"name": "BoxChartProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "BoxChart.tsx",
							"line": 190,
							"character": 25
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 168
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1733,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1736,
											"name": "aggregation",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The aggregation specification. This object should contain:\n  - innerMax\n  - innerMin\n  - outerMax\n  - outerMin\n  - center",
												"text": "Though each of the pairs, and center, is optional.\nFor each of these keys you should supply the function you\nwant to use to calculate these. You can import common functions\nfrom Pond, e.g. min(), avg(), percentile(95), etc.\n\nFor example:\n```\n{\n     size: this.state.rollup,\n     reducers: {\n         outer: [min(), max()],\n         inner: [percentile(25), percentile(75)],\n         center: median(),\n     },\n}\n```\n"
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 228,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "AggregationSpec",
												"id": 1699
											}
										},
										{
											"id": 1735,
											"name": "column",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The column within the TimeSeries to plot. Unlike other charts, the BoxChart\nworks on just a single column."
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 201,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1755,
											"name": "highlighted",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The highlighted item, which will be rendered in the `highlighted` style.",
												"text": "See also `onHighlightChange`\n"
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 355,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Index"
													}
												]
											}
										},
										{
											"id": 1741,
											"name": "info",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The values to show in the info box. This is either an array of\nobjects, with each object specifying the label and value\nto be shown in the info box, or it can also be a string.",
												"text": "For example:\n```\ninfoValues = [{\n     label: \"Traffic\",\n     value: trafficText\n}];\n```\n"
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 267,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 684
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1748,
											"name": "infoHeight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The height of the hover info box"
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 307,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1749,
											"name": "infoMarkerRadius",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The radius of the dot at the end of the marker"
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 312,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1742,
											"name": "infoStyle",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The style of the info box itself and the connecting lines.\nTypically, this is an object where the key can describe\nthe stying of the stem, marker, box  and the text of the infoBox.\nThe style for each of them is in the form of CSS properties",
												"text": "For example:\n```\ninfoStyle = {\n     box: {\n         fill: \"black\",\n         color: \"#DDD\"\n     }\n}\n```\n"
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 285,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "EventMarkerStyle",
												"id": 499
											}
										},
										{
											"id": 1743,
											"name": "infoTimeFormat",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Alter the format of the timestamp shown on the info box.\nThis may be either a function or a string. If you provide a function\nthat will be passed an Index and should return a string. For example:\n```\nindex => moment(index.begin()).format(\"Do MMM 'YY\")\n```\nAlternatively you can pass in a d3 format string. That will be applied\nto the begin time of the Index range."
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 297,
													"character": 18
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1744,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1745,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1746,
																			"name": "date",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "BoxChart.tsx",
																	"line": 297,
																	"character": 20
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1747,
											"name": "infoWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The width of the hover info box"
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 302,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1752,
											"name": "innerSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If size is specified, then the innerBox will be this number of pixels wide. This\nprop takes priority over `spacing`."
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 334,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1750,
											"name": "innerSpacing",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If spacing is specified, then the boxes will be separated from the\ntimerange boundary by this number of pixels. Use this to space out\nthe boxes from each other. Inner and outer boxes are controlled\nseparately."
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 320,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1761,
											"name": "onHighlightChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A callback that will be called when the hovered over box changes.\nIt will be called with the event corresponding to the box hovered over."
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 372,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1762,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1763,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1764,
																	"name": "e",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Event",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "Index"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "BoxChart.tsx",
															"line": 372,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 1757,
											"name": "onSelectionChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A callback that will be called when the selection changes. It will be called\nwith the event corresponding to the box clicked as its only arg."
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 366,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1758,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1759,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1760,
																	"name": "e",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Event",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "Index"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "BoxChart.tsx",
															"line": 366,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 1753,
											"name": "outerSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If size is specified, then the outer box will be this number of pixels wide. This\nprop takes priority over `spacing`."
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 340,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1751,
											"name": "outerSpacing",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If spacing is specified, then the boxes will be separated from the\ntimerange boundary by this number of pixels. Use this to space out\nthe boxes from each other. Inner and outer boxes are controlled\nseparately."
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 328,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1754,
											"name": "selected",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The selected item, which will be rendered in the `selected` style.\nIf a bar is selected, all other bars will be rendered in the \"muted\" style.",
												"text": "See also `onSelectionChange`\n"
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 348,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Index"
													}
												]
											}
										},
										{
											"id": 1734,
											"name": "series",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "What [Pond TimeSeries](http://software.es.net/pond/#/class/timeseries)\ndata to visualize. See general notes on the BoxChart."
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 195,
													"character": 10
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "TimeSeries",
														"typeArguments": [
															{
																"type": "reference",
																"name": "Index"
															}
														]
													},
													{
														"type": "reference",
														"name": "TimeSeries",
														"typeArguments": [
															{
																"type": "reference",
																"name": "Time"
															}
														]
													}
												]
											}
										},
										{
											"id": 1737,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The style of the box chart drawing (using SVG CSS properties) or\na styler object. It is recommended to user the styler unless you need\ndetailed customization.",
												"text": "For example :\n```\nstyle = {[\n     {\n         normal: {},\n         highlighted: {},\n         selected: {},\n         muted: {}\n     }\n]};\n```\n\nUsing the styler is much easier\n```\nconst style = styler([{ key: \"temp\", color: \"steelblue\", width: 1, opacity: 0.5 }]);\n```\n"
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 252,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BoxChartStyle",
														"id": 426
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1738,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1739,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1740,
																			"name": "channel",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"name": "ChannelStyle"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "BoxChart.tsx",
																	"line": 252,
																	"character": 27
																}
															]
														}
													},
													{
														"type": "reference",
														"name": "Styler",
														"id": 613
													}
												]
											}
										},
										{
											"id": 1756,
											"name": "visible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "Show or hide this chart"
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 360,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1736,
												1735,
												1755,
												1741,
												1748,
												1749,
												1742,
												1743,
												1747,
												1752,
												1750,
												1761,
												1757,
												1753,
												1751,
												1754,
												1734,
												1737,
												1756
											]
										}
									],
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 190,
											"character": 40
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1716,
					"name": "BoxChartRanges",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines a structure that will hold the actual ranges to be plotted, whether they\ncome from the chart itself doing the aggregation or are supplied pre-baked from\nthe user."
					},
					"sources": [
						{
							"fileName": "BoxChart.tsx",
							"line": 77,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1717,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1718,
									"name": "center",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 78,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1720,
									"name": "innerMax",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 80,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1719,
									"name": "innerMin",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 79,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1722,
									"name": "outerMax",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 82,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1721,
									"name": "outerMin",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 81,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1718,
										1720,
										1719,
										1722,
										1721
									]
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 77,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 1727,
					"name": "getAggregatedSeries",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1728,
							"name": "getAggregatedSeries",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Takes in a TimeSeries and an AggregationSpec and builds a new TimeSeries<Index>\nwhich will be rendered by the chart. The `AggregationSpec` is a combination of\nthe windowing size to use (e.g. 5 minutes) and the reducer functions used to\nbuild the inner and outer ranges, along with the center. For example:\n```\n{\n   size: window(duration(\"5m\")),\n   reducers: {\n       outer: [min(), max()],\n       inner: [percentile(25), percentile(75)],\n       center: median()\n   }\n}\n```"
							},
							"parameters": [
								{
									"id": 1729,
									"name": "series",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TimeSeries",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Key"
											}
										]
									}
								},
								{
									"id": 1730,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1731,
									"name": "aggregation",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AggregationSpec",
										"id": 1699
									},
									"defaultValue": " defaultAggregation"
								}
							],
							"type": {
								"type": "reference",
								"name": "TimeSeries",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Index"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "BoxChart.tsx",
							"line": 154,
							"character": 28
						}
					]
				},
				{
					"id": 1723,
					"name": "getSeries",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1724,
							"name": "getSeries",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remaps a `TimeSeries<Index>` which is assumed to have an array of between 1 and 5 values\nat the `column` specified to a a new TimeSeries<Index>, where each Index is associated with\na structure containing outer and inner ranges along with center.",
								"text": "The input `TimeSeries` is the format the user should supply to the series if they want\nto pre-bake the ranges. The output `TimeSeries` is the format actually plotted. If the\nchart itself does the aggregation then this same output format will be generated by the\nfunction `getAggregatedSeries()` below.\n"
							},
							"parameters": [
								{
									"id": 1725,
									"name": "series",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TimeSeries",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Index"
											}
										]
									}
								},
								{
									"id": 1726,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "TimeSeries",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Index"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "BoxChart.tsx",
							"line": 95,
							"character": 18
						}
					]
				},
				{
					"id": 1707,
					"name": "defaultAggregation",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "The default version of the AggregationSpec, which will result in a classic\nBoxPlot with outer box being min to max, inner box being the 25th and 75th\npercentiles, and a marker at the center for the medium."
					},
					"children": [
						{
							"id": 1708,
							"name": "size",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 64,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Window"
							},
							"defaultValue": " window(duration(\"5m\"))"
						},
						{
							"id": 1709,
							"name": "reducers",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1712,
									"name": "center",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 68,
											"character": 14
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1713,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1714,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1715,
															"name": "values",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									},
									"defaultValue": " median()"
								},
								{
									"id": 1711,
									"name": "inner",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 67,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " [percentile(25), percentile(75)]"
								},
								{
									"id": 1710,
									"name": "outer",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 66,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " [min(), max()]"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1712,
										1711,
										1710
									]
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 65,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1708
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1709
							]
						}
					],
					"sources": [
						{
							"fileName": "BoxChart.tsx",
							"line": 63,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1580
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1699,
						1732,
						1716
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1727,
						1723
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1707
					]
				}
			],
			"sources": [
				{
					"fileName": "BoxChart.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1765,
			"name": "\"Brush\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/Brush.tsx",
			"children": [
				{
					"id": 1766,
					"name": "Brush",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a brush with the range defined in the prop `timeRange`."
					},
					"typeParameter": [
						{
							"id": 1802,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1771,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1772,
									"name": "new Brush",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1773,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BrushProps",
												"id": 1874
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Brush",
										"id": 1766
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 75,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1869,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1770,
							"name": "overlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 75,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "SVGRectElement"
							}
						},
						{
							"id": 1865,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1866,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1867,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1867
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BrushProps",
												"id": 1874
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1870,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1871,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1872,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1873,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1868,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BrushState",
										"id": 1884
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1860,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1861,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1862,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1863,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1864,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1776,
							"name": "handleBrushMouseDown",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1777,
									"name": "handleBrushMouseDown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1778,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 99,
									"character": 24
								}
							]
						},
						{
							"id": 1789,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1790,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Handles clearing the TimeRange if the user clicks on the overlay (but\ndoesn't drag to create a new brush). This will send a null as the\nnew TimeRange. The user of this code can react to that however they\nsee fit, but the most logical response is to reset the timerange to\nsome initial value. This behavior is optional."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 178,
									"character": 15
								}
							]
						},
						{
							"id": 1782,
							"name": "handleHandleMouseDown",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1783,
									"name": "handleHandleMouseDown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1784,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										},
										{
											"id": 1785,
											"name": "handle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 136,
									"character": 25
								}
							]
						},
						{
							"id": 1791,
							"name": "handleMouseMove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1792,
									"name": "handleMouseMove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1793,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 184,
									"character": 19
								}
							]
						},
						{
							"id": 1786,
							"name": "handleMouseUp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1787,
									"name": "handleMouseUp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1788,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 156,
									"character": 17
								}
							]
						},
						{
							"id": 1779,
							"name": "handleOverlayMouseDown",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1780,
									"name": "handleOverlayMouseDown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1781,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 118,
									"character": 26
								}
							]
						},
						{
							"id": 1800,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1801,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 400,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1796,
							"name": "renderBrush",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1797,
									"name": "renderBrush",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 286,
									"character": 15
								}
							]
						},
						{
							"id": 1798,
							"name": "renderHandles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1799,
									"name": "renderHandles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 342,
									"character": 17
								}
							]
						},
						{
							"id": 1794,
							"name": "renderOverlay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1795,
									"name": "renderOverlay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 248,
									"character": 17
								}
							]
						},
						{
							"id": 1847,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1848,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1849,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "BrushState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1850,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1851,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1852,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1853,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "BrushState",
																						"id": 1884
																					}
																				]
																			}
																		},
																		{
																			"id": 1854,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "BrushProps",
																				"id": 1874
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1855,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1856,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1857,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1858,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1859,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1774,
							"name": "viewport",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1775,
									"name": "viewport",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TimeRange"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 92,
									"character": 12
								}
							]
						},
						{
							"id": 1827,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1828,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1833,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1834,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1835,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushProps",
														"id": 1874
													}
												]
											}
										},
										{
											"id": 1836,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1842,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1843,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1844,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushProps",
														"id": 1874
													}
												]
											}
										},
										{
											"id": 1845,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushState",
														"id": 1884
													}
												]
											}
										},
										{
											"id": 1846,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1812,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1813,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1814,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1815,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1803,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1804,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1820,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1821,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1822,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushProps",
														"id": 1874
													}
												]
											}
										},
										{
											"id": 1823,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushState",
														"id": 1884
													}
												]
											}
										},
										{
											"id": 1824,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1825,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1826,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1829,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1830,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1831,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushProps",
														"id": 1874
													}
												]
											}
										},
										{
											"id": 1832,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1810,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1811,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1837,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1838,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1839,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushProps",
														"id": 1874
													}
												]
											}
										},
										{
											"id": 1840,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushState",
														"id": 1884
													}
												]
											}
										},
										{
											"id": 1841,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1816,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1817,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1818,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushProps",
														"id": 1874
													}
												]
											}
										},
										{
											"id": 1819,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushState",
														"id": 1884
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1805,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1806,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1807,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushProps",
														"id": 1874
													}
												]
											}
										},
										{
											"id": 1808,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushState",
														"id": 1884
													}
												]
											}
										},
										{
											"id": 1809,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1767,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1769,
									"name": "allowSelectionClear",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 72,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 1768,
									"name": "handleSize",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 71,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "6"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1769,
										1768
									]
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 70,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1771
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1869,
								1770,
								1865,
								1870,
								1868
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1860,
								1776,
								1789,
								1782,
								1791,
								1786,
								1779,
								1800,
								1796,
								1798,
								1794,
								1847,
								1774,
								1827,
								1833,
								1842,
								1812,
								1803,
								1820,
								1825,
								1829,
								1810,
								1837,
								1816,
								1805
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1767
							]
						}
					],
					"sources": [
						{
							"fileName": "Brush.tsx",
							"line": 69,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "BrushProps",
									"id": 1874
								},
								{
									"type": "reference",
									"name": "BrushState",
									"id": 1884
								}
							]
						}
					]
				},
				{
					"id": 1874,
					"name": "BrushProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Brush.tsx",
							"line": 19,
							"character": 22
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 168
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1875,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1879,
											"name": "allowSelectionClear",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Handles clearing the TimeRange"
											},
											"sources": [
												{
													"fileName": "Brush.tsx",
													"line": 45,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1878,
											"name": "handleSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The size of the invisible side handles. Defaults to 6 pixels."
											},
											"sources": [
												{
													"fileName": "Brush.tsx",
													"line": 40,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1880,
											"name": "onTimeRangeChanged",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A callback which will be called if the brush range is changed by\nthe user. It is called with a Pond TimeRange object. Note that if\n`allowSelectionClear` is set to true, then this can also be called\nwhen the user performs a simple click outside the brush area. In\nthis case it will be called with null as the TimeRange. You can\nuse this to reset the selection, perhaps to some initial range."
											},
											"sources": [
												{
													"fileName": "Brush.tsx",
													"line": 55,
													"character": 22
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1881,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1882,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1883,
																	"name": "d",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TimeRange"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "Brush.tsx",
															"line": 55,
															"character": 24
														}
													]
												}
											}
										},
										{
											"id": 1876,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The brush is rendered as an SVG rect. You can specify the style\nof this rect using this prop."
											},
											"sources": [
												{
													"fileName": "Brush.tsx",
													"line": 24,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "CSSProperties"
											}
										},
										{
											"id": 1877,
											"name": "timeRange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The timerange for the brush. Typically you would maintain this\nas state on the surrounding page, since it would likely control\nanother page element, such as the range of the main chart. See\nalso `onTimeRangeChanged()` for receiving notification of the\nbrush range being changed by the user.",
												"text": "Takes a [Pond TimeRange](http://software.es.net/pond/#/class/timerange) object.\n"
											},
											"sources": [
												{
													"fileName": "Brush.tsx",
													"line": 35,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "TimeRange"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1879,
												1878,
												1880,
												1876,
												1877
											]
										}
									],
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 19,
											"character": 37
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1884,
					"name": "BrushState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Brush.tsx",
							"line": 58,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1885,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1887,
									"name": "brushingInitializationSite",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 60,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1888,
									"name": "initialBrushBeginTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 61,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1889,
									"name": "initialBrushEndTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 62,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1890,
									"name": "initialBrushXYPosition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 63,
											"character": 26
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 1886,
									"name": "isBrushing",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 59,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1887,
										1888,
										1889,
										1890,
										1886
									]
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 58,
									"character": 24
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1766
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1874,
						1884
					]
				}
			],
			"sources": [
				{
					"fileName": "Brush.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2585,
			"name": "\"ChartContainer\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/ChartContainer.tsx",
			"children": [
				{
					"id": 2586,
					"name": "ShowGridPosition",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2587,
							"name": "Over",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 58,
									"character": 8
								}
							],
							"defaultValue": "\"OVER\""
						},
						{
							"id": 2588,
							"name": "Under",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 59,
									"character": 9
								}
							],
							"defaultValue": "\"UNDER\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								2587,
								2588
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 57,
							"character": 28
						}
					]
				},
				{
					"id": 2589,
					"name": "ChartContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `<ChartContainer>` is the outer most element of a chart and is\nresponsible for generating and arranging its sub-elements. Specifically,\nit is a container for one or more `<ChartRows>` (each of which contains\ncharts, axes etc) and in addition it manages the overall time range of\nthe chart and so also is responsible for the time axis, which is always\nshared by all the rows.",
						"text": "Here is an example:\n\n```xml\n<ChartContainer timeRange={audSeries.timerange()} width=\"800\">\n    <ChartRow>\n        ...\n    </ChartRow>\n    <ChartRow>\n        ...\n    </ChartRow>\n</ChartContainer>\n```\n"
					},
					"typeParameter": [
						{
							"id": 2625,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2626,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2671,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2603,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2604,
									"name": "new ChartContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2605,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChartContainerProps",
												"id": 2715
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChartContainer",
										"id": 2589
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 342,
									"character": 20
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2694,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2599,
							"name": "leftWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 339,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2690,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2691,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2692,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2692
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ChartContainerProps",
												"id": 2715
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2695,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2696,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2697,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2698,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2600,
							"name": "rightWidth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 340,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2693,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2602,
							"name": "svg",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 342,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "SVGElement"
							}
						},
						{
							"id": 2601,
							"name": "timeScale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 341,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "ScaleTime",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 2685,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2686,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2687,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2688,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2689,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2618,
							"name": "handleBackgroundClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2619,
									"name": "handleBackgroundClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called from the EventHandler (onMouseClick callback) when the user clicks on\nan area without a chart."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 401,
									"character": 25
								}
							]
						},
						{
							"id": 2612,
							"name": "handleMouseMove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2613,
									"name": "handleMouseMove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called from the EventHandler.onMouseMove with the cursor\nposition as a Date."
									},
									"parameters": [
										{
											"id": 2614,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2615,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 382,
									"character": 19
								}
							]
						},
						{
							"id": 2616,
							"name": "handleMouseOut",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2617,
									"name": "handleMouseOut",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called from the EventHandler.onMouseOut when the cursor leaves\nthe chart area."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 393,
									"character": 18
								}
							]
						},
						{
							"id": 2609,
							"name": "handleTimeRangeChanged",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2610,
									"name": "handleTimeRangeChanged",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Within the charts library the time range of the x axis is kept as a begin\nand end time (Javascript Date objects). But the interface is Pond based,\nso this callback returns a Pond TimeRange."
									},
									"parameters": [
										{
											"id": 2611,
											"name": "timerange",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TimeRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 372,
									"character": 26
								}
							]
						},
						{
							"id": 2606,
							"name": "handleTrackerChanged",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2607,
									"name": "handleTrackerChanged",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2608,
											"name": "t",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 356,
									"character": 24
								}
							]
						},
						{
							"id": 2620,
							"name": "handleZoom",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2621,
									"name": "handleZoom",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2622,
											"name": "timerange",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TimeRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 407,
									"character": 14
								}
							]
						},
						{
							"id": 2623,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2624,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 413,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2672,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2673,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2674,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2675,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2676,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2677,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2678,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 2679,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ChartContainerProps",
																				"id": 2715
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2680,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2681,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2682,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2683,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2684,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2651,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2652,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2657,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2658,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2659,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartContainerProps",
														"id": 2715
													}
												]
											}
										},
										{
											"id": 2660,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2666,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2667,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2668,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartContainerProps",
														"id": 2715
													}
												]
											}
										},
										{
											"id": 2669,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2670,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2636,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2637,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2638,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2639,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2627,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2628,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2644,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2645,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2646,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartContainerProps",
														"id": 2715
													}
												]
											}
										},
										{
											"id": 2647,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2648,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2649,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2650,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2653,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2654,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2655,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartContainerProps",
														"id": 2715
													}
												]
											}
										},
										{
											"id": 2656,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2634,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2635,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2661,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2662,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2663,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartContainerProps",
														"id": 2715
													}
												]
											}
										},
										{
											"id": 2664,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2665,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2640,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2641,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2642,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartContainerProps",
														"id": 2715
													}
												]
											}
										},
										{
											"id": 2643,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2629,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2630,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2631,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartContainerProps",
														"id": 2715
													}
												]
											}
										},
										{
											"id": 2632,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2633,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2590,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2598,
									"name": "chartAxisStyle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 336,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									},
									"defaultValue": " defaultChartAxisStyle"
								},
								{
									"id": 2594,
									"name": "enableDragZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 332,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 2593,
									"name": "enablePanZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 331,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 2592,
									"name": "padding",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 330,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 2596,
									"name": "showGrid",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 334,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 2597,
									"name": "showGridPosition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 335,
											"character": 24
										}
									],
									"type": {
										"type": "reference",
										"name": "Over",
										"id": 2587
									},
									"defaultValue": " ShowGridPosition.Over"
								},
								{
									"id": 2595,
									"name": "timezone",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 333,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"local\""
								},
								{
									"id": 2591,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 329,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "800"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2598,
										2594,
										2593,
										2592,
										2596,
										2597,
										2595,
										2591
									]
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 328,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2603
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2694,
								2599,
								2690,
								2695,
								2600,
								2693,
								2602,
								2601
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2685,
								2618,
								2612,
								2616,
								2609,
								2606,
								2620,
								2623,
								2672,
								2651,
								2657,
								2666,
								2636,
								2627,
								2644,
								2649,
								2653,
								2634,
								2661,
								2640,
								2629
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2590
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 327,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ChartContainerProps",
									"id": 2715
								}
							]
						}
					]
				},
				{
					"id": 2715,
					"name": "ChartContainerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 62,
							"character": 31
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 168
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2716,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2729,
											"name": "chartAxisStyle",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Refers to the styling of the axis generated by the Chart Container"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 171,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2717,
											"name": "children",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "Children of the ChartContainer should be ChartRows."
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 66,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2731,
											"name": "enableDragZoom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Boolean to turn on interactive drag to zoom behavior for the chart."
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 181,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2730,
											"name": "enablePanZoom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Boolean to turn on interactive pan and zoom behavior for the chart."
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 176,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2740,
											"name": "leftWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 204,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2722,
											"name": "maxTime",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Constrain the timerange to not move forward in time than this Date. A\ncommon example is setting this to the current time or the end time\nof a fixed set of data."
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 98,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2732,
											"name": "minDuration",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If this is set the timerange of the chart cannot be zoomed in further\nthan this duration, in milliseconds. This might be determined by the\nresolution of your data."
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 188,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2721,
											"name": "minTime",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Constrain the timerange to not move back in time further than this Date."
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 91,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2760,
											"name": "onBackgroundClick",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Called when the user clicks the background plane of the chart. This is\nuseful when deselecting elements."
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 281,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2761,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2762,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "ChartContainer.tsx",
															"line": 281,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 2763,
											"name": "onMouseMove",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 283,
													"character": 15
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2764,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2765,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2766,
																	"name": "x",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2767,
																	"name": "y",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "ChartContainer.tsx",
															"line": 283,
															"character": 17
														}
													]
												}
											}
										},
										{
											"id": 2756,
											"name": "onTimeRangeChanged",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This will be called if the user pans and/or zooms the chart. The callback\nwill be called with the new TimeRange. This can be fed into the timeRange\nprop as well as used elsewhere on the greater page. Typical use might look\nlike this:\n```\n  <ChartContainer\n    onTimeRangeChanged={(timerange) => this.setState({timerange})}\n    timeRange={this.state.timerange}\n    ... />\n```"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 275,
													"character": 22
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2757,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2758,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2759,
																	"name": "timerange",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "TimeRange"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "ChartContainer.tsx",
															"line": 275,
															"character": 24
														}
													]
												}
											}
										},
										{
											"id": 2748,
											"name": "onTrackerChanged",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Will be called when the user hovers over a chart. The callback will\nbe called with the timestamp (a Date object) of the position hovered\nover as well as the current time axis' time scale. The timestamp may\nbe used as the trackerPosition (see above), or to provide information\nabout the time hovered over within the greater page. The time scale\nmay be used to translate the timestamp into an x coordinate, which\ncan then be used to position arbitrary components in sync with the\ncurrent tracker position.\nCommonly we might do something like this:\n```\n  <ChartContainer\n    onTrackerChanged={(tracker) => this.setState({tracker})}\n    trackerPosition={this.state.tracker}\n    ... />\n```"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 261,
													"character": 20
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2749,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2750,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2751,
																	"name": "time",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Date"
																	}
																},
																{
																	"id": 2752,
																	"name": "number",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 2753,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"signatures": [
																				{
																					"id": 2754,
																					"name": "__call",
																					"kind": 4096,
																					"kindString": "Call signature",
																					"flags": {},
																					"parameters": [
																						{
																							"id": 2755,
																							"name": "t",
																							"kind": 32768,
																							"kindString": "Parameter",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "any"
																							}
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"sources": [
																				{
																					"fileName": "ChartContainer.tsx",
																					"line": 261,
																					"character": 43
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "ChartContainer.tsx",
															"line": 261,
															"character": 22
														}
													]
												}
											}
										},
										{
											"id": 2734,
											"name": "padding",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Padding to add"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 198,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2738,
											"name": "paddingBottom",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 202,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2735,
											"name": "paddingLeft",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 199,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2736,
											"name": "paddingRight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 200,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2737,
											"name": "paddingTop",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 201,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2741,
											"name": "rightWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 205,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2742,
											"name": "showGrid",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Show grid lines for each time marker"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 210,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2743,
											"name": "showGridPosition",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Defines whether grid is overlayed (`over`) or underlayed (`under`)\nwith respect to the charts"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 216,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "ShowGridPosition",
												"id": 2586
											}
										},
										{
											"id": 2771,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Style the chart container"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 303,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "CSSProperties"
											}
										},
										{
											"id": 2728,
											"name": "timeAxisAngledLabels",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Angle the time axis labels"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 166,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2739,
											"name": "timeAxisHeight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 203,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2727,
											"name": "timeAxisStyle",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Object specifying the CSS by which the `TimeAxis` can be styled. The object can contain:\n`values` (the time values), `axis` (the main horizontal line), `label` and `ticks`\n(which may optionally extend the height of all chart rows using the `showGrid` prop).\nEach of these is an inline CSS style applied to the axis label, axis values, axis line and ticks\nrespectively.",
												"text": "For example:\n```\nconst timeAxisStyle = {\n ticks: {\n     stroke: \"#AAA\",\n     opacity: 0.25,\n     strokeDasharray: \"1,1\"\n  },\n  values: {\n     fill: \"#AAA\",\n     fontSize: 12\n  }\n}\n```\n"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 161,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "TimeAxisStyle",
												"id": 591
											}
										},
										{
											"id": 2723,
											"name": "timeFormat",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The format for the tick labels.",
												"text": "The default it to compute this automatically. You can also specify this\nas a string or function.\n\nSix special options exist, specified as a string: setting format to:\n * \"second\",\n * \"hour\"\n * \"day\"\n * \"month\"\n * \"year\"\n\nwill show only ticks on those, and every one of those intervals.\n\nFor example maybe you are showing a bar chart for October 2014 then setting\nthe format to \"day\" will insure that a label is placed for each and every day,\nall 31 of them. Be careful though, it's easy to add too many labels this way.\n\nThe last string option is:\n * \"duration\".\n\nThis interprets the time as a duration. This is good for data that is\nspecified relative to its start time, rather than as an actual date/time.\n\nFinally, format can also be a function. The function will be passed the date\nit is rendering. It expects the return result to be a an object describing\nthe resulting tick. For example:\n\n```js\nformat = (d) => ({\n     label: moment(d).format(h:mm a),\n     size: 15,\n     labelAlign: \"adjacent\"\n});\n```\n"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 137,
													"character": 14
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2724,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2725,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2726,
																			"name": "d",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "ChartContainer.tsx",
																	"line": 137,
																	"character": 25
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 2718,
											"name": "timeRange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "A [Pond TimeRange](http://software.es.net/pond/#/class/timerange) representing the\nbegin and end time of the chart."
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 72,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "TimeRange"
											}
										},
										{
											"id": 2719,
											"name": "timezone",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Should the time axis use a UTC scale, local or any other"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 77,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2768,
											"name": "title",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Specify the title of the chart"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 288,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2769,
											"name": "titleHeight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Define the height of the title label"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 293,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2770,
											"name": "titleStyle",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Define the styling of the chart's title"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 298,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "CSSProperties"
											}
										},
										{
											"id": 2745,
											"name": "trackerInfo",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Info box value or values to place next to the tracker line.\nThis is either an array of objects, with each object\nspecifying the label and value to be shown in the info box,\nor a simple string."
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 232,
													"character": 15
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 684
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 2747,
											"name": "trackerInfoHeight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The height of the tracker info box"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 242,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2746,
											"name": "trackerInfoWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The width of the tracker info box"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 237,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2744,
											"name": "trackerTime",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A Date specifying the position of the tracker line on the chart. It is\ncommon to take this from the onTrackerChanged callback so that the tracker\nfollowers the user's cursor, but it could be modified to snap to a point or\nto the nearest minute, for example."
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 224,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2733,
											"name": "transition",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Time in milliseconds to transition from one Y-scale to the next"
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 193,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2720,
											"name": "width",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The width of the chart. This library also includes a <Resizable> component\nthat can be wrapped around a `<ChartContainer>`. The purpose of this is to\ninject a width prop into the ChartContainer so that it will fit the\nsurrounding element. This is very handy when you need the chart to resize\nbased on a responsive layout."
											},
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 86,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2729,
												2717,
												2731,
												2730,
												2740,
												2722,
												2732,
												2721,
												2760,
												2763,
												2756,
												2748,
												2734,
												2738,
												2735,
												2736,
												2737,
												2741,
												2742,
												2743,
												2771,
												2728,
												2739,
												2727,
												2723,
												2718,
												2719,
												2768,
												2769,
												2770,
												2745,
												2747,
												2746,
												2744,
												2733,
												2720
											]
										}
									],
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 62,
											"character": 46
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2712,
					"name": "StyleTargetKeys",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 54,
							"character": 27
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"name": "StyleTargets"
						}
					}
				},
				{
					"id": 2708,
					"name": "StyleTargets",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 49,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2709,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2711,
									"name": "axis",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 51,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2710,
									"name": "labels",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 50,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2711,
										2710
									]
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 49,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 2713,
					"name": "TimeAxisStyleType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 55,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2714,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 55,
									"character": 31
								}
							]
						}
					}
				},
				{
					"id": 2699,
					"name": "defaultChartAxisStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 2700,
							"name": "fill",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 37,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"none\""
						},
						{
							"id": 2702,
							"name": "pointerEvents",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 39,
									"character": 17
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "none"
							},
							"defaultValue": "\"none\""
						},
						{
							"id": 2701,
							"name": "stroke",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 38,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#C0C0C0\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								2700,
								2702,
								2701
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 36,
							"character": 27
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 2703,
					"name": "defaultTitleStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 2707,
							"name": "fill",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 46,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#C0C0C0\""
						},
						{
							"id": 2706,
							"name": "font",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 45,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\"Goudy Bookletter 1911\", sans-serif\"\""
						},
						{
							"id": 2705,
							"name": "fontSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 44,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "14"
						},
						{
							"id": 2704,
							"name": "fontWeight",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 43,
									"character": 14
								}
							],
							"type": {
								"type": "unknown",
								"name": "100"
							},
							"defaultValue": "100"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								2707,
								2706,
								2705,
								2704
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 42,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						2586
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2589
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2715,
						2712,
						2708,
						2713
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						2699,
						2703
					]
				}
			],
			"sources": [
				{
					"fileName": "ChartContainer.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2280,
			"name": "\"ChartRow\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/ChartRow.tsx",
			"children": [
				{
					"id": 2281,
					"name": "ChartRow",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A ChartRow is a container for a set of YAxis and multiple charts\nwhich are overlaid on each other in a central canvas.",
						"text": "Here is an example where a single `<ChartRow>` is defined within\nthe `<ChartContainer>`. Of course you can have any number of rows.\n\nFor this row we specify the one prop `height` as 200 pixels high.\n\nWithin the `<ChartRow>` we add:\n\n* `<YAxis>` elements for axes to the left of the chart\n* `<Chart>` block containing our central chart area\n* `<YAxis>` elements for our axes to the right of the charts\n\n```\n<ChartContainer timeRange={audSeries.timerange()}>\n    <ChartRow height=\"200\">\n        <YAxis />\n        <YAxis />\n        <Charts>\n            charts...\n       </Charts>\n        <YAxis />\n    </ChartRow>\n</ChartContainer>\n```\n"
					},
					"typeParameter": [
						{
							"id": 2307,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2291,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2292,
									"name": "new ChartRow",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2293,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChartRowProps",
												"id": 2388
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChartRow",
										"id": 2281
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 238,
									"character": 63
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2374,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2370,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2371,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2372,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2372
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ChartRowProps",
												"id": 2388
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2375,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2376,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2377,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2378,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2287,
							"name": "scaleInterpolatorMap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 238,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2288,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2289,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2290,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ScaleInterpolator",
											"id": 26
										}
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 238,
											"character": 25
										}
									]
								}
							}
						},
						{
							"id": 2373,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartRowState",
										"id": 2430
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2300,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2301,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 307,
									"character": 22
								}
							]
						},
						{
							"id": 2302,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2303,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "When we get changes to the row's props we update our map of\naxis scales."
									},
									"parameters": [
										{
											"id": 2304,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChartRowProps",
												"id": 2388
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 321,
									"character": 29
								}
							]
						},
						{
							"id": 2365,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2366,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2367,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2368,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2369,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2294,
							"name": "isChildYAxis",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2295,
									"name": "isChildYAxis",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2296,
											"name": "child",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ReactElement",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 255,
									"character": 16
								}
							]
						},
						{
							"id": 2305,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2306,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 325,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2352,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2353,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2354,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "ChartRowState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2355,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2356,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2357,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2358,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "ChartRowState",
																						"id": 2430
																					}
																				]
																			}
																		},
																		{
																			"id": 2359,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ChartRowProps",
																				"id": 2388
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2360,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2361,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2362,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2363,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2364,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2297,
							"name": "updateScales",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2298,
									"name": "updateScales",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2299,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChartRowProps",
												"id": 2388
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 259,
									"character": 16
								}
							]
						},
						{
							"id": 2332,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2333,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2338,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2339,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2340,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowProps",
														"id": 2388
													}
												]
											}
										},
										{
											"id": 2341,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2347,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2348,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2349,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowProps",
														"id": 2388
													}
												]
											}
										},
										{
											"id": 2350,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowState",
														"id": 2430
													}
												]
											}
										},
										{
											"id": 2351,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2317,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2318,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2319,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2320,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2308,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2309,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2325,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2326,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2327,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowProps",
														"id": 2388
													}
												]
											}
										},
										{
											"id": 2328,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowState",
														"id": 2430
													}
												]
											}
										},
										{
											"id": 2329,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2330,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2331,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2334,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2335,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2336,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowProps",
														"id": 2388
													}
												]
											}
										},
										{
											"id": 2337,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2315,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2316,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2342,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2343,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2344,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowProps",
														"id": 2388
													}
												]
											}
										},
										{
											"id": 2345,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowState",
														"id": 2430
													}
												]
											}
										},
										{
											"id": 2346,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2321,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2322,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2323,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowProps",
														"id": 2388
													}
												]
											}
										},
										{
											"id": 2324,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowState",
														"id": 2430
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2310,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2311,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2312,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowProps",
														"id": 2388
													}
												]
											}
										},
										{
											"id": 2313,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowState",
														"id": 2430
													}
												]
											}
										},
										{
											"id": 2314,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2282,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2284,
									"name": "enablePanZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 232,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 2285,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 233,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								},
								{
									"id": 2283,
									"name": "trackerTimeFormat",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 231,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"%b %d %Y %X\""
								},
								{
									"id": 2286,
									"name": "visible",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 234,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2284,
										2285,
										2283,
										2286
									]
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 230,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2291
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2374,
								2370,
								2375,
								2287,
								2373
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2300,
								2302,
								2365,
								2294,
								2305,
								2352,
								2297,
								2332,
								2338,
								2347,
								2317,
								2308,
								2325,
								2330,
								2334,
								2315,
								2342,
								2321,
								2310
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2282
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartRow.tsx",
							"line": 229,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ChartRowProps",
									"id": 2388
								},
								{
									"type": "reference",
									"name": "ChartRowState",
									"id": 2430
								}
							]
						}
					]
				},
				{
					"id": 2388,
					"name": "ChartRowProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ChartRow.tsx",
							"line": 68,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2389,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2390,
									"name": "children",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 69,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2413,
									"name": "enablePanZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Boolean to turn on interactive pan and zoom behavior for the chart."
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 142,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2392,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The height of the row."
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 79,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2407,
									"name": "leftAxisWidths",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 124,
											"character": 18
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 2415,
									"name": "maxTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Constrain the timerange to not move forward in time than this Date. A\ncommon example is setting this to the current time or the end time\nof a fixed set of data."
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 154,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 2416,
									"name": "minDuration",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If this is set the timerange of the chart cannot be zoomed in further\nthan this duration, in milliseconds. This might be determined by the\nresolution of your data."
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 161,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2414,
									"name": "minTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Constrain the timerange to not move back in time further than this Date."
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 147,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 2418,
									"name": "onTimeRangeChanged",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"comment": {
										"shortText": "This will be called if the user pans and/or zooms the chart. The callback\nwill be called with the new TimeRange. This can be fed into the timeRange\nprop as well as used elsewhere on the greater page."
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 174,
											"character": 22
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2419,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2420,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2421,
															"name": "timeRange",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "TimeRange"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartRow.tsx",
													"line": 174,
													"character": 23
												}
											]
										}
									}
								},
								{
									"id": 2422,
									"name": "onTrackerChanged",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"comment": {
										"shortText": "Will be called when the user hovers over a chart. The callback will\nbe called with the timestamp (a Date object) of the position hovered\nover as well as the current time axis' time scale. The timestamp may\nbe used as the trackerPosition (see above), or to provide information\nabout the time hovered over within the greater page. The time scale\nmay be used to translate the timestamp into an x coordinate, which\ncan then be used to position arbitrary components in sync with the\ncurrent tracker position."
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 186,
											"character": 20
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2423,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2424,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2425,
															"name": "time",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Date"
															}
														},
														{
															"id": 2426,
															"name": "number",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2427,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 2428,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 2429,
																					"name": "t",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartRow.tsx",
																			"line": 186,
																			"character": 42
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartRow.tsx",
													"line": 186,
													"character": 21
												}
											]
										}
									}
								},
								{
									"id": 2409,
									"name": "paddingLeft",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 126,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2410,
									"name": "paddingRight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 127,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2408,
									"name": "rightAxisWidths",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 125,
											"character": 19
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 2417,
									"name": "showGrid",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show grid lines for each time marker"
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 166,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2399,
									"name": "timeFormat",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The format to display the time of the marker in"
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 99,
											"character": 14
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2400,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2401,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2402,
																	"name": "d",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Date"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"sources": [
														{
															"fileName": "ChartRow.tsx",
															"line": 99,
															"character": 25
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 2393,
									"name": "timeScale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The timeScale supplied by the surrounding ChartContainer"
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 84,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "ScaleTime",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 2405,
									"name": "trackerInfoHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The height of the tracker info box"
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 114,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2406,
									"name": "trackerInfoValues",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Info box value or values to place next to the tracker line\nThis is either an array of objects, with each object\nspecifying the label (a string) and value (also a string)\nto be shown in the info box, or a simple string label."
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 122,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "LabelValueList",
												"id": 684
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 2404,
									"name": "trackerInfoWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The width of the tracker info box"
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 109,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2403,
									"name": "trackerShowTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Should the time be shown on top of the tracker info box"
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 104,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2394,
									"name": "trackerTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A Javascript Date object to position the marker"
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 89,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 2395,
									"name": "trackerTimeFormat",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The format to display the time of the marker in"
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 94,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2396,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2397,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2398,
																	"name": "d",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Date"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"sources": [
														{
															"fileName": "ChartRow.tsx",
															"line": 94,
															"character": 32
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 2411,
									"name": "transition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"comment": {
										"shortText": "Time in milliseconds to transition from one transition to the next"
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 132,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2412,
									"name": "visible",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show or hide this row"
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 137,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2391,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The width of the row."
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 74,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2390,
										2413,
										2392,
										2407,
										2415,
										2416,
										2414,
										2418,
										2422,
										2409,
										2410,
										2408,
										2417,
										2399,
										2393,
										2405,
										2406,
										2404,
										2403,
										2394,
										2395,
										2411,
										2412,
										2391
									]
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 68,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 2430,
					"name": "ChartRowState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "ChartRow.tsx",
							"line": 192,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2431,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2436,
									"name": "clipId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 194,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2437,
									"name": "clipPathURL",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 195,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2432,
									"name": "yAxisScalerMap",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 193,
											"character": 18
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2433,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 2434,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 2435,
														"name": "key",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"name": "ScalerFunction",
													"id": 64
												}
											},
											"sources": [
												{
													"fileName": "ChartRow.tsx",
													"line": 193,
													"character": 20
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2436,
										2437,
										2432
									]
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 192,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 2445,
					"name": "ElementMap",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ChartRow.tsx",
							"line": 199,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2446,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 2447,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 2448,
										"name": "id",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "ReactElement",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									]
								}
							},
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 199,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 2438,
					"name": "ScalarMap",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ChartRow.tsx",
							"line": 198,
							"character": 21
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2439,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 2440,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 2441,
										"name": "id",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reflection",
									"declaration": {
										"id": 2442,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"signatures": [
											{
												"id": 2443,
												"name": "__call",
												"kind": 4096,
												"kindString": "Call signature",
												"flags": {},
												"parameters": [
													{
														"id": 2444,
														"name": "v",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"sources": [
											{
												"fileName": "ChartRow.tsx",
												"line": 198,
												"character": 39
											}
										]
									}
								}
							},
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 198,
									"character": 23
								}
							]
						}
					}
				},
				{
					"id": 2379,
					"name": "AXIS_MARGIN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "ChartRow.tsx",
							"line": 31,
							"character": 17
						}
					],
					"type": {
						"type": "unknown",
						"name": "5"
					},
					"defaultValue": "5"
				},
				{
					"id": 2380,
					"name": "createScale",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2381,
							"name": "createScale",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Given an axis props create a d3 scale"
							},
							"parameters": [
								{
									"id": 2382,
									"name": "yaxis",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ReactElement",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								},
								{
									"id": 2383,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2384,
									"name": "min",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2385,
									"name": "max",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2386,
									"name": "y0",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2387,
									"name": "y1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Scale",
								"id": 158
							}
						}
					],
					"sources": [
						{
							"fileName": "ChartRow.tsx",
							"line": 36,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2281
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2388,
						2430,
						2445,
						2438
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2379
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2380
					]
				}
			],
			"sources": [
				{
					"fileName": "ChartRow.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 72,
			"name": "\"Charts\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/Charts.tsx",
			"children": [
				{
					"id": 73,
					"name": "ScaleType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 74,
							"name": "Linear",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Charts.tsx",
									"line": 26,
									"character": 10
								}
							],
							"defaultValue": "\"LINEAR\""
						},
						{
							"id": 76,
							"name": "Log",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Charts.tsx",
									"line": 28,
									"character": 7
								}
							],
							"defaultValue": "\"LOG\""
						},
						{
							"id": 75,
							"name": "Power",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Charts.tsx",
									"line": 27,
									"character": 9
								}
							],
							"defaultValue": "\"POWER\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								74,
								76,
								75
							]
						}
					],
					"sources": [
						{
							"fileName": "Charts.tsx",
							"line": 25,
							"character": 21
						}
					]
				},
				{
					"id": 77,
					"name": "Charts",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `<Charts>` element is a grouping for charts within a row.\nIt takes no props. Each chart within the group will be overlaid\non top of each other.",
						"text": "Here is an example of two line charts within a `<Charts>` group:\n\n```xml\n<ChartContainer timeRange={audSeries.timerange()}>\n    <ChartRow height=\"200\">\n        <YAxis/>\n        <Charts>\n            <LineChart axis=\"aud\" series={audSeries} style={audStyle}/>\n            <LineChart axis=\"euro\" series={euroSeries} style={euroStyle}/>\n        </Charts>\n        <YAxis/>\n    </ChartRow>\n</ChartContainer>\n```\n\n## Making your own chart\n\nAnything within this grouping is considered a chart, meaning it will have\ncertain props injected into it. As a result you can easily implement your own chart\nby simply expecting to have these props available and rendering as such.\n\nFor your own chart, the render() method should return a SVG group `<g>` at the\ntop level, and then your chart rendering within that.\n\nIn addition to any props you add to your chart, the following props are passed into\neach chart automatically:\n\n#### timeScale\n\nA d3 scale for the time axis which you can use to transform your data in the x direction\n\n#### yScale\n\nA d3 scale for the y-axis which you can use to transform your data in the y direction\n\n#### width\n\nA the width your chart will render into\n"
					},
					"typeParameter": [
						{
							"id": 80,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 81,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 126,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 127,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 128,
									"name": "new Charts",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 129,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChartsProps",
												"id": 180
											}
										},
										{
											"id": 130,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Charts",
										"id": 77
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 153,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 149,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 150,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 151,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																151
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ChartsProps",
												"id": 180
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 154,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 155,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 156,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 157,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 152,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 144,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 145,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 146,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 147,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 148,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 78,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 79,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "Charts.tsx",
									"line": 132,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 131,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 132,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 133,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 134,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 135,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 136,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 137,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 138,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ChartsProps",
																				"id": 180
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 139,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 140,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 141,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 142,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 143,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 106,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 107,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 112,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 113,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 114,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartsProps",
														"id": 180
													}
												]
											}
										},
										{
											"id": 115,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 121,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 122,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 123,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartsProps",
														"id": 180
													}
												]
											}
										},
										{
											"id": 124,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 125,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 91,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 92,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 93,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 94,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 82,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 83,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 99,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 100,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 101,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartsProps",
														"id": 180
													}
												]
											}
										},
										{
											"id": 102,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 103,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 104,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 105,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 108,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 109,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 110,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartsProps",
														"id": 180
													}
												]
											}
										},
										{
											"id": 111,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 89,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 90,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 116,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 117,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 118,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartsProps",
														"id": 180
													}
												]
											}
										},
										{
											"id": 119,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 120,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 95,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 96,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 97,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartsProps",
														"id": 180
													}
												]
											}
										},
										{
											"id": 98,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 84,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 85,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 86,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartsProps",
														"id": 180
													}
												]
											}
										},
										{
											"id": 87,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 88,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								127
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								153,
								149,
								154,
								152
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								144,
								78,
								131,
								106,
								112,
								121,
								91,
								82,
								99,
								104,
								108,
								89,
								116,
								95,
								84
							]
						}
					],
					"sources": [
						{
							"fileName": "Charts.tsx",
							"line": 131,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ChartsProps",
									"id": 180
								}
							]
						}
					]
				},
				{
					"id": 159,
					"name": "AxisProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Charts.tsx",
							"line": 31,
							"character": 21
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 160,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 166,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 37,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 162,
									"name": "id",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 33,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 163,
									"name": "max",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 34,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 164,
									"name": "min",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 35,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 165,
									"name": "transition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 36,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 161,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 32,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "ScaleType",
										"id": 73
									}
								},
								{
									"id": 167,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 38,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										166,
										162,
										163,
										164,
										165,
										161,
										167
									]
								}
							],
							"sources": [
								{
									"fileName": "Charts.tsx",
									"line": 31,
									"character": 23
								}
							]
						}
					}
				},
				{
					"id": 168,
					"name": "ChartProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Charts.tsx",
							"line": 45,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 169,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 172,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "[Internal] The height supplied by the surrounding ChartContainer"
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 56,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 170,
									"name": "key",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 46,
											"character": 7
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 175,
									"name": "timeFormat",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The format to display the time of the marker in"
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 71,
											"character": 14
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 176,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 177,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 178,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "Charts.tsx",
															"line": 71,
															"character": 25
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 173,
									"name": "timeScale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "[Internal] The timeScale supplied by the surrounding ChartContainer"
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 61,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "ScaleTime",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 179,
									"name": "transition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Time in milliseconds to transition from one transition to the next"
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 76,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 171,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "[Internal] The width supplied by the surrounding ChartContainer"
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 51,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 174,
									"name": "yScale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "[Internal] The yScale supplied by the associated YAxis"
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 66,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "ScalerFunction",
										"id": 64
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										172,
										170,
										175,
										173,
										179,
										171,
										174
									]
								}
							],
							"sources": [
								{
									"fileName": "Charts.tsx",
									"line": 45,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 180,
					"name": "ChartsProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Charts.tsx",
							"line": 82,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 181,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 182,
									"name": "children",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 83,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										182
									]
								}
							],
							"sources": [
								{
									"fileName": "Charts.tsx",
									"line": 82,
									"character": 25
								}
							]
						}
					}
				},
				{
					"id": 158,
					"name": "Scale",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Charts.tsx",
							"line": 20,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ScaleLogarithmic",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							{
								"type": "reference",
								"name": "ScaleLinear",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							{
								"type": "reference",
								"name": "ScaleLogarithmic",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						73
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						77
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						159,
						168,
						180,
						158
					]
				}
			],
			"sources": [
				{
					"fileName": "Charts.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2772,
			"name": "\"EventChart\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/EventChart.tsx",
			"children": [
				{
					"id": 2773,
					"name": "EventChart",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders an event view that shows the supplied set of events along a time axis.\nThe events should be supplied as a Pond TimeSeries.\nThat series may contain regular TimeEvents, TimeRangeEvents\nor IndexedEvents."
					},
					"typeParameter": [
						{
							"id": 2797,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2782,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2783,
									"name": "new EventChart",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2784,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventChartProps",
												"id": 2869
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "EventChart",
										"id": 2773
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 106,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2864,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2781,
							"name": "hover",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 106,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Event",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Key"
									}
								]
							}
						},
						{
							"id": 2860,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2861,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2862,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2862
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EventChartProps",
												"id": 2869
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2865,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2866,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2867,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2868,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2863,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "EventChartState",
										"id": 2895
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2855,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2856,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2857,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2858,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2859,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2791,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2792,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Handle click will call the onSelectionChange callback if one is provided\nas a prop. It will be called with the event selected."
									},
									"parameters": [
										{
											"id": 2793,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										},
										{
											"id": 2794,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 139,
									"character": 15
								}
							]
						},
						{
							"id": 2789,
							"name": "onMouseLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2790,
									"name": "onMouseLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Handle mouse leave and calls onMouseLeave callback if one is provided"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 128,
									"character": 16
								}
							]
						},
						{
							"id": 2785,
							"name": "onMouseOver",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2786,
									"name": "onMouseOver",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Continues a hover event on a specific bar of the bar chart."
									},
									"parameters": [
										{
											"id": 2787,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										},
										{
											"id": 2788,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 118,
									"character": 15
								}
							]
						},
						{
							"id": 2795,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2796,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 146,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2842,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2843,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2844,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "EventChartState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2845,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2846,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2847,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2848,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "EventChartState",
																						"id": 2895
																					}
																				]
																			}
																		},
																		{
																			"id": 2849,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "EventChartProps",
																				"id": 2869
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2850,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2851,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2852,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2853,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2854,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2822,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2823,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2828,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2829,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2830,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartProps",
														"id": 2869
													}
												]
											}
										},
										{
											"id": 2831,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2837,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2838,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2839,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartProps",
														"id": 2869
													}
												]
											}
										},
										{
											"id": 2840,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartState",
														"id": 2895
													}
												]
											}
										},
										{
											"id": 2841,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2807,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2808,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2809,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2810,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2798,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2799,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2815,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2816,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2817,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartProps",
														"id": 2869
													}
												]
											}
										},
										{
											"id": 2818,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartState",
														"id": 2895
													}
												]
											}
										},
										{
											"id": 2819,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2820,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2821,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2824,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2825,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2826,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartProps",
														"id": 2869
													}
												]
											}
										},
										{
											"id": 2827,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2805,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2806,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2832,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2833,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2834,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartProps",
														"id": 2869
													}
												]
											}
										},
										{
											"id": 2835,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartState",
														"id": 2895
													}
												]
											}
										},
										{
											"id": 2836,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2811,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2812,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2813,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartProps",
														"id": 2869
													}
												]
											}
										},
										{
											"id": 2814,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartState",
														"id": 2895
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2800,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2801,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2802,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartProps",
														"id": 2869
													}
												]
											}
										},
										{
											"id": 2803,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartState",
														"id": 2895
													}
												]
											}
										},
										{
											"id": 2804,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2774,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2780,
									"name": "hoverMarkerWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 103,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "5"
								},
								{
									"id": 2776,
									"name": "size",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 99,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "30"
								},
								{
									"id": 2777,
									"name": "spacing",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 100,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 2778,
									"name": "textOffsetX",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 101,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 2779,
									"name": "textOffsetY",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 102,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 2775,
									"name": "visible",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 98,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2780,
										2776,
										2777,
										2778,
										2779,
										2775
									]
								}
							],
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 97,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2782
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2864,
								2781,
								2860,
								2865,
								2863
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2855,
								2791,
								2789,
								2785,
								2795,
								2842,
								2822,
								2828,
								2837,
								2807,
								2798,
								2815,
								2820,
								2824,
								2805,
								2832,
								2811,
								2800
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2774
							]
						}
					],
					"sources": [
						{
							"fileName": "EventChart.tsx",
							"line": 96,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "EventChartProps",
									"id": 2869
								},
								{
									"type": "reference",
									"name": "EventChartState",
									"id": 2895
								}
							]
						}
					]
				},
				{
					"id": 2869,
					"name": "EventChartProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "EventChart.tsx",
							"line": 18,
							"character": 27
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 168
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2870,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2878,
											"name": "hoverMarkerWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Marker width on hover"
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 43,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2872,
											"name": "label",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Set hover label text\nWhen label is function callback it will be called with current event."
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 28,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2873,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2874,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2875,
																			"name": "args",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isRest": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "EventChart.tsx",
																	"line": 28,
																	"character": 20
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 2891,
											"name": "onMouseLeave",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Mouse leave at end of hover event"
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 80,
													"character": 16
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2892,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2893,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2894,
																	"name": "b",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "EventChart.tsx",
															"line": 80,
															"character": 18
														}
													]
												}
											}
										},
										{
											"id": 2887,
											"name": "onMouseOver",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Mouse over event callback"
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 75,
													"character": 15
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2888,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2889,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2890,
																	"name": "e",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Event",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "Key"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "EventChart.tsx",
															"line": 75,
															"character": 17
														}
													]
												}
											}
										},
										{
											"id": 2883,
											"name": "onSelectionChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Event selection on click. Will be called with selected event."
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 70,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2884,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2885,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2886,
																	"name": "e",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Event",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "Key"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "EventChart.tsx",
															"line": 70,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 2871,
											"name": "series",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "What [Pond TimeSeries](http://software.es.net/pond/#/class/timeseries) data to visualize"
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 22,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"name": "TimeSeries",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 2876,
											"name": "size",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The height in pixels for the event bar"
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 33,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2877,
											"name": "spacing",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The distance in pixels to inset the event bar from its actual timerange"
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 38,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2882,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A function that should return the style of the event box.\nSee the [outages example](http://software.es.net/react-timeseries-charts/#/example/outages)\nfor more detail on the styling"
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 65,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "EventChartStyle",
												"id": 464
											}
										},
										{
											"id": 2879,
											"name": "textOffsetX",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Hover text offset position X"
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 48,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2880,
											"name": "textOffsetY",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Hover text offset position Y"
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 53,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2881,
											"name": "visible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Show or hide this chart"
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 58,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2878,
												2872,
												2891,
												2887,
												2883,
												2871,
												2876,
												2877,
												2882,
												2879,
												2880,
												2881
											]
										}
									],
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 18,
											"character": 42
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2895,
					"name": "EventChartState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "EventChart.tsx",
							"line": 86,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2896,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2897,
									"name": "hover",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 87,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2897
									]
								}
							],
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 86,
									"character": 29
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2773
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2869,
						2895
					]
				}
			],
			"sources": [
				{
					"fileName": "EventChart.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2449,
			"name": "\"EventHandler\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/EventHandler.tsx",
			"children": [
				{
					"id": 2450,
					"name": "EventHandler",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Internal component which provides the top level event catcher for the charts.\nThis is a higher order component. It wraps a tree of SVG elements below it,\npassed in as this.props.children, and catches events that they do not handle.",
						"text": "The EventHandler is responsible for pan and zoom events as well as other click\nand hover actions.\n"
					},
					"typeParameter": [
						{
							"id": 2478,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2455,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2456,
									"name": "new EventHandler",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2457,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventHandlerProps",
												"id": 2550
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "EventHandler",
										"id": 2450
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 56,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2545,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2454,
							"name": "eventRect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 56,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "SVGRectElement"
							}
						},
						{
							"id": 2541,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2542,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2543,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2543
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EventHandlerProps",
												"id": 2550
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2546,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2547,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2548,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2549,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2544,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "EventHandlerState",
										"id": 2576
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2536,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2537,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2538,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2539,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2540,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2458,
							"name": "getOffsetMousePosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2459,
									"name": "getOffsetMousePosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2460,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 78,
									"character": 26
								}
							]
						},
						{
							"id": 2464,
							"name": "handleMouseDown",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2465,
									"name": "handleMouseDown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2466,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 155,
									"character": 19
								}
							]
						},
						{
							"id": 2473,
							"name": "handleMouseMove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2474,
									"name": "handleMouseMove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2475,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 262,
									"character": 19
								}
							]
						},
						{
							"id": 2470,
							"name": "handleMouseOut",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2471,
									"name": "handleMouseOut",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2472,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 254,
									"character": 18
								}
							]
						},
						{
							"id": 2467,
							"name": "handleMouseUp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2468,
									"name": "handleMouseUp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2469,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 193,
									"character": 17
								}
							]
						},
						{
							"id": 2461,
							"name": "handleScrollWheel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2462,
									"name": "handleScrollWheel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2463,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "WheelEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 89,
									"character": 21
								}
							]
						},
						{
							"id": 2476,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2477,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 312,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2523,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2524,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2525,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "EventHandlerState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2526,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2527,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2528,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2529,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "EventHandlerState",
																						"id": 2576
																					}
																				]
																			}
																		},
																		{
																			"id": 2530,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "EventHandlerProps",
																				"id": 2550
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2531,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2532,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2533,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2534,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2535,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2503,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2504,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2509,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2510,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2511,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerProps",
														"id": 2550
													}
												]
											}
										},
										{
											"id": 2512,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2518,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2519,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2520,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerProps",
														"id": 2550
													}
												]
											}
										},
										{
											"id": 2521,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerState",
														"id": 2576
													}
												]
											}
										},
										{
											"id": 2522,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2488,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2489,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2490,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2491,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2479,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2480,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2496,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2497,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2498,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerProps",
														"id": 2550
													}
												]
											}
										},
										{
											"id": 2499,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerState",
														"id": 2576
													}
												]
											}
										},
										{
											"id": 2500,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2501,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2502,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2505,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2506,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2507,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerProps",
														"id": 2550
													}
												]
											}
										},
										{
											"id": 2508,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2486,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2487,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2513,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2514,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2515,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerProps",
														"id": 2550
													}
												]
											}
										},
										{
											"id": 2516,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerState",
														"id": 2576
													}
												]
											}
										},
										{
											"id": 2517,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2492,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2493,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2494,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerProps",
														"id": 2550
													}
												]
											}
										},
										{
											"id": 2495,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerState",
														"id": 2576
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2481,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2482,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2483,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerProps",
														"id": 2550
													}
												]
											}
										},
										{
											"id": 2484,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerState",
														"id": 2576
													}
												]
											}
										},
										{
											"id": 2485,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2451,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2453,
									"name": "enableDragZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 53,
											"character": 22
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 2452,
									"name": "enablePanZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 52,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2453,
										2452
									]
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 51,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2455
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2545,
								2454,
								2541,
								2546,
								2544
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2536,
								2458,
								2464,
								2473,
								2470,
								2467,
								2461,
								2476,
								2523,
								2503,
								2509,
								2518,
								2488,
								2479,
								2496,
								2501,
								2505,
								2486,
								2513,
								2492,
								2481
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2451
							]
						}
					],
					"sources": [
						{
							"fileName": "EventHandler.tsx",
							"line": 50,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "EventHandlerProps",
									"id": 2550
								},
								{
									"type": "reference",
									"name": "EventHandlerState",
									"id": 2576
								}
							]
						}
					]
				},
				{
					"id": 2550,
					"name": "EventHandlerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "EventHandler.tsx",
							"line": 16,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2551,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2552,
									"name": "children",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 17,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2554,
									"name": "enableDragZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 19,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2553,
									"name": "enablePanZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 18,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2557,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 22,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2560,
									"name": "maxTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 25,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 2558,
									"name": "minDuration",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 23,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2559,
									"name": "minTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 24,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 2573,
									"name": "onMouseClick",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 29,
											"character": 16
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2574,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2575,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "EventHandler.tsx",
													"line": 29,
													"character": 18
												}
											]
										}
									}
								},
								{
									"id": 2565,
									"name": "onMouseMove",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 27,
											"character": 15
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2566,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2567,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2568,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2569,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "EventHandler.tsx",
													"line": 27,
													"character": 17
												}
											]
										}
									}
								},
								{
									"id": 2570,
									"name": "onMouseOut",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 28,
											"character": 14
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2571,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2572,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "EventHandler.tsx",
													"line": 28,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 2561,
									"name": "onZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 26,
											"character": 10
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2562,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2563,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2564,
															"name": "timerange",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "TimeRange"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "EventHandler.tsx",
													"line": 26,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 2555,
									"name": "scale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 20,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "ScaleTime",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 2556,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 21,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2552,
										2554,
										2553,
										2557,
										2560,
										2558,
										2559,
										2573,
										2565,
										2570,
										2561,
										2555,
										2556
									]
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 16,
									"character": 31
								}
							]
						}
					}
				},
				{
					"id": 2576,
					"name": "EventHandlerState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "EventHandler.tsx",
							"line": 32,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2577,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2584,
									"name": "currentDragZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 39,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2583,
									"name": "initialDragZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 38,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2580,
									"name": "initialPanBegin",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 35,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2581,
									"name": "initialPanEnd",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 36,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2582,
									"name": "initialPanPosition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 37,
											"character": 22
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 2578,
									"name": "isDragging",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 33,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2579,
									"name": "isPanning",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 34,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2584,
										2583,
										2580,
										2581,
										2582,
										2578,
										2579
									]
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 32,
									"character": 31
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2450
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2550,
						2576
					]
				}
			],
			"sources": [
				{
					"fileName": "EventHandler.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1143,
			"name": "\"EventMarker\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/EventMarker.tsx",
			"children": [
				{
					"id": 1144,
					"name": "EventMarker",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a marker at a specific event on the chart.",
						"text": "`EventMarker`s are made out of several structural components:\n\n * the \"marker\" itself which appears at the time and value of the event.\n   This is a dot whose radius is defined by `markerRadius`, and\n   whose style is set with `style.marker`\n * the \"marker label\" which is a string that will be rendered next to\n   the marker. The label can be aligned with `markerAlign` and also\n   styled with `style.text`\n * the \"info box\" which is a box containing values that hovers at the\n   top of the chart. Optionally it can show the time above the box.\n   The values themselves are supplied as either array of label value\n   pairs (a `LabelValueList`) or a simple label (a string) using the\n   `info` prop. The info box can be styled with `style.box` and\n   `style.text`, sized with `infoWidth` and `infoHeight`, and the time\n   formatted with `infoTimeFormat`\n * the \"stem\" which is a connector between the marker and the\n   info box to visually link the two, can be styled with `style.stem`.\n\nCombining these attributes, Event markers fall into two flavors, either\nyou want to omit the infoBox and mark the event with a dot and optionally\na label, or you want to omit the label (and perhaps marker dot) and show\na flag style marker with the info box connected to the Event with the stem.\n\nIf the `Event` spans a time range, the marker will appear at\nthe center of the timerange represented by that event. You can, however,\noverride either the x or y position by a number of pixels.\n"
					},
					"typeParameter": [
						{
							"id": 1171,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1172,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1217,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1218,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1219,
									"name": "new EventMarker",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1220,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventMarkerProps",
												"id": 1303
											}
										},
										{
											"id": 1221,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "EventMarker",
										"id": 1144
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1244,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1240,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1241,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1242,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1242
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EventMarkerProps",
												"id": 1303
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1245,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1246,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1247,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1248,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1243,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1235,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1236,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1237,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1238,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1239,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1169,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1170,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 486,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1164,
							"name": "renderMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1165,
									"name": "renderMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1166,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 1167,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1168,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 684
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 290,
									"character": 16
								}
							]
						},
						{
							"id": 1161,
							"name": "renderTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1162,
									"name": "renderTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1163,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 272,
									"character": 14
								}
							]
						},
						{
							"id": 1222,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1223,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1224,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1225,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1226,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1227,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1228,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 1229,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "EventMarkerProps",
																				"id": 1303
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1230,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1231,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1232,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1233,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1234,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1197,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1198,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1203,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1204,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1205,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventMarkerProps",
														"id": 1303
													}
												]
											}
										},
										{
											"id": 1206,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1212,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1213,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1214,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventMarkerProps",
														"id": 1303
													}
												]
											}
										},
										{
											"id": 1215,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1216,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1182,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1183,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1184,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1185,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1173,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1174,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1190,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1191,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1192,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventMarkerProps",
														"id": 1303
													}
												]
											}
										},
										{
											"id": 1193,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1194,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1195,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1196,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1199,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1200,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1201,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventMarkerProps",
														"id": 1303
													}
												]
											}
										},
										{
											"id": 1202,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1180,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1181,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1207,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1208,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1209,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventMarkerProps",
														"id": 1303
													}
												]
											}
										},
										{
											"id": 1210,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1211,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1186,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1187,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1188,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventMarkerProps",
														"id": 1303
													}
												]
											}
										},
										{
											"id": 1189,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1175,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1176,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1177,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventMarkerProps",
														"id": 1303
													}
												]
											}
										},
										{
											"id": 1178,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1179,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1145,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1147,
									"name": "column",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 262,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"value\""
								},
								{
									"id": 1149,
									"name": "infoHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 264,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "25"
								},
								{
									"id": 1148,
									"name": "infoWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 263,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "90"
								},
								{
									"id": 1158,
									"name": "markerLabelAlign",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 267,
											"character": 24
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "left"
									},
									"defaultValue": "\"left\""
								},
								{
									"id": 1157,
									"name": "markerRadius",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 266,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								},
								{
									"id": 1159,
									"name": "offsetX",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 268,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 1160,
									"name": "offsetY",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 269,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 1150,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 265,
											"character": 13
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1151,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1153,
															"name": "box",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 347,
																	"character": 7
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 1152,
															"name": "text",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 346,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1153,
																1152
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1154,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1156,
															"name": "marker",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 371,
																	"character": 10
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 1155,
															"name": "stem",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 370,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1156,
																1155
															]
														}
													]
												}
											}
										]
									},
									"defaultValue": " defaultStyle"
								},
								{
									"id": 1146,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 261,
											"character": 12
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "flag"
									},
									"defaultValue": "\"flag\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1147,
										1149,
										1148,
										1158,
										1157,
										1159,
										1160,
										1150,
										1146
									]
								}
							],
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 260,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1218
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1244,
								1240,
								1245,
								1243
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1235,
								1169,
								1164,
								1161,
								1222,
								1197,
								1203,
								1212,
								1182,
								1173,
								1190,
								1195,
								1199,
								1180,
								1207,
								1186,
								1175
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1145
							]
						}
					],
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 259,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "EventMarkerProps",
									"id": 1303
								}
							]
						}
					]
				},
				{
					"id": 1269,
					"name": "EventIndexProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 46,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1270,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1272,
									"name": "format",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 48,
											"character": 10
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1273,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1274,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1275,
																	"name": "date",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Date"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 48,
															"character": 12
														}
													]
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 1271,
									"name": "index",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 47,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "Index"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1272,
										1271
									]
								}
							],
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 46,
									"character": 22
								}
							]
						}
					}
				},
				{
					"id": 1303,
					"name": "EventMarkerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 114,
							"character": 28
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 168
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1304,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1306,
											"name": "column",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Which column in the Event to use"
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 123,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1305,
											"name": "event",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "What [Pond Event](http://software.es.net/pond/#/class/event) to mark"
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 118,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 1308,
											"name": "info",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The values to show in the info box. This is either an array of\nobjects, with each object specifying the label and value\nto be shown in the info box, or a simple string label. If this\nprop is not supplied, no infoBox will be displayed.",
												"text": "For example:\n```\ninfoValues = [{\n     label: \"Traffic\",\n     value: trafficText\n}];\n```\n"
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 144,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 684
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1311,
											"name": "infoHeight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The height of the info box"
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 172,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1312,
											"name": "infoTimeFormat",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Alter the format of the timestamp shown on the info box.\nThis may be either a function or a string. If you provide a function\nthat will be passed an Index and should return a string. For example:\n```\nindex => moment(index.begin()).format(\"Do MMM 'YY\")\n```\nAlternatively you can pass in a d3 format string. That will be applied\nto the begin time of the Index range."
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 184,
													"character": 18
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1313,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1314,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1315,
																			"name": "date",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "EventMarker.tsx",
																	"line": 184,
																	"character": 20
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1310,
											"name": "infoWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The width of the info box"
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 167,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1316,
											"name": "markerLabel",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Label to display"
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 189,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1317,
											"name": "markerLabelAlign",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Show a label to the left, right, top or bottom of the marker"
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 194,
													"character": 20
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "left"
													},
													{
														"type": "stringLiteral",
														"value": "right"
													},
													{
														"type": "stringLiteral",
														"value": "top"
													},
													{
														"type": "stringLiteral",
														"value": "bottom"
													}
												]
											}
										},
										{
											"id": 1318,
											"name": "markerRadius",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The radius of the dot at the end of the marker"
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 199,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1323,
											"name": "offsetX",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Offset the marker position in the x direction."
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 210,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1324,
											"name": "offsetY",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Offset the marker position in the y direction"
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 215,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1309,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The style of the info box itself and the connecting lines.\nTypically, this is an object where the key can describe\nthe stying of the stem, marker, box  and the text of the infoBox.\nThe style for each of them is in the form of CSS properties",
												"text": "For example:\n```\ninfoStyle = {\n     box: {\n         fill: \"black\",\n         color: \"#DDD\"\n     }\n}\n```\n"
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 162,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "EventMarkerStyle",
												"id": 499
											}
										},
										{
											"id": 1325,
											"name": "timeScale",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "[Internal] The timeScale supplied by the surrounding ChartContainer"
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 220,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "ScaleTime",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 1307,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "What should be the type of marker"
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 128,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "point"
													},
													{
														"type": "stringLiteral",
														"value": "flag"
													}
												]
											}
										},
										{
											"id": 1326,
											"name": "yScale",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "[Internal] The yScale supplied by the associated YAxis"
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 225,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"name": "ScalerFunction",
												"id": 64
											}
										},
										{
											"id": 1319,
											"name": "yValueFunc",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The y value is calculated by the column and event, but if\nthis prop is provided this will be used instead."
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 205,
													"character": 14
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1320,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1321,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1322,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 205,
															"character": 16
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1306,
												1305,
												1308,
												1311,
												1312,
												1310,
												1316,
												1317,
												1318,
												1323,
												1324,
												1309,
												1325,
												1307,
												1326,
												1319
											]
										}
									],
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 114,
											"character": 43
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1255,
					"name": "EventTimeProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 36,
							"character": 19
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1256,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1258,
									"name": "format",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 38,
											"character": 10
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1259,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1260,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1261,
																	"name": "date",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Date"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 38,
															"character": 12
														}
													]
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 1257,
									"name": "time",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 37,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1258,
										1257
									]
								}
							],
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 36,
									"character": 21
								}
							]
						}
					}
				},
				{
					"id": 1262,
					"name": "EventTimeRangeProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 41,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1263,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1265,
									"name": "format",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 43,
											"character": 10
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1266,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1267,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1268,
																	"name": "date",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Date"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 43,
															"character": 12
														}
													]
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 1264,
									"name": "timerange",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 42,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "TimeRange"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1265,
										1264
									]
								}
							],
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 41,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 1294,
					"name": "EventIndex",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Helper component to render a `index`'s begin time in the `format` provided"
					},
					"signatures": [
						{
							"id": 1295,
							"name": "EventIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Helper component to render a `index`'s begin time in the `format` provided"
							},
							"parameters": [
								{
									"id": 1296,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"originalName": "__0",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1297,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1299,
													"name": "format",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 97,
															"character": 63
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1300,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1301,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1302,
																					"name": "date",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "Date"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	]
																}
															}
														]
													},
													"defaultValue": "\"%m/%d/%y %X\""
												},
												{
													"id": 1298,
													"name": "index",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 97,
															"character": 55
														}
													],
													"type": {
														"type": "reference",
														"name": "Index"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1299,
														1298
													]
												}
											],
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 97,
													"character": 48
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 97,
							"character": 16
						}
					]
				},
				{
					"id": 1276,
					"name": "EventTime",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Helper component to render a `time` in the `format` provided"
					},
					"signatures": [
						{
							"id": 1277,
							"name": "EventTime",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Helper component to render a `time` in the `format` provided"
							},
							"parameters": [
								{
									"id": 1278,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"originalName": "__0",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1279,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1281,
													"name": "format",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 54,
															"character": 60
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1282,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1283,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1284,
																					"name": "date",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "Date"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	]
																}
															}
														]
													},
													"defaultValue": "\"%m/%d/%y %X\""
												},
												{
													"id": 1280,
													"name": "time",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 54,
															"character": 52
														}
													],
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1281,
														1280
													]
												}
											],
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 54,
													"character": 46
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 54,
							"character": 15
						}
					]
				},
				{
					"id": 1285,
					"name": "EventTimeRange",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Helper component to render a `timerange` in the `format` provided"
					},
					"signatures": [
						{
							"id": 1286,
							"name": "EventTimeRange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Helper component to render a `timerange` in the `format` provided"
							},
							"parameters": [
								{
									"id": 1287,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"originalName": "__0",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1288,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1290,
													"name": "format",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 72,
															"character": 75
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1291,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1292,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1293,
																					"name": "date",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "Date"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	]
																}
															}
														]
													},
													"defaultValue": "\"%m/%d/%y %X\""
												},
												{
													"id": 1289,
													"name": "timerange",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 72,
															"character": 67
														}
													],
													"type": {
														"type": "reference",
														"name": "TimeRange"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1290,
														1289
													]
												}
											],
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 72,
													"character": 56
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 72,
							"character": 20
						}
					]
				},
				{
					"id": 1249,
					"name": "textStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 1252,
							"name": "fill",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 31,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#bdbdbd\""
						},
						{
							"id": 1250,
							"name": "fontSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 29,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "11"
						},
						{
							"id": 1253,
							"name": "pointerEvents",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 32,
									"character": 17
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "none"
							},
							"defaultValue": "\"none\""
						},
						{
							"id": 1254,
							"name": "stroke",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 33,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"none\""
						},
						{
							"id": 1251,
							"name": "textAnchor",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 30,
									"character": 14
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "start"
							},
							"defaultValue": "\"start\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1252,
								1250,
								1253,
								1254,
								1251
							]
						}
					],
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 28,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1144
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1269,
						1303,
						1255,
						1262
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1294,
						1276,
						1285
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1249
					]
				}
			],
			"sources": [
				{
					"fileName": "EventMarker.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 860,
			"name": "\"Info\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/Info.tsx",
			"children": [
				{
					"id": 1039,
					"name": "InfoBox",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a box of size `width` and `height` and places a list of label\nvalue pairs within that box, `align`ed to the left or center within\nthe box. The `style` prop is a CSS properties object that will be\napplied to the box."
					},
					"typeParameter": [
						{
							"id": 1050,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1051,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1096,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1097,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1098,
									"name": "new InfoBox",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1099,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "InfoBoxProps",
												"id": 1134
											}
										},
										{
											"id": 1100,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InfoBox",
										"id": 1039
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1123,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1119,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1120,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1121,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1121
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "InfoBoxProps",
												"id": 1134
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1124,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1125,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1126,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1127,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1122,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1114,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1115,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1116,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1117,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1118,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1048,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1049,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "Info.tsx",
									"line": 206,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1101,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1102,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1103,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1104,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1105,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1106,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1107,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 1108,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "InfoBoxProps",
																				"id": 1134
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1109,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1110,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1111,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1112,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1113,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1076,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1077,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1082,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1083,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1084,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InfoBoxProps",
														"id": 1134
													}
												]
											}
										},
										{
											"id": 1085,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1091,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1092,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1093,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InfoBoxProps",
														"id": 1134
													}
												]
											}
										},
										{
											"id": 1094,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1095,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1061,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1062,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1063,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1064,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1052,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1053,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1069,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1070,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1071,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InfoBoxProps",
														"id": 1134
													}
												]
											}
										},
										{
											"id": 1072,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1073,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1074,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1075,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1078,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1079,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1080,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InfoBoxProps",
														"id": 1134
													}
												]
											}
										},
										{
											"id": 1081,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1059,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1060,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1086,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1087,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1088,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InfoBoxProps",
														"id": 1134
													}
												]
											}
										},
										{
											"id": 1089,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1090,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1065,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1066,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1067,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InfoBoxProps",
														"id": 1134
													}
												]
											}
										},
										{
											"id": 1068,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1054,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1055,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1056,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InfoBoxProps",
														"id": 1134
													}
												]
											}
										},
										{
											"id": 1057,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1058,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1040,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1041,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 200,
											"character": 13
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "center"
									},
									"defaultValue": "\"center\""
								},
								{
									"id": 1043,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 202,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								},
								{
									"id": 1044,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 203,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1045,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1047,
													"name": "box",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 347,
															"character": 7
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												},
												{
													"id": 1046,
													"name": "text",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 346,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1047,
														1046
													]
												}
											]
										}
									},
									"defaultValue": " defaultStyle"
								},
								{
									"id": 1042,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 201,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "150"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1041,
										1043,
										1044,
										1042
									]
								}
							],
							"sources": [
								{
									"fileName": "Info.tsx",
									"line": 199,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1097
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1123,
								1119,
								1124,
								1122
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1114,
								1048,
								1101,
								1076,
								1082,
								1091,
								1061,
								1052,
								1069,
								1074,
								1078,
								1059,
								1086,
								1065,
								1054
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1040
							]
						}
					],
					"sources": [
						{
							"fileName": "Info.tsx",
							"line": 198,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "InfoBoxProps",
									"id": 1134
								}
							]
						}
					]
				},
				{
					"id": 861,
					"name": "Label",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a single label surrounded by a box of size `width` and `height`"
					},
					"typeParameter": [
						{
							"id": 872,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 873,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 918,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 919,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 920,
									"name": "new Label",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 921,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LabelProps",
												"id": 1137
											}
										},
										{
											"id": 922,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Label",
										"id": 861
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 945,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 941,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 942,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 943,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																943
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "LabelProps",
												"id": 1137
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 946,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 947,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 948,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 949,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 944,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 936,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 937,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 938,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 939,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 940,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 870,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 871,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "Info.tsx",
									"line": 80,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 923,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 924,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 925,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 926,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 927,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 928,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 929,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 930,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "LabelProps",
																				"id": 1137
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 931,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 932,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 933,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 934,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 935,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 898,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 899,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 904,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 905,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 906,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelProps",
														"id": 1137
													}
												]
											}
										},
										{
											"id": 907,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 913,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 914,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 915,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelProps",
														"id": 1137
													}
												]
											}
										},
										{
											"id": 916,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 917,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 883,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 884,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 885,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 886,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 874,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 875,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 891,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 892,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 893,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelProps",
														"id": 1137
													}
												]
											}
										},
										{
											"id": 894,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 895,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 896,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 897,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 900,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 901,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 902,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelProps",
														"id": 1137
													}
												]
											}
										},
										{
											"id": 903,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 881,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 882,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 908,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 909,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 910,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelProps",
														"id": 1137
													}
												]
											}
										},
										{
											"id": 911,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 912,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 887,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 888,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 889,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelProps",
														"id": 1137
													}
												]
											}
										},
										{
											"id": 890,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 876,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 877,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 878,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelProps",
														"id": 1137
													}
												]
											}
										},
										{
											"id": 879,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 880,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 862,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 863,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 74,
											"character": 13
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "center"
									},
									"defaultValue": "\"center\""
								},
								{
									"id": 865,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 76,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								},
								{
									"id": 866,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 77,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 867,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 869,
													"name": "box",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 347,
															"character": 7
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												},
												{
													"id": 868,
													"name": "text",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 346,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														869,
														868
													]
												}
											]
										}
									},
									"defaultValue": " defaultStyle"
								},
								{
									"id": 864,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 75,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										863,
										865,
										866,
										864
									]
								}
							],
							"sources": [
								{
									"fileName": "Info.tsx",
									"line": 73,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								919
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								945,
								941,
								946,
								944
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								936,
								870,
								923,
								898,
								904,
								913,
								883,
								874,
								891,
								896,
								900,
								881,
								908,
								887,
								876
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								862
							]
						}
					],
					"sources": [
						{
							"fileName": "Info.tsx",
							"line": 72,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "LabelProps",
									"id": 1137
								}
							]
						}
					]
				},
				{
					"id": 950,
					"name": "ValueList",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a box of size `width` and `height` and places a list of label\nvalue pairs within that box, `align`ed to the left or center within\nthe box. The `style` prop is a CSS properties object that will be\napplied to the box."
					},
					"typeParameter": [
						{
							"id": 961,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 962,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1007,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1008,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1009,
									"name": "new ValueList",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1010,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ValueListProps",
												"id": 1140
											}
										},
										{
											"id": 1011,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValueList",
										"id": 950
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1034,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1030,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1031,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1032,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1032
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ValueListProps",
												"id": 1140
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1035,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1036,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1037,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1038,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1033,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1025,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1026,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1027,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1028,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1029,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 959,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 960,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "Info.tsx",
									"line": 138,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1012,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1013,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1014,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1015,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1016,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1017,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1018,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 1019,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ValueListProps",
																				"id": 1140
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1020,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1021,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1022,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1023,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1024,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 987,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 988,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 993,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 994,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 995,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 1140
													}
												]
											}
										},
										{
											"id": 996,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1002,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1003,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1004,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 1140
													}
												]
											}
										},
										{
											"id": 1005,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1006,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 972,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 973,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 974,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 975,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 963,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 964,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 980,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 981,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 982,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 1140
													}
												]
											}
										},
										{
											"id": 983,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 984,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 985,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 986,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 989,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 990,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 991,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 1140
													}
												]
											}
										},
										{
											"id": 992,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 970,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 971,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 997,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 998,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 999,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 1140
													}
												]
											}
										},
										{
											"id": 1000,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1001,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 976,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 977,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 978,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 1140
													}
												]
											}
										},
										{
											"id": 979,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 965,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 966,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 967,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 1140
													}
												]
											}
										},
										{
											"id": 968,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 969,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 951,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 952,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 132,
											"character": 13
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "center"
									},
									"defaultValue": "\"center\""
								},
								{
									"id": 954,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 134,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								},
								{
									"id": 955,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 135,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 956,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 958,
													"name": "box",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 347,
															"character": 7
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												},
												{
													"id": 957,
													"name": "text",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 346,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														958,
														957
													]
												}
											]
										}
									},
									"defaultValue": " defaultStyle"
								},
								{
									"id": 953,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 133,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										952,
										954,
										955,
										953
									]
								}
							],
							"sources": [
								{
									"fileName": "Info.tsx",
									"line": 131,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1008
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1034,
								1030,
								1035,
								1033
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1025,
								959,
								1012,
								987,
								993,
								1002,
								972,
								963,
								980,
								985,
								989,
								970,
								997,
								976,
								965
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								951
							]
						}
					],
					"sources": [
						{
							"fileName": "Info.tsx",
							"line": 130,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ValueListProps",
									"id": 1140
								}
							]
						}
					]
				},
				{
					"id": 1128,
					"name": "BoxProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Info.tsx",
							"line": 20,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1129,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1130,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Where to position the label, either `left` or `center` within the box"
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 24,
											"character": 9
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "center"
											},
											{
												"type": "stringLiteral",
												"value": "left"
											}
										]
									}
								},
								{
									"id": 1133,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The height of the rectangle to render into"
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 54,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1131,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The style of the label. This is the inline CSS applied directly\nto the label box. It is an object containing the styling for the\ntext and the box",
										"text": "For example:\n```\nconst style = {\n     text: {\n         fontSize: 11,\n         fill: \"#bdbdbd\",\n     },\n     box: {\n         fill: \"#FEFEFE\",\n         stroke: \"#DDD\",\n     }\n}\n"
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 44,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "InfoBoxStyle",
										"id": 484
									}
								},
								{
									"id": 1132,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The width of the rectangle to render into"
									},
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 49,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1130,
										1133,
										1131,
										1132
									]
								}
							],
							"sources": [
								{
									"fileName": "Info.tsx",
									"line": 20,
									"character": 22
								}
							]
						}
					}
				},
				{
					"id": 1134,
					"name": "InfoBoxProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Info.tsx",
							"line": 57,
							"character": 24
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "BoxProps",
								"id": 1128
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1135,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1136,
											"name": "info",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Info.tsx",
													"line": 58,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 684
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1136
											]
										}
									],
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 57,
											"character": 37
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1137,
					"name": "LabelProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Info.tsx",
							"line": 61,
							"character": 22
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "BoxProps",
								"id": 1128
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1138,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1139,
											"name": "label",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Info.tsx",
													"line": 62,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1139
											]
										}
									],
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 61,
											"character": 35
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1140,
					"name": "ValueListProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Info.tsx",
							"line": 65,
							"character": 26
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "BoxProps",
								"id": 1128
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1141,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1142,
											"name": "values",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Info.tsx",
													"line": 66,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"name": "LabelValueList",
												"id": 684
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1142
											]
										}
									],
									"sources": [
										{
											"fileName": "Info.tsx",
											"line": 65,
											"character": 39
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1039,
						861,
						950
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1128,
						1134,
						1137,
						1140
					]
				}
			],
			"sources": [
				{
					"fileName": "Info.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2995,
			"name": "\"LabelAxis\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/LabelAxis.tsx",
			"children": [
				{
					"id": 2996,
					"name": "LabelAxis",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a 'axis' that display a label for a data channel and a\nmax and average value:\n```\n     +----------------+-----+------- ...\n     | Traffic        | 120 |\n     | Max 100 Gbps   |     | Chart  ...\n     | Avg 26 Gbps    | 0   |\n     +----------------+-----+------- ...\n```",
						"text": "This can be used for data channel style displays where the user will see many\nrows of data stacked on top of each other and will need to interact with the\ndata to see actual values. You can combine this with the `ValueAxis` to help\ndo that. See the Cycling example for exactly how to arrange that.\n\n"
					},
					"typeParameter": [
						{
							"id": 3006,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3007,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3052,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3053,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3054,
									"name": "new LabelAxis",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3055,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LabelAxisProps",
												"id": 3084
											}
										},
										{
											"id": 3056,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LabelAxis",
										"id": 2996
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3079,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3075,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3076,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3077,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3077
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "LabelAxisProps",
												"id": 3084
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3080,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3081,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3082,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3083,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3078,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3070,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3071,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3072,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3073,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3074,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3004,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3005,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "LabelAxis.tsx",
									"line": 127,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3002,
							"name": "renderAxis",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3003,
									"name": "renderAxis",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "LabelAxis.tsx",
									"line": 97,
									"character": 14
								}
							]
						},
						{
							"id": 3057,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3058,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3059,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3060,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3061,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3062,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3063,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 3064,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "LabelAxisProps",
																				"id": 3084
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3065,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3066,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3067,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3068,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3069,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3032,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3033,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3038,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3039,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3040,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelAxisProps",
														"id": 3084
													}
												]
											}
										},
										{
											"id": 3041,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3047,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3048,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3049,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelAxisProps",
														"id": 3084
													}
												]
											}
										},
										{
											"id": 3050,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3051,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3017,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3018,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3019,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3020,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3008,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3009,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3025,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3026,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3027,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelAxisProps",
														"id": 3084
													}
												]
											}
										},
										{
											"id": 3028,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3029,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3030,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3031,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3034,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3035,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3036,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelAxisProps",
														"id": 3084
													}
												]
											}
										},
										{
											"id": 3037,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3015,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3016,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3042,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3043,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3044,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelAxisProps",
														"id": 3084
													}
												]
											}
										},
										{
											"id": 3045,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3046,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3021,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3022,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3023,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelAxisProps",
														"id": 3084
													}
												]
											}
										},
										{
											"id": 3024,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3010,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3011,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3012,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelAxisProps",
														"id": 3084
													}
												]
											}
										},
										{
											"id": 3013,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3014,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2997,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 3001,
									"name": "format",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 94,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".2f\""
								},
								{
									"id": 2998,
									"name": "hideScale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 91,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 3000,
									"name": "valWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 93,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "40"
								},
								{
									"id": 2999,
									"name": "values",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 92,
											"character": 14
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "undefined"
										}
									},
									"defaultValue": " []"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3001,
										2998,
										3000,
										2999
									]
								}
							],
							"sources": [
								{
									"fileName": "LabelAxis.tsx",
									"line": 90,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3053
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3079,
								3075,
								3080,
								3078
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3070,
								3004,
								3002,
								3057,
								3032,
								3038,
								3047,
								3017,
								3008,
								3025,
								3030,
								3034,
								3015,
								3042,
								3021,
								3010
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2997
							]
						}
					],
					"sources": [
						{
							"fileName": "LabelAxis.tsx",
							"line": 89,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "LabelAxisProps",
									"id": 3084
								}
							]
						}
					]
				},
				{
					"id": 3084,
					"name": "LabelAxisProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "LabelAxis.tsx",
							"line": 17,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3085,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3095,
									"name": "format",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If values are numbers, use this format string"
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 59,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3097,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The height of the axis"
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 69,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3087,
									"name": "hideScale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show or hide the max/min values that appear alongside the label"
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 26,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3086,
									"name": "label",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"comment": {
										"shortText": "The label to show as the axis."
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 21,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3093,
									"name": "max",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"comment": {
										"shortText": "Max value of the axis scale"
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 49,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3094,
									"name": "min",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"comment": {
										"shortText": "Min value of the axis scale"
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 54,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3092,
									"name": "valWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Width to provide the values"
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 44,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3088,
									"name": "values",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"comment": {
										"shortText": "Supply a list of label value pairs to render within the LabelAxis.\nThis expects an array of objects. Each object is of the form:",
										"text": "```js\n{label: \"Speed\", value: \"26.2 mph\"}\n```\n"
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 36,
											"character": 10
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 3089,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 3090,
														"name": "label",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "LabelAxis.tsx",
																"line": 37,
																"character": 13
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 3091,
														"name": "value",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "LabelAxis.tsx",
																"line": 38,
																"character": 13
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															3090,
															3091
														]
													}
												],
												"sources": [
													{
														"fileName": "LabelAxis.tsx",
														"line": 36,
														"character": 11
													}
												]
											}
										}
									}
								},
								{
									"id": 3096,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The width of the axis"
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 64,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3095,
										3097,
										3087,
										3086,
										3093,
										3094,
										3092,
										3088,
										3096
									]
								}
							],
							"sources": [
								{
									"fileName": "LabelAxis.tsx",
									"line": 17,
									"character": 28
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2996
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3084
					]
				}
			],
			"sources": [
				{
					"fileName": "LabelAxis.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3098,
			"name": "\"Legend\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/Legend.tsx",
			"children": [
				{
					"id": 3099,
					"name": "Legend",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Legends are simple to define.",
						"text": "First specify the styles you want each item to have. This is either\nthe CSS that should be appied to rendered symbol. Or you can provide\na Styler object. See below for full styling details.\n\n```\nconst style = Styler([\n    {key: \"aud\", color: \"steelblue\", width: 1, dashed: true},\n    {key: \"euro\", color: \"#F68B24\", width: 2}\n]);\n```\n\nNext build a list of categories you want in the legend.\n\n```\nconst categories = [\n    {key: \"aust\", label: \"AUD\", value: \"1.52\", disabled: true},\n    {key: \"usa\", label: \"USD\", value: \"1.43\", disabled: false}\n];\n```\nFor each category to display you must provide a key, a label and\nif it should be displayed disabled or not.\n\nThen render the legend, with type either \"line\", \"swatch\" or \"dot\":\n\n```\n<Legend type=\"line\" style={style} categories={categories} />\n```\n\nOptionally you can also display a value below the label. This is\nuseful when hovering over another chart on the page, or to display\nthe current value of live data. You can see this defined in the\nabove categories.\n\nThe legend can also be supplied with callback functions which will\ntell you if the user has clicked or hovered over on one of the legend\nitems. You can use this to sync highlighting and selection to a\nchart.\n\n## Styling\n\nThere are three methods of styling a legend:\n - using a Styler object\n - using an object containing inline styles\n - using a function which returns an inline style\n\nA Styler object can be supplied directly to the `style` prop\nof the legend. This is the simplest approach, since you can\nusually just use the same Styler as you use for your chart.\n\nSupplying an object to the `style` prop gives you more control\nthan the Styler, since you can provide the actual CSS properties\nfor each element of the legend. The format for the object is:\n\n```\n{\n    columnName1: {\n      symbol: {\n        normal: {...styleSymbol},\n        highlighted: {...styleSymbol},\n        selected: {...styleSymbol},\n        muted: {...styleSymbol}\n      },\n      label: {\n        normal: {...labelStyle},\n        highlighted: {...labelStyle},\n        selected: {...labelStyle},\n        muted: {...labelStyle}\n      },\n      value: {\n        normal: {...valueStyle},\n        highlighted: {...valueStyle},\n        selected: {...valueStyle},\n        muted: {...valueStyle}\n      }\n    },\n    columnName2 : {\n        ...\n    },\n    ...\n }\n\n - symbolStyle is the CSS properties for the symbol, which\nis either a swatch, dot or line. For a line, you'd want to\nprovide the SVG <line> properties, for a swatch you'd provide\nthe SVG <rect> properties and for a dot the <ellipse> properties.\n - labelStyle is the main label for the legend item. It is a\n SVG <text> element, so you can control the font properties.\n - valueStyle is the optional value. As with the labelStyle you\n this is an SVG <text> element.\n\nFinally, you can provide a function to the `style` prop. This\nis similar to providing an object, except your function will\nbe called with the columnName and you should return the map\ncontaining symbol, label and value styles.\n"
					},
					"typeParameter": [
						{
							"id": 3127,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3128,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3173,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3174,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3175,
									"name": "new Legend",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3176,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendProps",
												"id": 3214
											}
										},
										{
											"id": 3177,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Legend",
										"id": 3099
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3200,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3196,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3197,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3198,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3198
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "LegendProps",
												"id": 3214
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3201,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3202,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3203,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3204,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3199,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3191,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3192,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3193,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3194,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3195,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3119,
							"name": "labelStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3120,
									"name": "labelStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3121,
											"name": "category",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendCategory",
												"id": 3205
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "true"
											},
											{
												"type": "reference",
												"name": "CSSProperties"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 334,
									"character": 14
								}
							]
						},
						{
							"id": 3108,
							"name": "providedStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3109,
									"name": "providedStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "For each category item we get the users style preference. This\ncan be supplied in a number of ways:\n * Typically you would get the legend style from a `Styler` instance;\n * Alternatively, you can pass in a style object which has your\n   category in it mapped to the associated style;\n * Finally, the provided style can also be a function which will\n   be passes a category and should return the associated style.\n   i.e. (category: string) => CategoryStyle"
									},
									"parameters": [
										{
											"id": 3110,
											"name": "category",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendCategory",
												"id": 3205
											}
										},
										{
											"id": 3111,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendItemType",
												"id": 184
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CategoryStyle",
										"id": 519
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 280,
									"character": 17
								}
							]
						},
						{
							"id": 3125,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3126,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 354,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3178,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3179,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3180,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3181,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3182,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3183,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3184,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 3185,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "LegendProps",
																				"id": 3214
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3186,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3187,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3188,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3189,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3190,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3112,
							"name": "styleMode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3113,
									"name": "styleMode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "For each category this function takes the current selected and highlighted item, along\nwith the disabled state of the item, and returns the mode it should be rendered in:\n * normal\n * selected\n * highlighted, or\n * muted"
									},
									"parameters": [
										{
											"id": 3114,
											"name": "category",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendCategory",
												"id": 3205
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "StyleMode",
										"id": 320
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 302,
									"character": 13
								}
							]
						},
						{
							"id": 3115,
							"name": "symbolStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3116,
									"name": "symbolStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3117,
											"name": "category",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendCategory",
												"id": 3205
											}
										},
										{
											"id": 3118,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendItemType",
												"id": 184
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "true"
											},
											{
												"type": "reference",
												"name": "CSSProperties"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 324,
									"character": 15
								}
							]
						},
						{
							"id": 3122,
							"name": "valueStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3123,
									"name": "valueStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3124,
											"name": "category",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendCategory",
												"id": 3205
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "true"
											},
											{
												"type": "reference",
												"name": "CSSProperties"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 344,
									"character": 14
								}
							]
						},
						{
							"id": 3153,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3154,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3159,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3160,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3161,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendProps",
														"id": 3214
													}
												]
											}
										},
										{
											"id": 3162,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3168,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3169,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3170,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendProps",
														"id": 3214
													}
												]
											}
										},
										{
											"id": 3171,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3172,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3138,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3139,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3140,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3141,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3129,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3130,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3146,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3147,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3148,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendProps",
														"id": 3214
													}
												]
											}
										},
										{
											"id": 3149,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3150,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3151,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3152,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3155,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3156,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3157,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendProps",
														"id": 3214
													}
												]
											}
										},
										{
											"id": 3158,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3136,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3137,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3163,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3164,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3165,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendProps",
														"id": 3214
													}
												]
											}
										},
										{
											"id": 3166,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3167,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3142,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3143,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3144,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendProps",
														"id": 3214
													}
												]
											}
										},
										{
											"id": 3145,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3131,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3132,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3133,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendProps",
														"id": 3214
													}
												]
											}
										},
										{
											"id": 3134,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3135,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 3100,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 3104,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 264,
											"character": 13
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "left"
									},
									"defaultValue": "\"left\""
								},
								{
									"id": 3107,
									"name": "stack",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 267,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 3101,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 262,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3102,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								},
								{
									"id": 3106,
									"name": "symbolHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 266,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "16"
								},
								{
									"id": 3105,
									"name": "symbolWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 265,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "16"
								},
								{
									"id": 3103,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 263,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "Swatch",
										"id": 185
									},
									"defaultValue": " LegendItemType.Swatch"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3104,
										3107,
										3101,
										3106,
										3105,
										3103
									]
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 261,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3174
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3200,
								3196,
								3201,
								3199
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3191,
								3119,
								3108,
								3125,
								3178,
								3112,
								3115,
								3122,
								3153,
								3159,
								3168,
								3138,
								3129,
								3146,
								3151,
								3155,
								3136,
								3163,
								3142,
								3131
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								3100
							]
						}
					],
					"sources": [
						{
							"fileName": "Legend.tsx",
							"line": 260,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "LegendProps",
									"id": 3214
								}
							]
						}
					]
				},
				{
					"id": 3205,
					"name": "LegendCategory",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Legend.tsx",
							"line": 24,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3206,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3210,
									"name": "disabled",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 28,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3207,
									"name": "key",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 25,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3208,
									"name": "label",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 26,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3212,
									"name": "labelStyle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 30,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 3211,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 29,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 3213,
									"name": "symbolType",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 31,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"name": "LegendItemType",
										"id": 184
									}
								},
								{
									"id": 3209,
									"name": "value",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 27,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3210,
										3207,
										3208,
										3212,
										3211,
										3213,
										3209
									]
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 24,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 3214,
					"name": "LegendProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Legend.tsx",
							"line": 34,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3215,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3217,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Alignment of the legend within the available space. Either `left` or `right`."
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 44,
											"character": 9
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "left"
											},
											{
												"type": "stringLiteral",
												"value": "right"
											}
										]
									}
								},
								{
									"id": 3222,
									"name": "categories",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"comment": {
										"shortText": "The categories array specifies details and style for each item in the legend. For each item:\n * \"key\" - (required) the name by which the legend will be known\n * \"label\" - (required) the displayed label\n * \"style\" - the swatch, dot, or line style. Typically you'd just\n             specify {backgroundColor: \"#1f77b4\"}\n * \"labelStyle\" - the label style\n * \"disabled\" - a disabled state",
										"text": "```\nconst categories = [\n   {key: \"aust\", label: \"AUD\", disabled: this.state.disabled[\"aust\"],\n     style: {backgroundColor: \"#1f77b4\"}},\n   {key: \"usa\", label: \"USD\", disabled: this.state.disabled[\"usa\"],\n     style: {backgroundColor: \"#aec7e8\"}}\n];\n```\n"
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 122,
											"character": 14
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "LegendCategory",
											"id": 3205
										}
									}
								},
								{
									"id": 3225,
									"name": "highlight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Which item, specified by its key, should be rendered as highlighted"
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 137,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3232,
									"name": "onHighlightChange",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Callback will be called with a legend item is highlighted (i.e. it is hovered\nover by the user)"
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 159,
											"character": 21
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3233,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3234,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 3235,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "Legend.tsx",
													"line": 159,
													"character": 23
												}
											]
										}
									}
								},
								{
									"id": 3228,
									"name": "onSelectionChange",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Callback will be called with a legend item is selected (i.e. it is clicked\non by the user)"
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 153,
											"character": 21
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3229,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 3230,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 3231,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "Legend.tsx",
													"line": 153,
													"character": 23
												}
											]
										}
									}
								},
								{
									"id": 3226,
									"name": "selection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Which item, specified by its key, should be rendered as selected"
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 142,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3227,
									"name": "stack",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Defines whether to stack legend items vertically or not"
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 147,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3218,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "There are three methods of styling a legend:\n - using a Styler object\n - using an object containing inline styles\n - using a function which returns an inline style",
										"text": "A Styler object can be supplied directly to the `style` prop\nof the legend. This is the simplest approach, since you can\nusually just use the same Styler as you use for your chart.\n\nSupplying an object to the `style` prop gives you more control\nthan the Styler, since you can provide the actual CSS properties\nfor each element of the legend. The format for the object is:\n\n```\n{\n    columnName1: {\n      symbol: {\n        normal: {...styleSymbol},\n        highlighted: {...styleSymbol},\n        selected: {...styleSymbol},\n        muted: {...styleSymbol}\n      },\n      label: {\n        normal: {...labelStyle},\n        highlighted: {...labelStyle},\n        selected: {...labelStyle},\n        muted: {...labelStyle}\n      },\n      value: {\n        normal: {...valueStyle},\n        highlighted: {...valueStyle},\n        selected: {...valueStyle},\n        muted: {...valueStyle}\n      }\n    },\n    columnName2 : {\n        ...\n    },\n    ...\n }\n\n - symbolStyle is the CSS properties for the symbol, which\nis either a swatch, dot or line. For a line, you'd want to\nprovide the SVG <line> properties, for a swatch you'd provide\nthe SVG <rect> properties and for a dot the <ellipse> properties.\n - labelStyle is the main label for the legend item. It is a\n SVG <text> element, so you can control the font properties.\n - valueStyle is the optional value. As with the labelStyle you\n this is an SVG <text> element.\n\nFinally, you can provide a function to the `style` prop. This\nis similar to providing an object, except your function will\nbe called with the columnName and you should return the map\ncontaining symbol, label and value styles.\n"
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 102,
											"character": 9
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "LegendStyle",
												"id": 526
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3219,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3220,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 3221,
																	"name": "column",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "CategoryStyle",
																"id": 519
															}
														}
													],
													"sources": [
														{
															"fileName": "Legend.tsx",
															"line": 102,
															"character": 25
														}
													]
												}
											},
											{
												"type": "reference",
												"name": "Styler",
												"id": 613
											}
										]
									}
								},
								{
									"id": 3224,
									"name": "symbolHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The height of the legend symbol"
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 132,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3223,
									"name": "symbolWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The width of the legend symbol"
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 127,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3216,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The overall style of the legend items, either a color `swatch`, a\ncolored `line`, or a `dot`."
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 39,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "LegendItemType",
										"id": 184
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3217,
										3222,
										3225,
										3232,
										3228,
										3226,
										3227,
										3218,
										3224,
										3223,
										3216
									]
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 34,
									"character": 25
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3099
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3205,
						3214
					]
				}
			],
			"sources": [
				{
					"fileName": "Legend.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 183,
			"name": "\"LegendItem\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/LegendItem.tsx",
			"children": [
				{
					"id": 184,
					"name": "LegendItemType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 187,
							"name": "Dot",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 17,
									"character": 7
								}
							],
							"defaultValue": "\"DOT\""
						},
						{
							"id": 186,
							"name": "Line",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 16,
									"character": 8
								}
							],
							"defaultValue": "\"LINE\""
						},
						{
							"id": 185,
							"name": "Swatch",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 15,
									"character": 10
								}
							],
							"defaultValue": "\"SWATCH\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								187,
								186,
								185
							]
						}
					],
					"sources": [
						{
							"fileName": "LegendItem.tsx",
							"line": 14,
							"character": 26
						}
					]
				},
				{
					"id": 188,
					"name": "LegendItem",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 210,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 211,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 256,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 257,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 258,
									"name": "new LegendItem",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 259,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendItemProps",
												"id": 288
											}
										},
										{
											"id": 260,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LegendItem",
										"id": 188
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 283,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 279,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 280,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 281,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																281
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "LegendItemProps",
												"id": 288
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 284,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 285,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 286,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 287,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 282,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 274,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 275,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 276,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 277,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 278,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 189,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 190,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 191,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "HTMLDivElement"
													}
												]
											}
										},
										{
											"id": 192,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 36,
									"character": 15
								}
							]
						},
						{
							"id": 193,
							"name": "handleHover",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 194,
									"name": "handleHover",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 195,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "HTMLDivElement"
													}
												]
											}
										},
										{
											"id": 196,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 43,
									"character": 15
								}
							]
						},
						{
							"id": 197,
							"name": "handleHoverLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 198,
									"name": "handleHoverLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 49,
									"character": 20
								}
							]
						},
						{
							"id": 208,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 209,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 104,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 205,
							"name": "renderDot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 206,
									"name": "renderDot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 207,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CSSProperties"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 89,
									"character": 13
								}
							]
						},
						{
							"id": 199,
							"name": "renderLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 200,
									"name": "renderLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 201,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CSSProperties"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 55,
									"character": 14
								}
							]
						},
						{
							"id": 202,
							"name": "renderSwatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 203,
									"name": "renderSwatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 204,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "CSSProperties"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 72,
									"character": 16
								}
							]
						},
						{
							"id": 261,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 262,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 263,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 264,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 265,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 266,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 267,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 268,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "LegendItemProps",
																				"id": 288
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 269,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 270,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 271,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 272,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 273,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 236,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 237,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 242,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 243,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 244,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendItemProps",
														"id": 288
													}
												]
											}
										},
										{
											"id": 245,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 251,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 252,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 253,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendItemProps",
														"id": 288
													}
												]
											}
										},
										{
											"id": 254,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 255,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 221,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 222,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 223,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 224,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 212,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 213,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 229,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 230,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 231,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendItemProps",
														"id": 288
													}
												]
											}
										},
										{
											"id": 232,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 233,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 234,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 235,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 238,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 239,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 240,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendItemProps",
														"id": 288
													}
												]
											}
										},
										{
											"id": 241,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 219,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 220,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 246,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 247,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 248,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendItemProps",
														"id": 288
													}
												]
											}
										},
										{
											"id": 249,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 250,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 225,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 226,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 227,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendItemProps",
														"id": 288
													}
												]
											}
										},
										{
											"id": 228,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 214,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 215,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 216,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendItemProps",
														"id": 288
													}
												]
											}
										},
										{
											"id": 217,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 218,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								257
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								283,
								279,
								284,
								282
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								274,
								189,
								193,
								197,
								208,
								205,
								199,
								202,
								261,
								236,
								242,
								251,
								221,
								212,
								229,
								234,
								238,
								219,
								246,
								225,
								214
							]
						}
					],
					"sources": [
						{
							"fileName": "LegendItem.tsx",
							"line": 35,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "LegendItemProps",
									"id": 288
								}
							]
						}
					]
				},
				{
					"id": 288,
					"name": "LegendItemProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "LegendItem.tsx",
							"line": 20,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 289,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 290,
									"name": "itemKey",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 21,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 292,
									"name": "label",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 23,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 298,
									"name": "labelStyle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 29,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 304,
									"name": "onHighlightChange",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 32,
											"character": 21
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 305,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 306,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 307,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "LegendItem.tsx",
													"line": 32,
													"character": 22
												}
											]
										}
									}
								},
								{
									"id": 300,
									"name": "onSelectionChange",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 31,
											"character": 21
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 301,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 302,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 303,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "LegendItem.tsx",
													"line": 31,
													"character": 22
												}
											]
										}
									}
								},
								{
									"id": 296,
									"name": "symbolHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 27,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 297,
									"name": "symbolStyle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 28,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 294,
									"name": "symbolType",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 25,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"name": "LegendItemType",
										"id": 184
									}
								},
								{
									"id": 295,
									"name": "symbolWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 26,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 291,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 22,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "LegendItemType",
										"id": 184
									}
								},
								{
									"id": 293,
									"name": "value",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 24,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 299,
									"name": "valueStyle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 30,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										290,
										292,
										298,
										304,
										300,
										296,
										297,
										294,
										295,
										291,
										293,
										299
									]
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 20,
									"character": 29
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						184
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						188
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						288
					]
				}
			],
			"sources": [
				{
					"fileName": "LegendItem.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3236,
			"name": "\"LineChart\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/LineChart.tsx",
			"children": [
				{
					"id": 3237,
					"name": "LineChart",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `<LineChart>` component is able to display multiple columns of a TimeSeries\nas separate line charts.",
						"text": "The `<LineChart>` should be used within `<ChartContainer>` etc., as this will\nconstruct the horizontal and vertical axis, and manage other elements.\n\nHere is an example of two columns of a TimeSeries being plotted with the `<LineChart>`:\n\n```\n <ChartContainer timeRange={this.state.timerange} >\n     <ChartRow height=\"200\">\n         <YAxis id=\"y\" label=\"Price ($)\" min={0.5} max={1.5} format=\"$,.2f\" />\n         <Charts>\n             <LineChart\n                 axis=\"y\"\n                 breakLine={false}\n                 series={currencySeries}\n                 columns={[\"aud\", \"euro\"]}\n                 style={style}\n                 interpolation=\"curveBasis\" />\n         </Charts>\n     </ChartRow>\n </ChartContainer>\n```\n"
					},
					"typeParameter": [
						{
							"id": 3275,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3320,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3321,
									"name": "new LineChart",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3322,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LineChartProps",
												"id": 3351
											}
										},
										{
											"id": 3323,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LineChart",
										"id": 3237
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3346,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3342,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3343,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3344,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3344
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "LineChartProps",
												"id": 3351
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3347,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3348,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3349,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3350,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3345,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "__type"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3337,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3338,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3339,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3340,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3341,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3252,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3253,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3254,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGPathElement"
													}
												]
											}
										},
										{
											"id": 3255,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 228,
									"character": 15
								}
							]
						},
						{
							"id": 3246,
							"name": "handleHover",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3247,
									"name": "handleHover",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3248,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGPathElement"
													}
												]
											}
										},
										{
											"id": 3249,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 216,
									"character": 15
								}
							]
						},
						{
							"id": 3250,
							"name": "handleHoverLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3251,
									"name": "handleHoverLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 222,
									"character": 20
								}
							]
						},
						{
							"id": 3259,
							"name": "pathStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3260,
									"name": "pathStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the style used for drawing the path"
									},
									"parameters": [
										{
											"id": 3261,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3262,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 256,
									"character": 13
								}
							]
						},
						{
							"id": 3256,
							"name": "providedPathStyleMap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3257,
									"name": "providedPathStyleMap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the supplied style as a LineChartStyle, given a provided\nLineChartStyle, Styler, or function, for the `column` provided."
									},
									"parameters": [
										{
											"id": 3258,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LineChartChannelStyle",
										"id": 329
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 239,
									"character": 24
								}
							]
						},
						{
							"id": 3273,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3274,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 369,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3270,
							"name": "renderLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3271,
									"name": "renderLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3272,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 317,
									"character": 14
								}
							]
						},
						{
							"id": 3268,
							"name": "renderLines",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3269,
									"name": "renderLines",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Element"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 313,
									"character": 15
								}
							]
						},
						{
							"id": 3263,
							"name": "renderPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3264,
									"name": "renderPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3265,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "PointData",
												"id": 3377
											}
										},
										{
											"id": 3266,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3267,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 283,
									"character": 14
								}
							]
						},
						{
							"id": 3324,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3325,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3326,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "__type"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3327,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3328,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3329,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3330,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "__type"
																					}
																				]
																			}
																		},
																		{
																			"id": 3331,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "LineChartProps",
																				"id": 3351
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3332,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3333,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3334,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3335,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3336,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3243,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3244,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3245,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LineChartProps",
												"id": 3351
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 177,
									"character": 25
								}
							]
						},
						{
							"id": 3300,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3301,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3306,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3307,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3308,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LineChartProps",
														"id": 3351
													}
												]
											}
										},
										{
											"id": 3309,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3315,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3316,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3317,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LineChartProps",
														"id": 3351
													}
												]
											}
										},
										{
											"id": 3318,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3319,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3285,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3286,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3287,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3288,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3276,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3277,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3293,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3294,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3295,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LineChartProps",
														"id": 3351
													}
												]
											}
										},
										{
											"id": 3296,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3297,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3298,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3299,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3302,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3303,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3304,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LineChartProps",
														"id": 3351
													}
												]
											}
										},
										{
											"id": 3305,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3283,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3284,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3310,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3311,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3312,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LineChartProps",
														"id": 3351
													}
												]
											}
										},
										{
											"id": 3313,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3314,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3289,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3290,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3291,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LineChartProps",
														"id": 3351
													}
												]
											}
										},
										{
											"id": 3292,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3278,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3279,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3280,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LineChartProps",
														"id": 3351
													}
												]
											}
										},
										{
											"id": 3281,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3282,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 3238,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 3241,
									"name": "breakLine",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LineChart.tsx",
											"line": 173,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 3239,
									"name": "columns",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LineChart.tsx",
											"line": 171,
											"character": 15
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"defaultValue": " [\"value\"]"
								},
								{
									"id": 3240,
									"name": "interpolation",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LineChart.tsx",
											"line": 172,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"name": "curveLinear",
										"id": 676
									},
									"defaultValue": " CurveInterpolation.curveLinear"
								},
								{
									"id": 3242,
									"name": "visible",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LineChart.tsx",
											"line": 174,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3241,
										3239,
										3240,
										3242
									]
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 170,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3320
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3346,
								3342,
								3347,
								3345
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3337,
								3252,
								3246,
								3250,
								3259,
								3256,
								3273,
								3270,
								3268,
								3263,
								3324,
								3243,
								3300,
								3306,
								3315,
								3285,
								3276,
								3293,
								3298,
								3302,
								3283,
								3310,
								3289,
								3278
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								3238
							]
						}
					],
					"sources": [
						{
							"fileName": "LineChart.tsx",
							"line": 169,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "LineChartProps",
									"id": 3351
								},
								{
									"type": "reference",
									"name": "__type"
								}
							]
						}
					]
				},
				{
					"id": 3351,
					"name": "LineChartProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "LineChart.tsx",
							"line": 29,
							"character": 26
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 168
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3352,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3354,
											"name": "axis",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "Reference to the axis which provides the vertical scale for drawing.\ne.g. specifying `axis=\"trafficRate\"` would refer the y-scale of the YAxis\nwith `id=\"trafficRate\"`."
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 40,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3361,
											"name": "breakLine",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The determines how to handle bad/missing values in the supplied\nTimeSeries. A missing value can be null or NaN. If breakLine\nis set to true (the default) then the line will be broken on\neither side of the bad value(s). If breakLine is false bad values\nare simply removed and the adjoining points are connected."
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 95,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3355,
											"name": "columns",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Which columns from the series to draw."
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 45,
													"character": 11
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 3367,
											"name": "highlight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The highlighted column, which will be rendered in the `highlighted` style.",
												"text": "See also `onHighlightChange`\n"
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 116,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3360,
											"name": "interpolation",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Any of D3's interpolation modes.\nFor reference - [d3-curves](https://github.com/d3/d3-shape#curves)"
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 86,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "CurveInterpolation",
												"id": 668
											}
										},
										{
											"id": 3368,
											"name": "onHighlightChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A callback that will be called when the hovered over line changes.\nIt will be called with the corresponding column."
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 122,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3369,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3370,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 3371,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "LineChart.tsx",
															"line": 122,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 3363,
											"name": "onSelectionChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A callback that will be called when the selection changes. It will be called\nwith the column corresponding to the line being clicked."
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 109,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3364,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3365,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 3366,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "LineChart.tsx",
															"line": 109,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 3362,
											"name": "selection",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The selected item, which will be rendered in the `selected` style.\nIf a line is selected, all other lines will be rendered in the `muted` style.",
												"text": "See also `onSelectionChange`\n"
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 103,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3353,
											"name": "series",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "What [Pond TimeSeries](http://software.es.net/pond/#/class/timeseries) data to visualize"
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 33,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"name": "TimeSeries",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 3356,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The styles to apply to the underlying SVG lines. This is a mapping\nof column names to objects with style attributes, in the following\nformat:",
												"text": "```\nconst style = {\n    in: {\n        normal: {stroke: \"steelblue\", fill: \"none\", strokeWidth: 1},\n        highlighted: {stroke: \"#5a98cb\", fill: \"none\", strokeWidth: 1},\n        selected: {stroke: \"steelblue\", fill: \"none\", strokeWidth: 1},\n        muted: {stroke: \"steelblue\", fill: \"none\", opacity: 0.4, strokeWidth: 1}\n    },\n    out: {\n        ...\n    }\n};\n\n <LineChart style={style} ... />\n```\n\nAlternatively, you can pass in a `Styler`. For example:\n\n```\nconst currencyStyle = Styler([\n    {key: \"aud\", color: \"steelblue\", width: 1, dashed: true},\n    {key: \"euro\", color: \"#F68B24\", width: 2}\n]);\n\n<LineChart columns={[\"aud\", \"euro\"]} style={currencyStyle} ... />\n\n```\n"
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 80,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "LineChartStyle",
														"id": 334
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3357,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3358,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3359,
																			"name": "column",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"name": "LineChartChannelStyle",
																		"id": 329
																	}
																}
															],
															"sources": [
																{
																	"fileName": "LineChart.tsx",
																	"line": 80,
																	"character": 28
																}
															]
														}
													},
													{
														"type": "reference",
														"name": "Styler",
														"id": 613
													}
												]
											}
										},
										{
											"id": 3372,
											"name": "visible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Show or hide this chart"
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 127,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3354,
												3361,
												3355,
												3367,
												3360,
												3368,
												3363,
												3362,
												3353,
												3356,
												3372
											]
										}
									],
									"sources": [
										{
											"fileName": "LineChart.tsx",
											"line": 29,
											"character": 41
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3373,
					"name": "Point",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "LineChart.tsx",
							"line": 133,
							"character": 17
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3374,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3375,
									"name": "x",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LineChart.tsx",
											"line": 134,
											"character": 5
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 3376,
									"name": "y",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LineChart.tsx",
											"line": 135,
											"character": 5
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3375,
										3376
									]
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 133,
									"character": 19
								}
							]
						}
					}
				},
				{
					"id": 3377,
					"name": "PointData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "LineChart.tsx",
							"line": 141,
							"character": 21
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Point",
							"id": 3373
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3237
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3351,
						3373,
						3377
					]
				}
			],
			"sources": [
				{
					"fileName": "LineChart.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1891,
			"name": "\"MultiBrush\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/MultiBrush.tsx",
			"children": [
				{
					"id": 1892,
					"name": "MultiBrush",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a brush with the range defined in the prop `timeRange`."
					},
					"typeParameter": [
						{
							"id": 1938,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1897,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1898,
									"name": "new MultiBrush",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1899,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MultiBrushProps",
												"id": 2010
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "MultiBrush",
										"id": 1892
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 89,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2005,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1896,
							"name": "overlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 89,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "SVGRectElement"
							}
						},
						{
							"id": 2001,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2002,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2003,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2003
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "MultiBrushProps",
												"id": 2010
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2006,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2007,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2008,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2009,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2004,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "MultiBrushState",
										"id": 2029
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1996,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1997,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1998,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1999,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2000,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1902,
							"name": "handleBrushMouseDown",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1903,
									"name": "handleBrushMouseDown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1904,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										},
										{
											"id": 1905,
											"name": "brushIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 115,
									"character": 24
								}
							]
						},
						{
							"id": 1915,
							"name": "handleHandleMouseDown",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1916,
									"name": "handleHandleMouseDown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1917,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										},
										{
											"id": 1918,
											"name": "handle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1919,
											"name": "brushIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 173,
									"character": 25
								}
							]
						},
						{
							"id": 1911,
							"name": "handleMouseClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1912,
									"name": "handleMouseClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1913,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										},
										{
											"id": 1914,
											"name": "brushIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 167,
									"character": 20
								}
							]
						},
						{
							"id": 1923,
							"name": "handleMouseMove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1924,
									"name": "handleMouseMove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1925,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 218,
									"character": 19
								}
							]
						},
						{
							"id": 1920,
							"name": "handleMouseUp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1921,
									"name": "handleMouseUp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1922,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 194,
									"character": 17
								}
							]
						},
						{
							"id": 1906,
							"name": "handleOverlayMouseDown",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1907,
									"name": "handleOverlayMouseDown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1908,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 135,
									"character": 26
								}
							]
						},
						{
							"id": 1909,
							"name": "hasNullBrush",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1910,
									"name": "hasNullBrush",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 160,
									"character": 16
								}
							]
						},
						{
							"id": 1936,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1937,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 447,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1928,
							"name": "renderBrush",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1929,
									"name": "renderBrush",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1930,
											"name": "timeRange",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TimeRange"
											}
										},
										{
											"id": 1931,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 329,
									"character": 15
								}
							]
						},
						{
							"id": 1932,
							"name": "renderHandles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1933,
									"name": "renderHandles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1934,
											"name": "timeRange",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TimeRange"
											}
										},
										{
											"id": 1935,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 389,
									"character": 17
								}
							]
						},
						{
							"id": 1926,
							"name": "renderOverlay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1927,
									"name": "renderOverlay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 290,
									"character": 17
								}
							]
						},
						{
							"id": 1983,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1984,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1985,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "MultiBrushState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1986,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1987,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1988,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1989,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "MultiBrushState",
																						"id": 2029
																					}
																				]
																			}
																		},
																		{
																			"id": 1990,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "MultiBrushProps",
																				"id": 2010
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1991,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1992,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1993,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1994,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1995,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1900,
							"name": "viewport",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1901,
									"name": "viewport",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TimeRange"
									}
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 104,
									"character": 12
								}
							]
						},
						{
							"id": 1963,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1964,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1969,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1970,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1971,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "MultiBrushProps",
														"id": 2010
													}
												]
											}
										},
										{
											"id": 1972,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1978,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1979,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1980,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "MultiBrushProps",
														"id": 2010
													}
												]
											}
										},
										{
											"id": 1981,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "MultiBrushState",
														"id": 2029
													}
												]
											}
										},
										{
											"id": 1982,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1948,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1949,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1950,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1951,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1939,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1940,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1956,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1957,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1958,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "MultiBrushProps",
														"id": 2010
													}
												]
											}
										},
										{
											"id": 1959,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "MultiBrushState",
														"id": 2029
													}
												]
											}
										},
										{
											"id": 1960,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1961,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1962,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1965,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1966,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1967,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "MultiBrushProps",
														"id": 2010
													}
												]
											}
										},
										{
											"id": 1968,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1946,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1947,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1973,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1974,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1975,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "MultiBrushProps",
														"id": 2010
													}
												]
											}
										},
										{
											"id": 1976,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "MultiBrushState",
														"id": 2029
													}
												]
											}
										},
										{
											"id": 1977,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1952,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1953,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1954,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "MultiBrushProps",
														"id": 2010
													}
												]
											}
										},
										{
											"id": 1955,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "MultiBrushState",
														"id": 2029
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1941,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1942,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1943,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "MultiBrushProps",
														"id": 2010
													}
												]
											}
										},
										{
											"id": 1944,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "MultiBrushState",
														"id": 2029
													}
												]
											}
										},
										{
											"id": 1945,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1893,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1895,
									"name": "allowFreeDrawing",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "MultiBrush.tsx",
											"line": 86,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 1894,
									"name": "handleSize",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "MultiBrush.tsx",
											"line": 85,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "6"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1895,
										1894
									]
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 84,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1897
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2005,
								1896,
								2001,
								2006,
								2004
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1996,
								1902,
								1915,
								1911,
								1923,
								1920,
								1906,
								1909,
								1936,
								1928,
								1932,
								1926,
								1983,
								1900,
								1963,
								1969,
								1978,
								1948,
								1939,
								1956,
								1961,
								1965,
								1946,
								1973,
								1952,
								1941
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1893
							]
						}
					],
					"sources": [
						{
							"fileName": "MultiBrush.tsx",
							"line": 83,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "MultiBrushProps",
									"id": 2010
								},
								{
									"type": "reference",
									"name": "MultiBrushState",
									"id": 2029
								}
							]
						}
					]
				},
				{
					"id": 2010,
					"name": "MultiBrushProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "MultiBrush.tsx",
							"line": 19,
							"character": 27
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 168
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2011,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2015,
											"name": "allowFreeDrawing",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If this prop is false, you will only be able to draw a new brush if the last position of the timeRanges\narray is equal to null, otherwise it will allow the free drawing and the index passed to onTimeRangeChanged\nwill the equal to the length of the timeRanges array"
											},
											"sources": [
												{
													"fileName": "MultiBrush.tsx",
													"line": 51,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2014,
											"name": "handleSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The size of the invisible side handles. Defaults to 6 pixels."
											},
											"sources": [
												{
													"fileName": "MultiBrush.tsx",
													"line": 44,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2016,
											"name": "onTimeRangeChanged",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A callback which will be called if the brush range is changed by\nthe user. It is called with a Pond TimeRange object and the index position of\nthe brush in the timeRanges prop."
											},
											"sources": [
												{
													"fileName": "MultiBrush.tsx",
													"line": 58,
													"character": 22
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2017,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2018,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2019,
																	"name": "timeRange",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "TimeRange"
																	}
																},
																{
																	"id": 2020,
																	"name": "brushIndex",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "MultiBrush.tsx",
															"line": 58,
															"character": 24
														}
													]
												}
											}
										},
										{
											"id": 2025,
											"name": "onTimeRangeClicked",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "When the user clicks one of the TimeRanges"
											},
											"sources": [
												{
													"fileName": "MultiBrush.tsx",
													"line": 68,
													"character": 22
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2026,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2027,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2028,
																	"name": "brushIndex",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "MultiBrush.tsx",
															"line": 68,
															"character": 24
														}
													]
												}
											}
										},
										{
											"id": 2021,
											"name": "onUserMouseUp",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "when user stop drawing or dragging box"
											},
											"sources": [
												{
													"fileName": "MultiBrush.tsx",
													"line": 63,
													"character": 17
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2022,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2023,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2024,
																	"name": "brushIndex",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "MultiBrush.tsx",
															"line": 63,
															"character": 19
														}
													]
												}
											}
										},
										{
											"id": 2013,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The brush is rendered as an SVG rect. You can specify the style\nof this rect using this prop. The brush style is a function that you\nprovide. It will be called with the index of the TimeRange, corresponding\nto those in the `timeRanges` prop.",
												"text": "For more information, please see the [Traffic example](http://software.es.net/react-timeseries-charts/#/example/traffic)\n"
											},
											"sources": [
												{
													"fileName": "MultiBrush.tsx",
													"line": 39,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 2012,
											"name": "timeRanges",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The timeranges for the brushes. Typically you would maintain this\nas state on the surrounding page, since it would likely control\nanother page element, such as the range of the main chart. See\nalso `onTimeRangeChanged()` for receiving notification of the\nbrush range being changed by the user.",
												"text": "Takes an array of [Pond TimeRange](http://software.es.net/pond/#/class/timerange) object.\n"
											},
											"sources": [
												{
													"fileName": "MultiBrush.tsx",
													"line": 29,
													"character": 14
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TimeRange"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2015,
												2014,
												2016,
												2025,
												2021,
												2013,
												2012
											]
										}
									],
									"sources": [
										{
											"fileName": "MultiBrush.tsx",
											"line": 19,
											"character": 42
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2029,
					"name": "MultiBrushState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "MultiBrush.tsx",
							"line": 71,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2030,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2036,
									"name": "brushIndex",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "MultiBrush.tsx",
											"line": 77,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2032,
									"name": "brushingInitializationSite",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "MultiBrush.tsx",
											"line": 73,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2033,
									"name": "initialBrushBeginTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "MultiBrush.tsx",
											"line": 74,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2034,
									"name": "initialBrushEndTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "MultiBrush.tsx",
											"line": 75,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2035,
									"name": "initialBrushXYPosition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "MultiBrush.tsx",
											"line": 76,
											"character": 26
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 2031,
									"name": "isBrushing",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "MultiBrush.tsx",
											"line": 72,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2036,
										2032,
										2033,
										2034,
										2035,
										2031
									]
								}
							],
							"sources": [
								{
									"fileName": "MultiBrush.tsx",
									"line": 71,
									"character": 29
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1892
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2010,
						2029
					]
				}
			],
			"sources": [
				{
					"fileName": "MultiBrush.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3378,
			"name": "\"Resizable\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/Resizable.tsx",
			"children": [
				{
					"id": 3379,
					"name": "Resizable",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This takes a single child and inserts a prop 'width' on it that is the\ncurrent width of the this container. This is handy if you want to surround\na chart or other svg diagram and have this drive the chart width."
					},
					"typeParameter": [
						{
							"id": 3392,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3381,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3382,
									"name": "new Resizable",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3383,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ResizableProps",
												"id": 3464
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Resizable",
										"id": 3379
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 28,
									"character": 27
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3380,
							"name": "container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 28,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 3459,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3455,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3456,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3457,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3457
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ResizableProps",
												"id": 3464
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3460,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3461,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3462,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3463,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3458,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ResizableState",
										"id": 3466
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3384,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3385,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 35,
									"character": 21
								}
							]
						},
						{
							"id": 3386,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3387,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 40,
									"character": 24
								}
							]
						},
						{
							"id": 3450,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3451,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3452,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3453,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3454,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3388,
							"name": "handleResize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3389,
									"name": "handleResize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 44,
									"character": 16
								}
							]
						},
						{
							"id": 3390,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3391,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 52,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3437,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3438,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3439,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "ResizableState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3440,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3441,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3442,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3443,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "ResizableState",
																						"id": 3466
																					}
																				]
																			}
																		},
																		{
																			"id": 3444,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ResizableProps",
																				"id": 3464
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3445,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3446,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3447,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3448,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3449,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3417,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3418,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3423,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3424,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3425,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableProps",
														"id": 3464
													}
												]
											}
										},
										{
											"id": 3426,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3432,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3433,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3434,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableProps",
														"id": 3464
													}
												]
											}
										},
										{
											"id": 3435,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableState",
														"id": 3466
													}
												]
											}
										},
										{
											"id": 3436,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3402,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3403,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3404,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3405,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3393,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3394,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3410,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3411,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3412,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableProps",
														"id": 3464
													}
												]
											}
										},
										{
											"id": 3413,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableState",
														"id": 3466
													}
												]
											}
										},
										{
											"id": 3414,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3415,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3416,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3419,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3420,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3421,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableProps",
														"id": 3464
													}
												]
											}
										},
										{
											"id": 3422,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3400,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3401,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3427,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3428,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3429,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableProps",
														"id": 3464
													}
												]
											}
										},
										{
											"id": 3430,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableState",
														"id": 3466
													}
												]
											}
										},
										{
											"id": 3431,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3406,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3407,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3408,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableProps",
														"id": 3464
													}
												]
											}
										},
										{
											"id": 3409,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableState",
														"id": 3466
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3395,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3396,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3397,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableProps",
														"id": 3464
													}
												]
											}
										},
										{
											"id": 3398,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableState",
														"id": 3466
													}
												]
											}
										},
										{
											"id": 3399,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3381
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3380,
								3459,
								3455,
								3460,
								3458
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3384,
								3386,
								3450,
								3388,
								3390,
								3437,
								3417,
								3423,
								3432,
								3402,
								3393,
								3410,
								3415,
								3419,
								3400,
								3427,
								3406,
								3395
							]
						}
					],
					"sources": [
						{
							"fileName": "Resizable.tsx",
							"line": 27,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ResizableProps",
									"id": 3464
								},
								{
									"type": "reference",
									"name": "ResizableState",
									"id": 3466
								}
							]
						}
					]
				},
				{
					"id": 3464,
					"name": "ResizableProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Resizable.tsx",
							"line": 13,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3465,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 13,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 3466,
					"name": "ResizableState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "Resizable.tsx",
							"line": 18,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3467,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3468,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Resizable.tsx",
											"line": 19,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3468
									]
								}
							],
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 18,
									"character": 28
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3379
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3464,
						3466
					]
				}
			],
			"sources": [
				{
					"fileName": "Resizable.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3469,
			"name": "\"ScatterChart\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/ScatterChart.tsx",
			"children": [
				{
					"id": 3470,
					"name": "ScatterChart",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `<ScatterChart >` widget is able to display multiple columns of a series\nscattered across a time axis.",
						"text": "The ScatterChart should be used within `<ChartContainer>` etc.,\nas this will construct the horizontal and vertical axis, and\nmanage other elements. As with other charts, this lets them be stacked or\noverlaid on top of each other.\n\nA custom info overlay lets you hover over the data and examine points. Points\ncan be selected or highlighted.\n\n```\n<ChartContainer timeRange={series.timerange()}>\n    <ChartRow height=\"150\">\n        <YAxis id=\"wind\" label=\"Wind gust (mph)\" labelOffset={-5}\n               min={0} max={series.max()} width=\"100\" type=\"linear\" format=\",.1f\"/>\n        <Charts>\n            <ScatterChart\n              axis=\"wind\"\n              series={series}\n              style={{color: \"steelblue\", opacity: 0.5}} />\n        </Charts>\n    </ChartRow>\n</ChartContainer>\n```\n\n### Styling\n\nA scatter chart supports per-column or per-event styling. Styles can be set for\neach of the four states that are possible for each event: normal, highlighted,\nselected or muted. To style per-column, supply an object. For per-event styling\nsupply a function: `(event, column) => {}` The functon will return a style object.\nSee the `style` prop in the API documentation for more information.\n\nSeparately the size of the dots can be controlled with the `radius` prop. This\ncan either be a fixed value (e.g. 2.0), or a function. If a function is supplied\nit will be called as `(event, column) => {}` and should return the size.\n\nThe hover info for each point is also able to be styled using the info style.\nThis enables you to control the drawing of the box and connecting lines. Using\nthe `infoWidth` and `infoHeight` props you can control the size of the box, which\nis fixed.\n"
					},
					"typeParameter": [
						{
							"id": 3506,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3507,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3552,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3478,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3479,
									"name": "new ScatterChart",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3480,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScatterChartProps",
												"id": 3584
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ScatterChart",
										"id": 3470
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 250,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3575,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3477,
							"name": "eventrect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 250,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "SVGRectElement"
							}
						},
						{
							"id": 3571,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3572,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3573,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3573
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ScatterChartProps",
												"id": 3584
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3576,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3577,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3578,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3579,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3574,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3566,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3567,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3568,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3569,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3570,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3481,
							"name": "getOffsetMousePosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3482,
									"name": "getOffsetMousePosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3483,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 259,
									"character": 26
								}
							]
						},
						{
							"id": 3484,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3485,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3486,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													}
												]
											}
										},
										{
											"id": 3487,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 3488,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 270,
									"character": 15
								}
							]
						},
						{
							"id": 3489,
							"name": "handleHover",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3490,
									"name": "handleHover",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3491,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 277,
									"character": 15
								}
							]
						},
						{
							"id": 3492,
							"name": "handleHoverLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3493,
									"name": "handleHoverLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 303,
									"character": 20
								}
							]
						},
						{
							"id": 3494,
							"name": "providedStyleMap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3495,
									"name": "providedStyleMap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3496,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3497,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ScatterChartChannelStyle",
										"id": 437
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 313,
									"character": 20
								}
							]
						},
						{
							"id": 3504,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3505,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 448,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3502,
							"name": "renderScatter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3503,
									"name": "renderScatter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 366,
									"character": 17
								}
							]
						},
						{
							"id": 3553,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3554,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3555,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3556,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3557,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3558,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3559,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 3560,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ScatterChartProps",
																				"id": 3584
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3561,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3562,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3563,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3564,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3565,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3498,
							"name": "style",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3499,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the style used for drawing the path"
									},
									"parameters": [
										{
											"id": 3500,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3501,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 329,
									"character": 9
								}
							]
						},
						{
							"id": 3532,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3533,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3538,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3539,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3540,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ScatterChartProps",
														"id": 3584
													}
												]
											}
										},
										{
											"id": 3541,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3547,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3548,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3549,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ScatterChartProps",
														"id": 3584
													}
												]
											}
										},
										{
											"id": 3550,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3551,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3517,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3518,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3519,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3520,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3508,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3509,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3525,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3526,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3527,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ScatterChartProps",
														"id": 3584
													}
												]
											}
										},
										{
											"id": 3528,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3529,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3530,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3531,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3534,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3535,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3536,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ScatterChartProps",
														"id": 3584
													}
												]
											}
										},
										{
											"id": 3537,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3515,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3516,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3542,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3543,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3544,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ScatterChartProps",
														"id": 3584
													}
												]
											}
										},
										{
											"id": 3545,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3546,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3521,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3522,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3523,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ScatterChartProps",
														"id": 3584
													}
												]
											}
										},
										{
											"id": 3524,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3510,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3511,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3512,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ScatterChartProps",
														"id": 3584
													}
												]
											}
										},
										{
											"id": 3513,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3514,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 3471,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 3472,
									"name": "columns",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 242,
											"character": 15
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"defaultValue": " [\"value\"]"
								},
								{
									"id": 3475,
									"name": "infoHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 245,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "30"
								},
								{
									"id": 3474,
									"name": "infoWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 244,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "90"
								},
								{
									"id": 3473,
									"name": "radius",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 243,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								},
								{
									"id": 3476,
									"name": "visible",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 246,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3472,
										3475,
										3474,
										3473,
										3476
									]
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 241,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3478
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3575,
								3477,
								3571,
								3576,
								3574
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3566,
								3481,
								3484,
								3489,
								3492,
								3494,
								3504,
								3502,
								3553,
								3498,
								3532,
								3538,
								3547,
								3517,
								3508,
								3525,
								3530,
								3534,
								3515,
								3542,
								3521,
								3510
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								3471
							]
						}
					],
					"sources": [
						{
							"fileName": "ScatterChart.tsx",
							"line": 240,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ScatterChartProps",
									"id": 3584
								}
							]
						}
					]
				},
				{
					"id": 3580,
					"name": "EventColumnPair",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ScatterChart.tsx",
							"line": 29,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3581,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3583,
									"name": "column",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 31,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3582,
									"name": "event",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 30,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "Event",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Key"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3583,
										3582
									]
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 29,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 3584,
					"name": "ScatterChartProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ScatterChart.tsx",
							"line": 34,
							"character": 29
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 168
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3585,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3588,
											"name": "axis",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "Reference to the axis which provides the vertical scale for drawing. e.g.\nspecifying `axis=\"trafficRate\"` would refer the y-scale to the YAxis of `id=\"trafficRate\"`."
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 49,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3587,
											"name": "columns",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Which columns of the series to render"
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 43,
													"character": 11
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 3612,
											"name": "highlight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The highlighted dot, as an object containing the { event, column },\nwhich will be rendered in the `highlighted` style.",
												"text": "See also the prop `onMouseNear`.\n"
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 187,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "EventColumnPair",
												"id": 3580
											}
										},
										{
											"id": 3598,
											"name": "info",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The values to show in the info box. This is either an array of\nobjects, with each object specifying the label and value\nto be shown in the info box, or it can also be a string.",
												"text": "For example:\n```\ninfoValues = [{\n     label: \"Traffic\",\n     value: trafficText\n}];\n```\n"
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 120,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 684
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 3601,
											"name": "infoHeight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The height of the hover info box"
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 148,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3599,
											"name": "infoStyle",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The style of the info box itself and the connecting lines.\nTypically, this is an object where the key can describe\nthe stying of the stem, marker, box  and the text of the infoBox.\nThe style for each of them is in the form of CSS properties",
												"text": "For example:\n```\ninfoStyle = {\n     box: {\n         fill: \"black\",\n         color: \"#DDD\"\n     }\n}\n```\n"
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 138,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "EventMarkerStyle",
												"id": 499
											}
										},
										{
											"id": 3603,
											"name": "infoTimeFormat",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Alter the format of the timestamp shown on the info box.\nThis may be either a function or a string. If you provide a function\nthat will be passed an Index and should return a string. For example:\n```\nindex => moment(index.begin()).format(\"Do MMM 'YY\")\n```\nAlternatively you can pass in a d3 format string. That will be applied\nto the begin time of the Index range."
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 165,
													"character": 18
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3604,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3605,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3606,
																			"name": "date",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "ScatterChart.tsx",
																	"line": 165,
																	"character": 20
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 3600,
											"name": "infoWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The width of the hover info box"
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 143,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3613,
											"name": "onMouseNear",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Will be called with the nearest point to the cursor. The callback\nwill contain the point, which is a map of { event, column }."
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 193,
													"character": 15
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3614,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3615,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 3616,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "ScatterChart.tsx",
															"line": 193,
															"character": 17
														}
													]
												}
											}
										},
										{
											"id": 3608,
											"name": "onSelectionChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A callback that will be called when the selection changes. It will be called\nwith an object containing the event and column."
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 179,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3609,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3610,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 3611,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "ScatterChart.tsx",
															"line": 179,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 3589,
											"name": "radius",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The radius of the points in the scatter chart.",
												"text": "If this is a number it will be used as the radius for every point.\nIf this is a function it will be called for each event.\n\nThe function is called with the event and the column name and must return a number.\n\nFor example this function will use the radius column of the event:\n\n```\nconst radius = (event, column) => {\n   return event.get(\"radius\");\n}\n```\n"
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 67,
													"character": 10
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3590,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3591,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3592,
																			"name": "args",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isRest": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "ScatterChart.tsx",
																	"line": 67,
																	"character": 21
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"name": "Styler",
														"id": 613
													}
												]
											}
										},
										{
											"id": 3607,
											"name": "selected",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The selected dot, which will be rendered in the `selected` style.\nIf a dot is selected, all other dots will be rendered in the `muted` style.",
												"text": "See also `onSelectionChange`\n"
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 173,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "EventColumnPair",
												"id": 3580
											}
										},
										{
											"id": 3586,
											"name": "series",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "What [Pond TimeSeries](http://software.es.net/pond/#/class/timeseries) data to visualize"
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 38,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"name": "TimeSeries",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 3593,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The style of the scatter chart drawing (using SVG CSS properties).\nThis is an object with a key for each column which is being plotted,\nper the `columns` prop. Each of those keys has an object as its\nvalue which has keys which are style properties for an SVG <Circle> and\nthe value to use.",
												"text": "For example:\n```\nstyle = {\n    columnName: {\n        normal: {\n            fill: \"steelblue\",\n            opacity: 0.8,\n        },\n        highlighted: {\n            fill: \"#a7c4dd\",\n            opacity: 1.0,\n        },\n        selected: {\n            fill: \"orange\",\n            opacity: 1.0,\n        },\n        muted: {\n            fill: \"grey\",\n            opacity: 0.5\n        }\n    }\n}\n```\n\nYou can also supply a function, which will be called with an event\nand column. The function should return an object containing the\n4 states (normal, highlighted, selected and muted) and the corresponding\nCSS properties.\n"
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 105,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "ScatterChartStyle",
														"id": 442
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3594,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3595,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3596,
																			"name": "channel",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 3597,
																			"name": "event",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "reference",
																				"name": "Event",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "Key"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"name": "ScatterChartChannelStyle",
																		"id": 437
																	}
																}
															],
															"sources": [
																{
																	"fileName": "ScatterChart.tsx",
																	"line": 105,
																	"character": 31
																}
															]
														}
													},
													{
														"type": "reference",
														"name": "Styler",
														"id": 613
													}
												]
											}
										},
										{
											"id": 3602,
											"name": "visible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Show or hide this chart"
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 153,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3588,
												3587,
												3612,
												3598,
												3601,
												3599,
												3603,
												3600,
												3613,
												3608,
												3589,
												3607,
												3586,
												3593,
												3602
											]
										}
									],
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 34,
											"character": 44
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3470
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3580,
						3584
					]
				}
			],
			"sources": [
				{
					"fileName": "ScatterChart.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2037,
			"name": "\"TimeMarker\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/TimeMarker.tsx",
			"children": [
				{
					"id": 2038,
					"name": "TimeMarker",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An overlay marker that marks a specific `time` with a line, time label\nand info box containing data"
					},
					"typeParameter": [
						{
							"id": 2063,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2064,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2109,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2110,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2111,
									"name": "new TimeMarker",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2112,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TimeMarkerProps",
												"id": 2146
											}
										},
										{
											"id": 2113,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TimeMarker",
										"id": 2038
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2136,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2132,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2133,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2134,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2134
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TimeMarkerProps",
												"id": 2146
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2137,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2138,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2139,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2140,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2135,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2127,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2128,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2129,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2130,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2131,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2061,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2062,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimeMarker.tsx",
									"line": 208,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2058,
							"name": "renderInfoBox",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2059,
									"name": "renderInfoBox",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2060,
											"name": "posx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimeMarker.tsx",
									"line": 171,
									"character": 17
								}
							]
						},
						{
							"id": 2052,
							"name": "renderLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2053,
									"name": "renderLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2054,
											"name": "posx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimeMarker.tsx",
									"line": 129,
									"character": 14
								}
							]
						},
						{
							"id": 2055,
							"name": "renderTimeMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2056,
									"name": "renderTimeMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2057,
											"name": "d",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimeMarker.tsx",
									"line": 142,
									"character": 20
								}
							]
						},
						{
							"id": 2114,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2115,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2116,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2117,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2118,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2119,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2120,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 2121,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "TimeMarkerProps",
																				"id": 2146
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2122,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2123,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2124,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2125,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2126,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2089,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2090,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2095,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2096,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2097,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerProps",
														"id": 2146
													}
												]
											}
										},
										{
											"id": 2098,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2104,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2105,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2106,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerProps",
														"id": 2146
													}
												]
											}
										},
										{
											"id": 2107,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2108,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2074,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2075,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2076,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2077,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2065,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2066,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2082,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2083,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2084,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerProps",
														"id": 2146
													}
												]
											}
										},
										{
											"id": 2085,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2086,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2087,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2088,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2091,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2092,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2093,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerProps",
														"id": 2146
													}
												]
											}
										},
										{
											"id": 2094,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2072,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2073,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2099,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2100,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2101,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerProps",
														"id": 2146
													}
												]
											}
										},
										{
											"id": 2102,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2103,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2078,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2079,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2080,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerProps",
														"id": 2146
													}
												]
											}
										},
										{
											"id": 2081,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2067,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2068,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2069,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerProps",
														"id": 2146
													}
												]
											}
										},
										{
											"id": 2070,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2071,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2039,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2051,
									"name": "infoHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 126,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "25"
								},
								{
									"id": 2050,
									"name": "infoWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 125,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "90"
								},
								{
									"id": 2041,
									"name": "showInfoBox",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 121,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 2042,
									"name": "showLine",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 122,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 2043,
									"name": "showTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 123,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 2044,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 124,
											"character": 13
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2045,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2047,
															"name": "box",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 347,
																	"character": 7
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 2046,
															"name": "text",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 346,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2047,
																2046
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2048,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2049,
															"name": "line",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 392,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2049
															]
														}
													]
												}
											}
										]
									},
									"defaultValue": " defaultTimeMarkerStyle"
								},
								{
									"id": 2040,
									"name": "visible",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 120,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2051,
										2050,
										2041,
										2042,
										2043,
										2044,
										2040
									]
								}
							],
							"sources": [
								{
									"fileName": "TimeMarker.tsx",
									"line": 119,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2110
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2136,
								2132,
								2137,
								2135
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2127,
								2061,
								2058,
								2052,
								2055,
								2114,
								2089,
								2095,
								2104,
								2074,
								2065,
								2082,
								2087,
								2091,
								2072,
								2099,
								2078,
								2067
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2039
							]
						}
					],
					"sources": [
						{
							"fileName": "TimeMarker.tsx",
							"line": 118,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "TimeMarkerProps",
									"id": 2146
								}
							]
						}
					]
				},
				{
					"id": 2141,
					"name": "StringPair",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "TimeMarker.tsx",
							"line": 25,
							"character": 22
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2142,
					"name": "TimeFormatCallback",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "TimeMarker.tsx",
							"line": 27,
							"character": 30
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2143,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 2144,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2145,
											"name": "d",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimeMarker.tsx",
									"line": 27,
									"character": 32
								}
							]
						}
					}
				},
				{
					"id": 2146,
					"name": "TimeMarkerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "TimeMarker.tsx",
							"line": 29,
							"character": 27
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 168
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2147,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2151,
											"name": "info",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The values to show in the info box. This is either an array of objects,\nwith each object specifying the label and value to be shown in the info\nbox, or a simple string label"
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 75,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 684
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 2152,
											"name": "infoHeight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The height of the hover info box"
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 80,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2153,
											"name": "infoWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The width of the hover info box"
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 85,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2154,
											"name": "showInfoBox",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Display the info box at all. If you don't have any values to show and\njust want a line and a time (for example), you can set this to false."
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 91,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2155,
											"name": "showLine",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "You can show the info box without the corresponding time marker. Why\nwould you do this? You might use the `ChartContainer` tracker mechanism\nto show the line across multiple rows, then add a `TimeMarker` selectively\nto each row."
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 99,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2156,
											"name": "showTime",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "You can hide the time displayed above the info box. You might do this\nbecause it is already displayed elsewhere in your UI. Or maybe you\njust don't like it."
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 106,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2149,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The style of the info box and connecting lines.\nIt is an object that specifies the stying for the line, along with that\nof the infoBox i.e. text and box where each of these have CSS Properties",
												"text": "For example:\n```\nconst style = {\n     line: {\n         stroke: \"#999\",\n         cursor: \"crosshair\",\n         pointerEvents: \"none\"\n     },\n     text: {\n         fontSize: 11,\n         fill: \"#bdbdbd\",\n         stroke: \"none\",\n         pointerEvents: \"none\"\n     },\n     box: {\n         fill: \"#FEFEFE\",\n         stroke: \"#DDD\",\n         opacity: 0.8\n     }\n}\n```\n"
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 62,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerStyle",
														"id": 511
													}
												]
											}
										},
										{
											"id": 2148,
											"name": "time",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "A Javascript Date object to position the marker"
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 33,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 2150,
											"name": "timeFormat",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The format to display the time of the marker.\nIt can either be a string or a function that takes a Date and returns a string"
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 68,
													"character": 14
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "TimeFormatCallback",
														"id": 2142
													}
												]
											}
										},
										{
											"id": 2157,
											"name": "visible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Show or hide this chart"
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 111,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2151,
												2152,
												2153,
												2154,
												2155,
												2156,
												2149,
												2148,
												2150,
												2157
											]
										}
									],
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 29,
											"character": 42
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2038
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2141,
						2142,
						2146
					]
				}
			],
			"sources": [
				{
					"fileName": "TimeMarker.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3617,
			"name": "\"TimeRangeMarker\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/TimeRangeMarker.tsx",
			"children": [
				{
					"id": 3618,
					"name": "TimeRangeMarker",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a band with extents defined by the supplied `TimeRange`. This\nis a super simple component right now which just renders a simple\nrectangle, in the style of the prop `style` across the timerange\nspecified. However, this is useful for highlighting a timerange to\ncorrespond with another part of the your UI.",
						"text": "See also the Brush component for a `TimeRange` marker that you can\nresize interactively.\n"
					},
					"typeParameter": [
						{
							"id": 3627,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3628,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3673,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3674,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3675,
									"name": "new TimeRangeMarker",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3676,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TimeRangeMarkerProps",
												"id": 3705
											}
										},
										{
											"id": 3677,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TimeRangeMarker",
										"id": 3618
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3700,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3696,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3697,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3698,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3698
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TimeRangeMarkerProps",
												"id": 3705
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3701,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3702,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3703,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3704,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3699,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3691,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3692,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3693,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3694,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3695,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3625,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3626,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimeRangeMarker.tsx",
									"line": 88,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3623,
							"name": "renderBand",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3624,
									"name": "renderBand",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimeRangeMarker.tsx",
									"line": 50,
									"character": 14
								}
							]
						},
						{
							"id": 3678,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3679,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3680,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3681,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3682,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3683,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3684,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 3685,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "TimeRangeMarkerProps",
																				"id": 3705
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3686,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3687,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3688,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3689,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3690,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3653,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3654,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3659,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3660,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3661,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeRangeMarkerProps",
														"id": 3705
													}
												]
											}
										},
										{
											"id": 3662,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3668,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3669,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3670,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeRangeMarkerProps",
														"id": 3705
													}
												]
											}
										},
										{
											"id": 3671,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3672,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3638,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3639,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3640,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3641,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3629,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3630,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3646,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3647,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3648,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeRangeMarkerProps",
														"id": 3705
													}
												]
											}
										},
										{
											"id": 3649,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3650,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3651,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3652,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3655,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3656,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3657,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeRangeMarkerProps",
														"id": 3705
													}
												]
											}
										},
										{
											"id": 3658,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3636,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3637,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3663,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3664,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3665,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeRangeMarkerProps",
														"id": 3705
													}
												]
											}
										},
										{
											"id": 3666,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3667,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3642,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3643,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3644,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeRangeMarkerProps",
														"id": 3705
													}
												]
											}
										},
										{
											"id": 3645,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3631,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3632,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3633,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeRangeMarkerProps",
														"id": 3705
													}
												]
											}
										},
										{
											"id": 3634,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3635,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 3619,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 3620,
									"name": "visible",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "TimeRangeMarker.tsx",
											"line": 46,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 3621,
									"name": "style",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3622,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "TimeRangeMarker.tsx",
													"line": 47,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"rgba(70, 130, 180, 0.25);\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3622
											]
										}
									],
									"sources": [
										{
											"fileName": "TimeRangeMarker.tsx",
											"line": 47,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3620
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										3621
									]
								}
							],
							"sources": [
								{
									"fileName": "TimeRangeMarker.tsx",
									"line": 45,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3674
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3700,
								3696,
								3701,
								3699
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3691,
								3625,
								3623,
								3678,
								3653,
								3659,
								3668,
								3638,
								3629,
								3646,
								3651,
								3655,
								3636,
								3663,
								3642,
								3631
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								3619
							]
						}
					],
					"sources": [
						{
							"fileName": "TimeRangeMarker.tsx",
							"line": 44,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "TimeRangeMarkerProps",
									"id": 3705
								}
							]
						}
					]
				},
				{
					"id": 3705,
					"name": "TimeRangeMarkerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "TimeRangeMarker.tsx",
							"line": 15,
							"character": 32
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 168
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3706,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3708,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The style of the rect that will be rendered as a SVG <Rect>. This\nobject is the inline CSS for that rect."
											},
											"sources": [
												{
													"fileName": "TimeRangeMarker.tsx",
													"line": 26,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "CSSProperties"
											}
										},
										{
											"id": 3707,
											"name": "timerange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "The timerange to mark. This is in the form of a\n[Pond TimeRange](http://software.es.net/pond/#/class/timerange)"
											},
											"sources": [
												{
													"fileName": "TimeRangeMarker.tsx",
													"line": 20,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "TimeRange"
											}
										},
										{
											"id": 3709,
											"name": "visible",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Show or hide this marker"
											},
											"sources": [
												{
													"fileName": "TimeRangeMarker.tsx",
													"line": 31,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3708,
												3707,
												3709
											]
										}
									],
									"sources": [
										{
											"fileName": "TimeRangeMarker.tsx",
											"line": 15,
											"character": 47
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3618
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3705
					]
				}
			],
			"sources": [
				{
					"fileName": "TimeRangeMarker.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3710,
			"name": "\"ValueAxis\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/ValueAxis.tsx",
			"children": [
				{
					"id": 3711,
					"name": "ValueAxis",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a 'axis' that display a label for a current tracker value:\n```\n     ----+----------------+\n         |     56.2G      |\n         |      bps       |\n         |                |\n     ----+----------------+\n```\nThis would be used when you have many rows of data and the user is required\nto interact with the data to see actual values. You would use this at the\nend of the row and supply it with the current value. See the cycling example\nfor how that would all work."
					},
					"typeParameter": [
						{
							"id": 3716,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3717,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3762,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3763,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3764,
									"name": "new ValueAxis",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3765,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ValueAxisProps",
												"id": 3794
											}
										},
										{
											"id": 3766,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValueAxis",
										"id": 3711
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3789,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3785,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3786,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3787,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3787
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ValueAxisProps",
												"id": 3794
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3790,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3791,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3792,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3793,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3788,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3780,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3781,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3782,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3783,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3784,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3714,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3715,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "ValueAxis.tsx",
									"line": 60,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3767,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3768,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3769,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3770,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3771,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3772,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3773,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 3774,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ValueAxisProps",
																				"id": 3794
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3775,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3776,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3777,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3778,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3779,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3742,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3743,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3748,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3749,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3750,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueAxisProps",
														"id": 3794
													}
												]
											}
										},
										{
											"id": 3751,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3757,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3758,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3759,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueAxisProps",
														"id": 3794
													}
												]
											}
										},
										{
											"id": 3760,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3761,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3727,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3728,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3729,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3730,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3718,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3719,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3735,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3736,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3737,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueAxisProps",
														"id": 3794
													}
												]
											}
										},
										{
											"id": 3738,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3739,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3740,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3741,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3744,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3745,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3746,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueAxisProps",
														"id": 3794
													}
												]
											}
										},
										{
											"id": 3747,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3725,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3726,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3752,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3753,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3754,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueAxisProps",
														"id": 3794
													}
												]
											}
										},
										{
											"id": 3755,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3756,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3731,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3732,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3733,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueAxisProps",
														"id": 3794
													}
												]
											}
										},
										{
											"id": 3734,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3720,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3721,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3722,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueAxisProps",
														"id": 3794
													}
												]
											}
										},
										{
											"id": 3723,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3724,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 3712,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 3713,
									"name": "visible",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ValueAxis.tsx",
											"line": 57,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3713
									]
								}
							],
							"sources": [
								{
									"fileName": "ValueAxis.tsx",
									"line": 56,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3763
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3789,
								3785,
								3790,
								3788
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3780,
								3714,
								3767,
								3742,
								3748,
								3757,
								3727,
								3718,
								3735,
								3740,
								3744,
								3725,
								3752,
								3731,
								3720
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								3712
							]
						}
					],
					"sources": [
						{
							"fileName": "ValueAxis.tsx",
							"line": 55,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ValueAxisProps",
									"id": 3794
								}
							]
						}
					]
				},
				{
					"id": 3794,
					"name": "ValueAxisProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ValueAxis.tsx",
							"line": 13,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3795,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3797,
									"name": "detail",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Use this to show what units are being used. It will appear below\nthe value."
									},
									"sources": [
										{
											"fileName": "ValueAxis.tsx",
											"line": 23,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3799,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The height of the axis"
									},
									"sources": [
										{
											"fileName": "ValueAxis.tsx",
											"line": 33,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3796,
									"name": "value",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "If values are numbers, use this format string"
									},
									"sources": [
										{
											"fileName": "ValueAxis.tsx",
											"line": 17,
											"character": 9
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 3800,
									"name": "visible",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Show or hide this"
									},
									"sources": [
										{
											"fileName": "ValueAxis.tsx",
											"line": 38,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3798,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The width of the axis"
									},
									"sources": [
										{
											"fileName": "ValueAxis.tsx",
											"line": 28,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3797,
										3799,
										3796,
										3800,
										3798
									]
								}
							],
							"sources": [
								{
									"fileName": "ValueAxis.tsx",
									"line": 13,
									"character": 28
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3711
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3794
					]
				}
			],
			"sources": [
				{
					"fileName": "ValueAxis.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2898,
			"name": "\"ValueList\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/ValueList.tsx",
			"children": [
				{
					"id": 2899,
					"name": "ValueList",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a box of size `width` and `height` and places a list of label\nvalue pairs within that box, `align`ed to the left or center within\nthe box. The `style` prop is a CSS properties object that will be\napplied to the box.",
						"text": "     +----------------+\n     | Max 100 Gbps   |\n     | Avg 26 Gbps    |\n     +----------------+\n\n"
					},
					"typeParameter": [
						{
							"id": 2910,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2911,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2956,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2957,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2958,
									"name": "new ValueList",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2959,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ValueListProps",
												"id": 2988
											}
										},
										{
											"id": 2960,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValueList",
										"id": 2899
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2983,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2979,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2980,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2981,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2981
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ValueListProps",
												"id": 2988
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2984,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2985,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2986,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2987,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2982,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2974,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2975,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2976,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2977,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2978,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2908,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2909,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "ValueList.tsx",
									"line": 80,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2961,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2962,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2963,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2964,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2965,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2966,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2967,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 2968,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ValueListProps",
																				"id": 2988
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2969,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2970,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2971,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2972,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2973,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2936,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2937,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2942,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2943,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2944,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 2988
													}
												]
											}
										},
										{
											"id": 2945,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2951,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2952,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2953,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 2988
													}
												]
											}
										},
										{
											"id": 2954,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2955,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2921,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2922,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2923,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2924,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2912,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2913,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2929,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2930,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2931,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 2988
													}
												]
											}
										},
										{
											"id": 2932,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2933,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2934,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2935,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2938,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2939,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2940,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 2988
													}
												]
											}
										},
										{
											"id": 2941,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2919,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2920,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2946,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2947,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2948,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 2988
													}
												]
											}
										},
										{
											"id": 2949,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2950,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2925,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2926,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2927,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 2988
													}
												]
											}
										},
										{
											"id": 2928,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2914,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2915,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2916,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 2988
													}
												]
											}
										},
										{
											"id": 2917,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2918,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2900,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2901,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 74,
											"character": 13
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "center"
									},
									"defaultValue": "\"center\""
								},
								{
									"id": 2903,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 76,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								},
								{
									"id": 2904,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 77,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2905,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2907,
													"name": "box",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 347,
															"character": 7
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												},
												{
													"id": 2906,
													"name": "text",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 346,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2907,
														2906
													]
												}
											]
										}
									},
									"defaultValue": " defaultStyle"
								},
								{
									"id": 2902,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 75,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2901,
										2903,
										2904,
										2902
									]
								}
							],
							"sources": [
								{
									"fileName": "ValueList.tsx",
									"line": 73,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2957
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2983,
								2979,
								2984,
								2982
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2974,
								2908,
								2961,
								2936,
								2942,
								2951,
								2921,
								2912,
								2929,
								2934,
								2938,
								2919,
								2946,
								2925,
								2914
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2900
							]
						}
					],
					"sources": [
						{
							"fileName": "ValueList.tsx",
							"line": 72,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ValueListProps",
									"id": 2988
								}
							]
						}
					]
				},
				{
					"id": 2988,
					"name": "ValueListProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ValueList.tsx",
							"line": 16,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2989,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2990,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Where to position the label, either `left` or `center` within the box"
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 20,
											"character": 9
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "center"
											},
											{
												"type": "stringLiteral",
												"value": "left"
											}
										]
									}
								},
								{
									"id": 2994,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The height of the rectangle to render into"
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 57,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2992,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The style of the info box. It is an object containing the styling for the\ntext and the box",
										"text": "For example:\n```\nconst style = {\n     text: {\n         fontSize: 11,\n         fill: \"#bdbdbd\",\n     },\n     box: {\n         fill: \"#FEFEFE\",\n         stroke: \"#DDD\",\n     }\n}\n"
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 47,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "InfoBoxStyle",
										"id": 484
									}
								},
								{
									"id": 2991,
									"name": "values",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"comment": {
										"shortText": "An array of label value pairs to render where each pair is of the type\n```\n{label: \"\", value: \"15.7mph\"}\n```"
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 28,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "LabelValueList",
										"id": 684
									}
								},
								{
									"id": 2993,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The width of the rectangle to render into"
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 52,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2990,
										2994,
										2992,
										2991,
										2993
									]
								}
							],
							"sources": [
								{
									"fileName": "ValueList.tsx",
									"line": 16,
									"character": 28
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2899
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2988
					]
				}
			],
			"sources": [
				{
					"fileName": "ValueList.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2158,
			"name": "\"YAxis\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/YAxis.tsx",
			"children": [
				{
					"id": 2159,
					"name": "YAxis",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The YAxis widget displays a vertical axis to the left or right\nof the charts. A YAxis always appears within a `ChartRow`, from\nwhich it gets its height and positioning. You can have more than\none axis per row.",
						"text": "Here's a simple YAxis example:\n\n```js\n<YAxis\n     id=\"price-axis\"\n     label=\"Price (USD)\"\n     min={0} max={100}\n     width=\"60\"\n     type=\"linear\"\n     format=\"$,.2f\"\n/>\n```\n\nVisually you can control the axis `label`, its size via the `width`\nprop, its `format`, and `type` of scale (linear).\n\nEach axis also defines a scale through a `min` and `max` prop. Charts\nmay then refer to the axis by by citing the axis `id` in their `axis`\nprop. Those charts will then use the axis scale for their y-scale.\n\nHere is an example of two line charts that each have their own axis:\n\n```js\n<ChartContainer timeRange={audSeries.timerange()}>\n    <ChartRow height=\"200\">\n        <YAxis id=\"aud\" label=\"AUD\" min={0.5} max={1.5} width=\"60\" format=\"$,.2f\"/>\n        <Charts>\n            <LineChart axis=\"aud\" series={audSeries} style={audStyle}/>\n            <LineChart axis=\"euro\" series={euroSeries} style={euroStyle}/>\n        </Charts>\n        <YAxis id=\"euro\" label=\"Euro\" min={0.5} max={1.5} width=\"80\" format=\"$,.2f\"/>\n    </ChartRow>\n</ChartContainer>\n```\n\n Note that there are two `<YAxis>` components defined here, one before\n the `<Charts>` block and one after. This defines that the first axis will\n appear to the left of the charts and the second will appear after the charts.\n Each of the line charts uses its `axis` prop to identify the axis (\"aud\" or \"euro\")\n it will use for its vertical scale.\n"
					},
					"typeParameter": [
						{
							"id": 2175,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2176,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2221,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2222,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2223,
									"name": "new YAxis",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2224,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "YAxisProps",
												"id": 2259
											}
										},
										{
											"id": 2225,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "YAxis",
										"id": 2159
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2248,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2244,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2245,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2246,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2246
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "YAxisProps",
												"id": 2259
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2249,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2250,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2251,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2252,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2247,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2239,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2240,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2241,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2242,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2243,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2173,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2174,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "YAxis.tsx",
									"line": 197,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2226,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2227,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2228,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2229,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2230,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2231,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2232,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 2233,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "YAxisProps",
																				"id": 2259
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2234,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2235,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2236,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2237,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2238,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2201,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2202,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2207,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2208,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2209,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "YAxisProps",
														"id": 2259
													}
												]
											}
										},
										{
											"id": 2210,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2216,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2217,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2218,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "YAxisProps",
														"id": 2259
													}
												]
											}
										},
										{
											"id": 2219,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2220,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2186,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2187,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2188,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2189,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2177,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2178,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2194,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2195,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2196,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "YAxisProps",
														"id": 2259
													}
												]
											}
										},
										{
											"id": 2197,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2198,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2199,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2200,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2203,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2204,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2205,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "YAxisProps",
														"id": 2259
													}
												]
											}
										},
										{
											"id": 2206,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2184,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2185,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2211,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2212,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2213,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "YAxisProps",
														"id": 2259
													}
												]
											}
										},
										{
											"id": 2214,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2215,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2190,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2191,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2192,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "YAxisProps",
														"id": 2259
													}
												]
											}
										},
										{
											"id": 2193,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2179,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2180,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2181,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "YAxisProps",
														"id": 2259
													}
												]
											}
										},
										{
											"id": 2182,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2183,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2160,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2166,
									"name": "absolute",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 188,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 2162,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 184,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"left\""
								},
								{
									"id": 2167,
									"name": "format",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 189,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".2s\""
								},
								{
									"id": 2171,
									"name": "hideAxisLine",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 193,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 2161,
									"name": "id",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 183,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"yaxis\""
								},
								{
									"id": 2168,
									"name": "labelOffset",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 190,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 2164,
									"name": "max",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 186,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 2163,
									"name": "min",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 185,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 2172,
									"name": "showGrid",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 194,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 2169,
									"name": "transition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 191,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								},
								{
									"id": 2165,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 187,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "Linear",
										"id": 74
									},
									"defaultValue": " ScaleType.Linear"
								},
								{
									"id": 2170,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 192,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "80"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2166,
										2162,
										2167,
										2171,
										2161,
										2168,
										2164,
										2163,
										2172,
										2169,
										2165,
										2170
									]
								}
							],
							"sources": [
								{
									"fileName": "YAxis.tsx",
									"line": 182,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2222
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2248,
								2244,
								2249,
								2247
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2239,
								2173,
								2226,
								2201,
								2207,
								2216,
								2186,
								2177,
								2194,
								2199,
								2203,
								2184,
								2211,
								2190,
								2179
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2160
							]
						}
					],
					"sources": [
						{
							"fileName": "YAxis.tsx",
							"line": 181,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "YAxisProps",
									"id": 2259
								}
							]
						}
					]
				},
				{
					"id": 2259,
					"name": "YAxisProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "YAxis.tsx",
							"line": 25,
							"character": 22
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartRowProps",
								"id": 2388
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2260,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2269,
											"name": "absolute",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Render all ticks on the axis as positive values."
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 86,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2272,
											"name": "align",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If the chart should be rendered to with the axis on the left or right.\nIf you are using the axis in a ChartRow, you do not need to provide this."
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 108,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2262,
											"name": "chartExtent",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "Width of the chart"
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 35,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2271,
											"name": "format",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If a string, the d3.format for the axis labels (e.g. `format=\\\"$,.2f\\\"`).\nIf a function, that function will be called with each tick value and\nshould generate a formatted string for that value to be used as the label\nfor that tick (e.g. `function (n) { return Number(n).toFixed(2) }`)."
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 102,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2278,
											"name": "hideAxisLine",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Show / Hide axis line"
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 123,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2261,
											"name": "id",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "A name for the axis which can be used by a chart to reference the axis.\nThis is used by the ChartRow to match charts to this axis."
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 30,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2263,
											"name": "label",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The label to be displayed alongside the axis."
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 40,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2270,
											"name": "labelOffset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Offset the axis label from its default position. This allows you to\nfine tune the label location, which may be necessary depending on the\nscale and how much room the tick labels take up. Maybe positive or\nnegative."
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 94,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2265,
											"name": "max",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "Maxium value, which combined with \"min,\"\" define the scale of the axis."
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 50,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2264,
											"name": "min",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "Minium value, which combined with \"max\", define the scale of the axis."
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 45,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2273,
											"name": "scale",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "[Internal] The scale supplied by the ChartRow"
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 113,
													"character": 9
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2274,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2275,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2276,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "YAxis.tsx",
															"line": 113,
															"character": 11
														}
													]
												}
											}
										},
										{
											"id": 2279,
											"name": "showGrid",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Render a horizontal grid by extending the axis ticks across the chart area. Note that this\ncan only be applied to an inner axis (one next to a chart). If you have multiple axes then\nthis can't be used on the outer axes. Also, if you have an axis on either side of the chart\nthen you can use this, but the UX not be ideal."
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 131,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2268,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Object specifying the CSS by which the axis can be styled. The object can contain:\n`label`, `axis`, `values` and `ticks`. Each of these is an inline CSS style applied\nto the axis label, axis values, axis line and ticks respectively.",
												"text": "For example:\n```\nconst style = {\n     label: {\n         fontSize: 12,\n         fontColor: \"red\"\n     },\n     ticks: {\n         fill: \"black\",\n         stroke: \"none\"\n     },\n}\n```\n"
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 81,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "YAxisStyle",
												"id": 2253
											}
										},
										{
											"id": 2277,
											"name": "tickCount",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The number of ticks"
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 118,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2267,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "The scale type: `linear`, `power`, or `log`."
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 60,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"name": "ScaleType",
												"id": 73
											}
										},
										{
											"id": 2266,
											"name": "width",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "The width of the axis"
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 55,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2269,
												2272,
												2262,
												2271,
												2278,
												2261,
												2263,
												2270,
												2265,
												2264,
												2273,
												2279,
												2268,
												2277,
												2267,
												2266
											]
										}
									],
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 25,
											"character": 40
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2253,
					"name": "YAxisStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "YAxis.tsx",
							"line": 18,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2254,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2256,
									"name": "axis",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 20,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 2255,
									"name": "label",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 19,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 2258,
									"name": "ticks",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 22,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 2257,
									"name": "values",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 21,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2256,
										2255,
										2258,
										2257
									]
								}
							],
							"sources": [
								{
									"fileName": "YAxis.tsx",
									"line": 18,
									"character": 24
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2159
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2259,
						2253
					]
				}
			],
			"sources": [
				{
					"fileName": "YAxis.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"curve\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/curve.ts",
			"children": [
				{
					"id": 2,
					"name": "CurveLookup",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "curve.ts",
							"line": 32,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 4,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 5,
										"name": "name",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 32,
									"character": 25
								}
							]
						}
					}
				},
				{
					"id": 6,
					"name": "curves",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 9,
							"name": "curveBasis",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 37,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 7,
							"name": "curveBasisClosed",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 35,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 8,
							"name": "curveBasisOpen",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 36,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 10,
							"name": "curveBundle",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 38,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveBundleFactory"
							}
						},
						{
							"id": 13,
							"name": "curveCardinal",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 41,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveCardinalFactory"
							}
						},
						{
							"id": 11,
							"name": "curveCardinalClosed",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 39,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveCardinalFactory"
							}
						},
						{
							"id": 12,
							"name": "curveCardinalOpen",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 40,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveCardinalFactory"
							}
						},
						{
							"id": 16,
							"name": "curveCatmullRom",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 44,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveCatmullRomFactory"
							}
						},
						{
							"id": 14,
							"name": "curveCatmullRomClosed",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 42,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveCatmullRomFactory"
							}
						},
						{
							"id": 15,
							"name": "curveCatmullRomOpen",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 43,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveCatmullRomFactory"
							}
						},
						{
							"id": 18,
							"name": "curveLinear",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 46,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 17,
							"name": "curveLinearClosed",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 45,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 19,
							"name": "curveMonotoneX",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 47,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 20,
							"name": "curveMonotoneY",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 48,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 21,
							"name": "curveNatural",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 49,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 22,
							"name": "curveStep",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 50,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 23,
							"name": "curveStepAfter",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 51,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 24,
							"name": "curveStepBefore",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 52,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								9,
								7,
								8,
								10,
								13,
								11,
								12,
								16,
								14,
								15,
								18,
								17,
								19,
								20,
								21,
								22,
								23,
								24
							]
						}
					],
					"sources": [
						{
							"fileName": "curve.ts",
							"line": 34,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						6
					]
				}
			],
			"sources": [
				{
					"fileName": "curve.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 25,
			"name": "\"interpolators\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/interpolators.ts",
			"children": [
				{
					"id": 26,
					"name": "ScaleInterpolator",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 41,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 42,
									"name": "new ScaleInterpolator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 43,
											"name": "transition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 44,
											"name": "ease",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 45,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 46,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 47,
																	"name": "x",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"sources": [
														{
															"fileName": "interpolators.ts",
															"line": 31,
															"character": 41
														}
													]
												}
											}
										},
										{
											"id": 48,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnimationCallback",
												"id": 68
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ScaleInterpolator",
										"id": 26
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 29,
									"character": 40
								}
							]
						},
						{
							"id": 28,
							"name": "cacheKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 21,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29,
							"name": "cachedScaler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 22,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 30,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 31,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 32,
													"name": "v",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "interpolators.ts",
											"line": 22,
											"character": 25
										}
									]
								}
							}
						},
						{
							"id": 35,
							"name": "callback",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 27,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "AnimationCallback",
								"id": 68
							}
						},
						{
							"id": 37,
							"name": "ease",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 29,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 38,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 39,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 40,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "interpolators.ts",
											"line": 29,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 27,
							"name": "initialTimestamp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 19,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34,
							"name": "sourceScale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 25,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "Scale",
								"id": 158
							}
						},
						{
							"id": 33,
							"name": "targetScale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 24,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "Scale",
								"id": 158
							}
						},
						{
							"id": 36,
							"name": "transitionTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 28,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 60,
							"name": "latestScale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 61,
									"name": "latestScale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the d3 scale. It will return the target scale if present\notherwise the source scale. Note: this is the d3 internal scale. To\nscale values, use the scaler."
									},
									"type": {
										"type": "reference",
										"name": "Scale",
										"id": 158
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 132,
									"character": 15
								}
							]
						},
						{
							"id": 55,
							"name": "scaler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 56,
									"name": "scaler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a scaler, which is a function that scales the value\nsupplied to it. This returns the scaler corresponding to the\nsource scale. Note that if a target scale is defined and the\ninterpolator is animating towards that target, the supplied\ncallback will be called with the transitional scaler that can\nbe used to scale data to the intermediate state."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 58,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 59,
															"name": "v",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 120,
									"character": 10
								}
							]
						},
						{
							"id": 51,
							"name": "setScale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 52,
									"name": "setScale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A new (or initial) scale is set on the interpolator"
									},
									"parameters": [
										{
											"id": 53,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 54,
											"name": "scale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Scale",
												"id": 158
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 88,
									"character": 12
								}
							]
						},
						{
							"id": 62,
							"name": "transition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 63,
									"name": "transition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the transition, as set in the constructor"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 139,
									"character": 14
								}
							]
						},
						{
							"id": 49,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 50,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 42,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								41
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								28,
								29,
								35,
								37,
								27,
								34,
								33,
								36
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								60,
								55,
								51,
								62,
								49
							]
						}
					],
					"sources": [
						{
							"fileName": "interpolators.ts",
							"line": 18,
							"character": 38
						}
					]
				},
				{
					"id": 68,
					"name": "AnimationCallback",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "interpolators.ts",
							"line": 16,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 69,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 70,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 71,
											"name": "f",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScalerFunction",
												"id": 64
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 16,
									"character": 31
								}
							]
						}
					}
				},
				{
					"id": 64,
					"name": "ScalerFunction",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "interpolators.ts",
							"line": 15,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 65,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 66,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 67,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 15,
									"character": 28
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						26
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						68,
						64
					]
				}
			],
			"sources": [
				{
					"fileName": "interpolators.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 308,
			"name": "\"style\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/style.ts",
			"children": [
				{
					"id": 309,
					"name": "BarChartChannelStyle",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"indexSignature": {
						"id": 311,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 312,
								"name": "key",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "reference",
							"name": "ElementStyle",
							"id": 321
						}
					},
					"children": [
						{
							"id": 310,
							"name": "bar",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 176,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementStyle",
								"id": 321
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								310
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 175,
							"character": 37
						}
					]
				},
				{
					"id": 357,
					"name": "AreaChartChannelStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "A single channel of a `AreaChart` maps the properties \"area\" and \"line\" to\nthe `ElementStyle` for the rendered area and outline respectively.",
						"text": "Example:\n```\n{\n    line: {\n        normal: { stroke: primaryColor, fill: \"none\", strokeWidth: 1 },\n        highlighted: { stroke: highlightColor, fill: \"none\", strokeWidth: 1 },\n        selected: { stroke: selectedColor, fill: \"none\", strokeWidth: 1 },\n        muted: { stroke: primaryColor, fill: \"none\", opacity: mutedLineOpacity, strokeWidth: 1 }\n    },\n    area: {\n        normal: { fill: primaryColor, stroke: \"none\", opacity: areaOpacity },\n        highlighted: { fill: highlightColor, stroke: \"none\", opacity: areaOpacity },\n        selected: { fill: selectedColor, stroke: \"none\", opacity: areaOpacity },\n        muted: { fill: primaryColor, stroke: \"none\", opacity: mutedAreaOpacity },\n    }\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 129,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 358,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 360,
									"name": "area",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 131,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 321
									}
								},
								{
									"id": 359,
									"name": "line",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 130,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 321
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										360,
										359
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 129,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 361,
					"name": "AreaChartStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "The style of a `AreaChart` is a mapping of `channel` name (corresponding\nto the column of a `TimeSeries`) to the `AreaChartChannelStyle`.",
						"text": "Example:\n```\n{\n    temperature: {\n        line: {\n            normal: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 1 },\n            highlighted: { stroke: \"#5a98cb\", fill: \"none\", strokeWidth: 1 },\n            selected: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 2 },\n            muted: { stroke: \"steelblue\", fill: \"none\", opacity: 0.5, strokeWidth: 1 }\n        }\n    }\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 152,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 362,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 363,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 364,
										"name": "channel",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "AreaChartChannelStyle",
									"id": 357
								}
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 152,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 401,
					"name": "BarChartStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "The style of a `BarChart` is a mapping of `channel` name (corresponding\nto the column of a `TimeSeries`) to the `BarChartChannelStyle`.",
						"text": "Example:\n```\n{\n    temperature: {\n        bar: {\n            normal: { fill: \"steelblue\", opacity: 0.8 },\n            highlighted: { fill: \"#5a98cb\", opacity: 1.0 },\n            selected: { fill: \"orange\", opacity: 1.0 },\n            muted: { fill: \"steelblue\", opacity: 0.4 }\n        }\n    }\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 198,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 402,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 403,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 404,
										"name": "channel",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "BarChartChannelStyle",
									"id": 309
								}
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 198,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 469,
					"name": "BaselineStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 321,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 470,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 471,
									"name": "label",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 322,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 472,
									"name": "line",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 323,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										471,
										472
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 321,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 425,
					"name": "BoxChartChannelStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 222,
							"character": 32
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "LevelStyle",
							"id": 419
						}
					}
				},
				{
					"id": 426,
					"name": "BoxChartStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 223,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 427,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 428,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 429,
										"name": "channel",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "BoxChartChannelStyle",
									"id": 425
								}
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 223,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 519,
					"name": "CategoryStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 408,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 520,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 524,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 525,
										"name": "elem",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "ElementStyle",
									"id": 321
								}
							},
							"children": [
								{
									"id": 522,
									"name": "label",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 410,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 321
									}
								},
								{
									"id": 521,
									"name": "symbol",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 409,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 321
									}
								},
								{
									"id": 523,
									"name": "value",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 411,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 321
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										522,
										521,
										523
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 408,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 321,
					"name": "ElementStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "A single element which can be interactive with may be in 4 different modes:\n * normal\n * highlighted\n * selected\n * muted",
						"text": "Its style for those modes are provided using this style object. Each\nmode defines `CSSProperties` appropiate for the underlying svg elements\nbeing rendered.\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 37,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 322,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 327,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 328,
										"name": "mode",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "CSSProperties"
								}
							},
							"children": [
								{
									"id": 324,
									"name": "highlighted",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 39,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 326,
									"name": "muted",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 41,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 323,
									"name": "normal",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 38,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 325,
									"name": "selected",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 40,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										324,
										326,
										323,
										325
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 37,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 464,
					"name": "EventChartStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 315,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 465,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 466,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 467,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 468,
											"name": "mode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 315,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 499,
					"name": "EventMarkerStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 369,
							"character": 28
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "InfoBoxStyle",
								"id": 484
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 500,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 502,
											"name": "marker",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 371,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"name": "CSSProperties"
											}
										},
										{
											"id": 501,
											"name": "stem",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 370,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"name": "CSSProperties"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												502,
												501
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 369,
											"character": 45
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 484,
					"name": "InfoBoxStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 345,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 485,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 487,
									"name": "box",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 347,
											"character": 7
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 486,
									"name": "text",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 346,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										487,
										486
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 345,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 526,
					"name": "LegendStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 415,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 527,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 528,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 529,
										"name": "key",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "CategoryStyle",
									"id": 519
								}
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 415,
									"character": 25
								}
							]
						}
					}
				},
				{
					"id": 419,
					"name": "LevelStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 215,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 420,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 422,
									"name": "highlighted",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 217,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 424,
									"name": "muted",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 219,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 421,
									"name": "normal",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 216,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 423,
									"name": "selected",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 218,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										422,
										424,
										421,
										423
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 215,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 329,
					"name": "LineChartChannelStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "A single channel of a `LineChart` maps the single property \"line\" to\nthe `ElementStyle` for the rendered line.",
						"text": "Example:\n```\n{\n    line: {\n        normal: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 1 },\n        highlighted: { stroke: \"#5a98cb\", fill: \"none\", strokeWidth: 1 },\n        selected: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 2 },\n        muted: { stroke: \"steelblue\", fill: \"none\", opacity: 0.5, strokeWidth: 1 }\n    }\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 67,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 330,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 332,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 333,
										"name": "elem",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "ElementStyle",
									"id": 321
								}
							},
							"children": [
								{
									"id": 331,
									"name": "line",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 68,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 321
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										331
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 67,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 334,
					"name": "LineChartStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "The style of a `LineChart` is a mapping of `channel` name (corresponding\nto the column of a `TimeSeries`) to the `LineChartChannelStyle`.",
						"text": "Example:\n```\n{\n    temperature: {\n        line: {\n            normal: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 1 },\n            highlighted: { stroke: \"#5a98cb\", fill: \"none\", strokeWidth: 1 },\n            selected: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 2 },\n            muted: { stroke: \"steelblue\", fill: \"none\", opacity: 0.5, strokeWidth: 1 }\n        }\n    }\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 90,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 335,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 336,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 337,
										"name": "channel",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "LineChartChannelStyle",
									"id": 329
								}
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 90,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 437,
					"name": "ScatterChartChannelStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "A single channel of a `ScatterChart` maps the single property \"point\" to\nthe `ElementStyle` for the rendered dot.",
						"text": "Example:\n```\n{\n    point: {\n        normal: { fill: \"steelblue\" },\n        highlighted: { fill: \"lightsteelblue\" },\n        selected: { fill: \"yellow\" },\n        muted: { fill: \"steelblue\", pacity: 0.5 }\n    }\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 277,
							"character": 36
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 438,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 440,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 441,
										"name": "elem",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "ElementStyle",
									"id": 321
								}
							},
							"children": [
								{
									"id": 439,
									"name": "point",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 278,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 321
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										439
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 277,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 442,
					"name": "ScatterChartStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "The style of a `ScatterChart` is a mapping of `channel` name (corresponding\nto the column of a `TimeSeries`) to the `ScatterChartChannelStyle`.",
						"text": "Example:\n```\n{\n    temperature: {\n        point: {\n            normal: { fill: \"steelblue\" },\n            highlighted: { fill: \"#5a98cb\" },\n            selected: { fill: \"steelblue\" },\n            muted: { fill: \"steelblue\" }\n        }\n    }\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 300,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 443,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 444,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 445,
										"name": "channel",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "ScatterChartChannelStyle",
									"id": 437
								}
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 300,
									"character": 31
								}
							]
						}
					}
				},
				{
					"id": 320,
					"name": "StyleMode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 24,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "normal"
							},
							{
								"type": "stringLiteral",
								"value": "selected"
							},
							{
								"type": "stringLiteral",
								"value": "highlighted"
							},
							{
								"type": "stringLiteral",
								"value": "muted"
							}
						]
					}
				},
				{
					"id": 585,
					"name": "TimeAxisChannelStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 442,
							"character": 32
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 586,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 589,
									"name": "axis",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 445,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 590,
									"name": "label",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 446,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 588,
									"name": "ticks",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 444,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 587,
									"name": "values",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 443,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										589,
										590,
										588,
										587
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 442,
									"character": 34
								}
							]
						}
					}
				},
				{
					"id": 591,
					"name": "TimeAxisStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 449,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 592,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 593,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 594,
										"name": "channel",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "TimeAxisChannelStyle",
									"id": 585
								}
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 449,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 511,
					"name": "TimeMarkerStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 391,
							"character": 27
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "InfoBoxStyle",
								"id": 484
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 512,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 513,
											"name": "line",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 392,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"name": "CSSProperties"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												513
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 391,
											"character": 44
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 317,
					"name": "areaOpacity",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 20,
							"character": 17
						}
					],
					"type": {
						"type": "unknown",
						"name": "0.75"
					},
					"defaultValue": "0.75"
				},
				{
					"id": 436,
					"name": "defaultBoxChartStyle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 234,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"name": "BoxChartChannelStyle",
						"id": 425
					},
					"defaultValue": " [\n    {\n        normal: { ...defaultBoxFillStyle, opacity: 0.2 },\n        highlighted: { ...defaultBoxFillStyle, opacity: 0.3 },\n        selected: { ...defaultBoxFillStyle, opacity: 0.3 },\n        muted: { ...defaultMutedBoxFillStyle, opacity: 0.1 }\n    },\n    {\n        normal: { ...defaultBoxFillStyle, opacity: 0.5 },\n        highlighted: { ...defaultBoxFillStyle, opacity: 0.6 },\n        selected: { ...defaultBoxFillStyle, opacity: 0.6 },\n        muted: { ...defaultMutedBoxFillStyle, opacity: 0.2 }\n    },\n    {\n        normal: { ...defaultBoxFillStyle, opacity: 0.9 },\n        highlighted: { ...defaultBoxFillStyle, opacity: 1.0 },\n        selected: { ...defaultBoxFillStyle, opacity: 1.0 },\n        muted: { ...defaultMutedBoxFillStyle, opacity: 0.2 }\n    }\n]"
				},
				{
					"id": 314,
					"name": "highlightColor",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 15,
							"character": 20
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "#5a98cb"
					},
					"defaultValue": "\"#5a98cb\""
				},
				{
					"id": 319,
					"name": "mutedAreaOpacity",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 22,
							"character": 22
						}
					],
					"type": {
						"type": "unknown",
						"name": "0.2"
					},
					"defaultValue": "0.2"
				},
				{
					"id": 316,
					"name": "mutedColor",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 17,
							"character": 16
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "grey"
					},
					"defaultValue": "\"grey\""
				},
				{
					"id": 318,
					"name": "mutedLineOpacity",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 21,
							"character": 22
						}
					],
					"type": {
						"type": "unknown",
						"name": "0.4"
					},
					"defaultValue": "0.4"
				},
				{
					"id": 313,
					"name": "primaryColor",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 14,
							"character": 18
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "steelblue"
					},
					"defaultValue": "\"steelblue\""
				},
				{
					"id": 315,
					"name": "selectedColor",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 16,
							"character": 19
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "steelblue"
					},
					"defaultValue": " primaryColor"
				},
				{
					"id": 365,
					"name": "defaultAreaChartStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 384,
							"name": "area",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 389,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 390,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 163,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " highlightColor"
										},
										{
											"id": 392,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 163,
													"character": 68
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " areaOpacity"
										},
										{
											"id": 391,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 163,
													"character": 51
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												390,
												392,
												391
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 163,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 397,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 398,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 165,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " primaryColor"
										},
										{
											"id": 400,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 165,
													"character": 60
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " mutedAreaOpacity"
										},
										{
											"id": 399,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 165,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												398,
												400,
												399
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 165,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 385,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 386,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 162,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " primaryColor"
										},
										{
											"id": 388,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 162,
													"character": 61
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " areaOpacity"
										},
										{
											"id": 387,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 162,
													"character": 44
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												386,
												388,
												387
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 162,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 393,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 394,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 164,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " selectedColor"
										},
										{
											"id": 396,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 164,
													"character": 64
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " areaOpacity"
										},
										{
											"id": 395,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 164,
													"character": 47
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												394,
												396,
												395
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 164,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										389,
										397,
										385,
										393
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 161,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 366,
							"name": "line",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 371,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 373,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 157,
													"character": 51
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 372,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 157,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " highlightColor"
										},
										{
											"id": 374,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 157,
													"character": 72
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												373,
												372,
												374
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 157,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 379,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 381,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 159,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 382,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 159,
													"character": 60
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " mutedLineOpacity"
										},
										{
											"id": 380,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 159,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " primaryColor"
										},
										{
											"id": 383,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 159,
													"character": 91
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												381,
												382,
												380,
												383
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 159,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 367,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 369,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 156,
													"character": 44
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 368,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 156,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " primaryColor"
										},
										{
											"id": 370,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 156,
													"character": 65
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												369,
												368,
												370
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 156,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 375,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 377,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 158,
													"character": 47
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 376,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 158,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " selectedColor"
										},
										{
											"id": 378,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 158,
													"character": 68
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												377,
												376,
												378
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 158,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										371,
										379,
										367,
										375
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 155,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								384,
								366
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 154,
							"character": 34
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 405,
					"name": "defaultBarChartChannelStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 406,
							"name": "bar",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 410,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 411,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 203,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " highlightColor"
										},
										{
											"id": 412,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 203,
													"character": 52
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												411,
												412
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 203,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 416,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 417,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 205,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " primaryColor"
										},
										{
											"id": 418,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 205,
													"character": 44
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.4"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												417,
												418
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 205,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 407,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 408,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 202,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " primaryColor"
										},
										{
											"id": 409,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 202,
													"character": 45
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.8"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												408,
												409
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 202,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 413,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 414,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 204,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " selectedColor"
										},
										{
											"id": 415,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 204,
													"character": 48
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												414,
												415
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 204,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										410,
										416,
										407,
										413
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 201,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								406
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 200,
							"character": 40
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 473,
					"name": "defaultBaselineStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 474,
							"name": "label",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 475,
									"name": "fill",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 328,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#8B7E7E\""
								},
								{
									"id": 477,
									"name": "fontSize",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 330,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "11"
								},
								{
									"id": 478,
									"name": "pointerEvents",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 331,
											"character": 21
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "none"
									},
									"defaultValue": " \"none\" as \"none\""
								},
								{
									"id": 476,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 329,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"none\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										475,
										477,
										478,
										476
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 327,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 479,
							"name": "line",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 483,
									"name": "pointerEvents",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 337,
											"character": 21
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "none"
									},
									"defaultValue": " \"none\" as \"none\""
								},
								{
									"id": 480,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 334,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#626262\""
								},
								{
									"id": 482,
									"name": "strokeDasharray",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 336,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"5,3\""
								},
								{
									"id": 481,
									"name": "strokeWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 335,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										483,
										480,
										482,
										481
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 333,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								474,
								479
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 326,
							"character": 33
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 430,
					"name": "defaultBoxFillStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 431,
							"name": "fill",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 226,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " primaryColor"
						},
						{
							"id": 432,
							"name": "stroke",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 227,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"none\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								431,
								432
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 225,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 503,
					"name": "defaultEventMarkerStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 508,
							"name": "marker",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 509,
									"name": "fill",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 381,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#999\""
								},
								{
									"id": 510,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 382,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"none\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										509,
										510
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 380,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 504,
							"name": "stem",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 506,
									"name": "cursor",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 377,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"crosshair\""
								},
								{
									"id": 507,
									"name": "pointerEvents",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 378,
											"character": 21
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "none"
									},
									"defaultValue": "\"none\""
								},
								{
									"id": 505,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 376,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#999\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										506,
										507,
										505
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 375,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								508,
								504
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 374,
							"character": 36
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 488,
					"name": "defaultInfoBoxStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 489,
							"name": "box",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 490,
									"name": "fill",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 352,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#FEFEFE\""
								},
								{
									"id": 492,
									"name": "opacity",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 354,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0.8"
								},
								{
									"id": 493,
									"name": "pointerEvents",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 355,
											"character": 21
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "none"
									},
									"defaultValue": "\"none\""
								},
								{
									"id": 491,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 353,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#DDD\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										490,
										492,
										493,
										491
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 351,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 494,
							"name": "text",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 496,
									"name": "fill",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 359,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#bdbdbd\""
								},
								{
									"id": 495,
									"name": "fontSize",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 358,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "11"
								},
								{
									"id": 498,
									"name": "pointerEvents",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 361,
											"character": 21
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "none"
									},
									"defaultValue": "\"none\""
								},
								{
									"id": 497,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 360,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"none\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										496,
										495,
										498,
										497
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 357,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								489,
								494
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 350,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 530,
					"name": "defaultLegendCategoryStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 549,
							"name": "label",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 554,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 557,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 426,
													"character": 64
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#222\""
										},
										{
											"id": 556,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 426,
													"character": 47
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										},
										{
											"id": 555,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 426,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												557,
												556,
												555
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 426,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 562,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 565,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 428,
													"character": 58
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#333\""
										},
										{
											"id": 564,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 428,
													"character": 41
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										},
										{
											"id": 566,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 428,
													"character": 75
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.4"
										},
										{
											"id": 563,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 428,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												565,
												564,
												566,
												563
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 428,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 550,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 553,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 425,
													"character": 59
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#333\""
										},
										{
											"id": 552,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 425,
													"character": 42
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										},
										{
											"id": 551,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 425,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												553,
												552,
												551
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 425,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 558,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 561,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 427,
													"character": 61
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#333\""
										},
										{
											"id": 560,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 427,
													"character": 44
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										},
										{
											"id": 559,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 427,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												561,
												560,
												559
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 427,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										554,
										562,
										550,
										558
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 424,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 531,
							"name": "symbol",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 536,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 538,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 420,
													"character": 46
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 537,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 420,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#5a98cb\""
										},
										{
											"id": 539,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 420,
													"character": 67
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												538,
												537,
												539
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 420,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 544,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 546,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 422,
													"character": 42
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 547,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 422,
													"character": 59
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.4"
										},
										{
											"id": 545,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 422,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 548,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 422,
													"character": 77
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												546,
												547,
												545,
												548
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 422,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 532,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 534,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 419,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 533,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 419,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 535,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 419,
													"character": 64
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												534,
												533,
												535
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 419,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 540,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 542,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 421,
													"character": 45
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 541,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 421,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 543,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 421,
													"character": 66
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "2"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												542,
												541,
												543
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 421,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										536,
										544,
										532,
										540
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 418,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 567,
							"name": "value",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 572,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 575,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 432,
													"character": 64
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#222\""
										},
										{
											"id": 574,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 432,
													"character": 47
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										},
										{
											"id": 573,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 432,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												575,
												574,
												573
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 432,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 580,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 583,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 434,
													"character": 58
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#333\""
										},
										{
											"id": 582,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 434,
													"character": 41
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										},
										{
											"id": 584,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 434,
													"character": 75
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.4"
										},
										{
											"id": 581,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 434,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												583,
												582,
												584,
												581
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 434,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 568,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 571,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 431,
													"character": 59
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#333\""
										},
										{
											"id": 570,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 431,
													"character": 42
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										},
										{
											"id": 569,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 431,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												571,
												570,
												569
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 431,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 576,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 579,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 433,
													"character": 61
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#333\""
										},
										{
											"id": 578,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 433,
													"character": 44
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										},
										{
											"id": 577,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 433,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												579,
												578,
												577
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 433,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										572,
										580,
										568,
										576
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 430,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								549,
								531,
								567
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 417,
							"character": 39
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 338,
					"name": "defaultLineChartChannelStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 339,
							"name": "line",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 344,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 346,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 95,
													"character": 46
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 345,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 95,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#5a98cb\""
										},
										{
											"id": 347,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 95,
													"character": 67
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												346,
												345,
												347
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 95,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 352,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 354,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 97,
													"character": 42
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 355,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 97,
													"character": 59
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " mutedLineOpacity"
										},
										{
											"id": 353,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 97,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 356,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 97,
													"character": 90
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												354,
												355,
												353,
												356
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 97,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 340,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 342,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 94,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 341,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 94,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 343,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 94,
													"character": 64
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												342,
												341,
												343
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 94,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 348,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 350,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 96,
													"character": 45
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 349,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 96,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 351,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 96,
													"character": 66
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "2"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												350,
												349,
												351
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 96,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										344,
										352,
										340,
										348
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 93,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								339
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 92,
							"character": 41
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 433,
					"name": "defaultMutedBoxFillStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 434,
							"name": "fill",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 230,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " mutedColor"
						},
						{
							"id": 435,
							"name": "stroke",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 231,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"none\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								434,
								435
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 229,
							"character": 30
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 446,
					"name": "defaultScatterChartChannelStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 447,
							"name": "point",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 452,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 453,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 305,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 454,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 305,
													"character": 49
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 455,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 305,
													"character": 62
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												453,
												454,
												455
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 305,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 460,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 461,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 307,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 462,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 307,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.4"
										},
										{
											"id": 463,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 307,
													"character": 56
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												461,
												462,
												463
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 307,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 448,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 449,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 304,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 450,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 304,
													"character": 44
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.8"
										},
										{
											"id": 451,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 304,
													"character": 57
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												449,
												450,
												451
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 304,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 456,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 457,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 306,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 458,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 306,
													"character": 46
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										},
										{
											"id": 459,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 306,
													"character": 59
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												457,
												458,
												459
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 306,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										452,
										460,
										448,
										456
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 303,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								447
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 302,
							"character": 44
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 595,
					"name": "defaultTimeAxisStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 605,
							"name": "axis",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 606,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 464,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#AAA\""
								},
								{
									"id": 607,
									"name": "strokeWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 465,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										606,
										607
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 463,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 608,
							"name": "label",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 609,
									"name": "fill",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 468,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"grey\""
								},
								{
									"id": 611,
									"name": "pointerEvents",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 470,
											"character": 21
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "none"
									},
									"defaultValue": "\"none\""
								},
								{
									"id": 610,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 469,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"none\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										609,
										611,
										610
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 467,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 602,
							"name": "ticks",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 603,
									"name": "fill",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 460,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"none\""
								},
								{
									"id": 604,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 461,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#C0C0C0\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										603,
										604
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 459,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 596,
							"name": "values",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 598,
									"name": "fill",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 454,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#8B7E7E\""
								},
								{
									"id": 601,
									"name": "font",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 457,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\"Goudy Bookletter 1911\", sans-serif\"\""
								},
								{
									"id": 600,
									"name": "fontSize",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 456,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "11"
								},
								{
									"id": 599,
									"name": "fontWeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 455,
											"character": 18
										}
									],
									"type": {
										"type": "unknown",
										"name": "100"
									},
									"defaultValue": "100"
								},
								{
									"id": 597,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 453,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"none\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										598,
										601,
										600,
										599,
										597
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 452,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								605,
								608,
								602,
								596
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 451,
							"character": 33
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 514,
					"name": "defaultTimeMarkerStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 515,
							"name": "line",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 517,
									"name": "cursor",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 398,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"crosshair\""
								},
								{
									"id": 518,
									"name": "pointerEvents",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 399,
											"character": 21
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "none"
									},
									"defaultValue": "\"none\""
								},
								{
									"id": 516,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 397,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#999\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										517,
										518,
										516
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 396,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								515
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 395,
							"character": 35
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						309
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						357,
						361,
						401,
						469,
						425,
						426,
						519,
						321,
						464,
						499,
						484,
						526,
						419,
						329,
						334,
						437,
						442,
						320,
						585,
						591,
						511
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						317,
						436,
						314,
						319,
						316,
						318,
						313,
						315
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						365,
						405,
						473,
						430,
						503,
						488,
						530,
						338,
						433,
						446,
						595,
						514
					]
				}
			],
			"sources": [
				{
					"fileName": "style.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 612,
			"name": "\"styler\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/styler.ts",
			"children": [
				{
					"id": 613,
					"name": "Styler",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "For our Style we want to represent two things:",
						"text": "  1. The overall style of an AreaChart should be consistent across a site\n  2. The specific style of a columnName (e.g. \"pressure\") should be consistent\n\nThe overall style is implemented with methods specific to\neach chart type or entity:\n\n  - `lineChartStyle()`\n  - `areaChartStyle()`\n  - `legendStyle()`\n  - etc\n\nThese will render out an object that can be passed into the\ncharts themselves and will control the visual appearance,\nkeyed by columnName. This abstracts away the SVG details of the\nunderlying DOM elements.\n\nFor the specific style we define here three out of the box parameters\nby which one column can be different from another when rendered:\n  - color\n  - width (of a line)\n  - dashed or not\n\n"
					},
					"children": [
						{
							"id": 620,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "The `column`s define the style associated with a particular\nquantity, such as \"inTraffic\" or \"temperature\". The columns\nare an array, with each element being either a `string`, or\nand `object` defining the style.",
								"text": " * Using a string makes the assumption that you want to use a\ncolor scheme, so you need to define that if you don't want the\ndefault. A color will be then assigned to each column based\non the scheme. The string is the column name.\n\n * In the second case of providing an object, you define properties\nof the style yourself. Each object should contain a \"key\" property\nwhich is the column name and optionally the `width` and `dashed`\nproperty. If you don't supply the color, then the color\nwill come from the scheme.\n\n"
							},
							"signatures": [
								{
									"id": 621,
									"name": "new Styler",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "The `column`s define the style associated with a particular\nquantity, such as \"inTraffic\" or \"temperature\". The columns\nare an array, with each element being either a `string`, or\nand `object` defining the style.",
										"text": " * Using a string makes the assumption that you want to use a\ncolor scheme, so you need to define that if you don't want the\ndefault. A color will be then assigned to each column based\non the scheme. The string is the column name.\n\n * In the second case of providing an object, you define properties\nof the style yourself. Each object should contain a \"key\" property\nwhich is the column name and optionally the `width` and `dashed`\nproperty. If you don't supply the color, then the color\nwill come from the scheme.\n\n"
									},
									"parameters": [
										{
											"id": 622,
											"name": "columns",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Column",
													"id": 659
												}
											}
										},
										{
											"id": 623,
											"name": "scheme",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Paired\""
										}
									],
									"type": {
										"type": "reference",
										"name": "Styler",
										"id": 613
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 70,
									"character": 56
								}
							]
						},
						{
							"id": 614,
							"name": "colorScheme",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 68,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 615,
							"name": "columnNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 69,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 616,
							"name": "columnStyles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 70,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 617,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 618,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 619,
												"name": "columnName",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "StylerStyle",
											"id": 651
										}
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 70,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 633,
							"name": "areaChartStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 634,
									"name": "areaChartStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AreaChartStyle",
										"id": 361
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 200,
									"character": 18
								}
							]
						},
						{
							"id": 641,
							"name": "axisStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 642,
									"name": "axisStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 643,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 644,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 645,
													"name": "fill",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "styler.ts",
															"line": 347,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": " c"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														645
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 339,
									"character": 13
								}
							]
						},
						{
							"id": 637,
							"name": "barChartStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 638,
									"name": "barChartStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BarChartStyle",
										"id": 401
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 284,
									"character": 17
								}
							]
						},
						{
							"id": 646,
							"name": "boxChartStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 647,
									"name": "boxChartStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BoxChartStyle",
										"id": 426
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 351,
									"character": 17
								}
							]
						},
						{
							"id": 626,
							"name": "colorLookup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 627,
									"name": "colorLookup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the color scheme with the appropiate number of colors.\nIf there are more columns than the largest set in the scheme then\njust the largest scheme set will be returned.\nIf there are less columns than the smallest set in the scheme then\njust the smallest scheme will be returned."
									},
									"parameters": [
										{
											"id": 628,
											"name": "columnCount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 126,
									"character": 15
								}
							]
						},
						{
							"id": 629,
							"name": "legendStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 630,
									"name": "legendStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 631,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 632,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendItemType",
												"id": 184
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CategoryStyle",
										"id": 519
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 138,
									"character": 15
								}
							]
						},
						{
							"id": 635,
							"name": "lineChartStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 636,
									"name": "lineChartStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "LineChartStyle",
										"id": 334
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 249,
									"character": 18
								}
							]
						},
						{
							"id": 624,
							"name": "numColumns",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 625,
									"name": "numColumns",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 115,
									"character": 14
								}
							]
						},
						{
							"id": 639,
							"name": "scatterChartStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 640,
									"name": "scatterChartStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ScatterChartStyle",
										"id": 442
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 312,
									"character": 21
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								620
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								614,
								615,
								616
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								633,
								641,
								637,
								646,
								626,
								629,
								635,
								624,
								639
							]
						}
					],
					"sources": [
						{
							"fileName": "styler.ts",
							"line": 67,
							"character": 19
						}
					]
				},
				{
					"id": 659,
					"name": "Column",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "styler.ts",
							"line": 39,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "KeyedStyle",
								"id": 648
							}
						]
					}
				},
				{
					"id": 648,
					"name": "KeyedStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "styler.ts",
							"line": 26,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 649,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 650,
									"name": "key",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 27,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										650
									]
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 26,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 651,
					"name": "StylerStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "styler.ts",
							"line": 30,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 652,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 655,
									"name": "color",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 33,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 658,
									"name": "dashed",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 36,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 653,
									"name": "key",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 31,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 656,
									"name": "selected",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 34,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 654,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 32,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "StylerStyle",
										"id": 651
									}
								},
								{
									"id": 657,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 35,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										655,
										658,
										653,
										656,
										654,
										657
									]
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 30,
									"character": 25
								}
							]
						}
					}
				},
				{
					"id": 660,
					"name": "styler",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"signatures": [
						{
							"id": 661,
							"name": "styler",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 662,
									"name": "columns",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Column",
											"id": 659
										}
									}
								},
								{
									"id": 663,
									"name": "scheme",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Styler",
								"id": 613
							}
						}
					],
					"sources": [
						{
							"fileName": "styler.ts",
							"line": 394,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						613
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						659,
						648,
						651
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						660
					]
				}
			],
			"sources": [
				{
					"fileName": "styler.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 664,
			"name": "\"types\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/types.ts",
			"children": [
				{
					"id": 668,
					"name": "CurveInterpolation",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 669,
							"name": "curveBasis",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 27,
									"character": 14
								}
							],
							"defaultValue": "\"curveBasis\""
						},
						{
							"id": 670,
							"name": "curveBasisOpen",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 28,
									"character": 18
								}
							],
							"defaultValue": "\"curveBasisOpen\""
						},
						{
							"id": 671,
							"name": "curveBundle",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 29,
									"character": 15
								}
							],
							"defaultValue": "\"curveBundle\""
						},
						{
							"id": 672,
							"name": "curveCardinal",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 30,
									"character": 17
								}
							],
							"defaultValue": "\"curveCardinal\""
						},
						{
							"id": 673,
							"name": "curveCardinalOpen",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 31,
									"character": 21
								}
							],
							"defaultValue": "\"curveCardinalOpen\""
						},
						{
							"id": 674,
							"name": "curveCatmullRom",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 32,
									"character": 19
								}
							],
							"defaultValue": "\"curveCatmullRom\""
						},
						{
							"id": 675,
							"name": "curveCatmullRomOpen",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 33,
									"character": 23
								}
							],
							"defaultValue": "\"curveCatmullRomOpen\""
						},
						{
							"id": 676,
							"name": "curveLinear",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 34,
									"character": 15
								}
							],
							"defaultValue": "\"curveLinear\""
						},
						{
							"id": 677,
							"name": "curveMonotoneX",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 35,
									"character": 18
								}
							],
							"defaultValue": "\"curveMonotoneX\""
						},
						{
							"id": 678,
							"name": "curveMonotoneY",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 36,
									"character": 18
								}
							],
							"defaultValue": "\"curveMonotoneY\""
						},
						{
							"id": 679,
							"name": "curveNatural",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 37,
									"character": 16
								}
							],
							"defaultValue": "\"curveNatural\""
						},
						{
							"id": 680,
							"name": "curveRadial",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 38,
									"character": 15
								}
							],
							"defaultValue": "\"curveRadial\""
						},
						{
							"id": 681,
							"name": "curveStep",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 39,
									"character": 13
								}
							],
							"defaultValue": "\"curveStep\""
						},
						{
							"id": 682,
							"name": "curveStepAfter",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 40,
									"character": 18
								}
							],
							"defaultValue": "\"curveStepAfter\""
						},
						{
							"id": 683,
							"name": "curveStepBefore",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 41,
									"character": 19
								}
							],
							"defaultValue": "\"curveStepBefore\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								669,
								670,
								671,
								672,
								673,
								674,
								675,
								676,
								677,
								678,
								679,
								680,
								681,
								682,
								683
							]
						}
					],
					"sources": [
						{
							"fileName": "types.ts",
							"line": 26,
							"character": 30
						}
					]
				},
				{
					"id": 665,
					"name": "AreaChartColumns",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 667,
							"name": "down",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 666,
							"name": "up",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 22,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								667,
								666
							]
						}
					],
					"sources": [
						{
							"fileName": "types.ts",
							"line": 21,
							"character": 33
						}
					]
				},
				{
					"id": 684,
					"name": "LabelValueList",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": " Copyright (c) 2018, The Regents of the University of California,\n through Lawrence Berkeley National Laboratory (subject to receipt\n of any required approvals from the U.S. Dept. of Energy).\n All rights reserved.",
						"text": " This source code is licensed under the BSD-style license found in the\n LICENSE file in the root directory of this source tree.\n"
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 11,
							"character": 26
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 685,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"children": [
									{
										"id": 686,
										"name": "label",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExternal": true,
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "types.ts",
												"line": 12,
												"character": 9
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 687,
										"name": "value",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExternal": true,
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "types.ts",
												"line": 13,
												"character": 9
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Variables",
										"kind": 32,
										"children": [
											686,
											687
										]
									}
								],
								"sources": [
									{
										"fileName": "types.ts",
										"line": 11,
										"character": 28
									}
								]
							}
						}
					}
				},
				{
					"id": 688,
					"name": "LineData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 16,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 689,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 690,
									"name": "x",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 17,
											"character": 5
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 691,
									"name": "y",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 18,
											"character": 5
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										690,
										691
									]
								}
							],
							"sources": [
								{
									"fileName": "types.ts",
									"line": 16,
									"character": 22
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						668
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						665
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						684,
						688
					]
				}
			],
			"sources": [
				{
					"fileName": "types.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 692,
			"name": "\"util\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/util.ts",
			"children": [
				{
					"id": 696,
					"name": "getElementOffset",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"signatures": [
						{
							"id": 697,
							"name": "getElementOffset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 698,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SVGRectElement"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 699,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 701,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "util.ts",
													"line": 23,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 700,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "util.ts",
													"line": 23,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												701,
												700
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "util.ts",
							"line": 18,
							"character": 32
						}
					]
				},
				{
					"id": 693,
					"name": "scaleAsString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"signatures": [
						{
							"id": 694,
							"name": "scaleAsString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 695,
									"name": "scale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ScaleTime",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "util.ts",
							"line": 13,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						696,
						693
					]
				}
			],
			"sources": [
				{
					"fileName": "util.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				702,
				1327,
				1478,
				1579,
				1765,
				2585,
				2280,
				72,
				2772,
				2449,
				1143,
				860,
				2995,
				3098,
				183,
				3236,
				1891,
				3378,
				3469,
				2037,
				3617,
				3710,
				2898,
				2158,
				1,
				25,
				308,
				612,
				664,
				692
			]
		}
	]
}