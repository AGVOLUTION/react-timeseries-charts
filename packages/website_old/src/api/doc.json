{
	"id": 0,
	"name": "react-timeseries-charts",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 656,
			"name": "\"AreaChart\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/AreaChart.tsx",
			"children": [
				{
					"id": 657,
					"name": "StyleType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 659,
							"name": "Area",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 37,
									"character": 8
								}
							],
							"defaultValue": "\"area\""
						},
						{
							"id": 658,
							"name": "Line",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 36,
									"character": 8
								}
							],
							"defaultValue": "\"line\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								659,
								658
							]
						}
					],
					"sources": [
						{
							"fileName": "AreaChart.tsx",
							"line": 35,
							"character": 21
						}
					]
				},
				{
					"id": 660,
					"name": "AreaChart",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `<AreaChart>` component is able to display single or multiple stacked\nareas above or below the axis. It used throughout the\n[My ESnet Portal](http://my.es.net).",
						"text": "The `<AreaChart>` should be used within a `<ChartContainer>` structure,\nas this will construct the horizontal and vertical axis, and manage\nother elements. Here is an example of an `<AreaChart>` with an up and down\nnetwork traffic visualization:\n\n ```\n  render() {\n     return (\n         ...\n         <ChartContainer timeRange={trafficSeries.timerange()} width=\"1080\">\n             <ChartRow height=\"150\">\n                 <Charts>\n                     <AreaChart\n                         axis=\"traffic\"\n                         series={trafficSeries}\n                         columns={{up: [\"in\"], down: [\"out\"]}}\n                      />\n                 </Charts>\n                 <YAxis\n                     id=\"traffic\"\n                     label=\"Traffic (bps)\"\n                     min={-max} max={max}\n                     absolute={true}\n                     width=\"60\"\n                     type=\"linear\"\n                 />\n             </ChartRow>\n         </ChartContainer>\n         ...\n     );\n }\n ```\nThe `<AreaChart>` takes a single `TimeSeries` object into its `series` prop. This\nseries can contain multiple columns and those columns can be referenced using the `columns`\nprop. The `columns` props allows you to map columns in the series to the chart,\nletting you specify the stacking and orientation of the data. In the above example\nwe map the \"in\" column in `trafficSeries` to the up direction and the \"out\" column to\nthe down direction. Each direction is specified as an array, so adding multiple\ncolumns into a direction will stack the areas in that direction.\n\nNote: It is recommended that `<ChartContainer>`s be placed within a <Resizable> tag,\nrather than hard coding the width as in the above example.\n"
					},
					"typeParameter": [
						{
							"id": 704,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 705,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 750,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 751,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 752,
									"name": "new AreaChart",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 753,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AreaChartProps",
												"id": 787
											}
										},
										{
											"id": 754,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AreaChart",
										"id": 660
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 777,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 773,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 774,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 775,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																775
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "AreaChartProps",
												"id": 787
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 778,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 779,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 780,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 781,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 776,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 693,
							"name": "areaStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 694,
									"name": "areaStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 695,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 241,
									"character": 13
								}
							]
						},
						{
							"id": 768,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 769,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 770,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 771,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 772,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 676,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 677,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 678,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGPathElement"
													}
												]
											}
										},
										{
											"id": 679,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 162,
									"character": 15
								}
							]
						},
						{
							"id": 670,
							"name": "handleHover",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 671,
									"name": "handleHover",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 672,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGPathElement"
													}
												]
											}
										},
										{
											"id": 673,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 150,
									"character": 15
								}
							]
						},
						{
							"id": 674,
							"name": "handleHoverLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 675,
									"name": "handleHoverLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 156,
									"character": 20
								}
							]
						},
						{
							"id": 690,
							"name": "pathStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 691,
									"name": "pathStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 692,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 237,
									"character": 13
								}
							]
						},
						{
							"id": 680,
							"name": "providedAreaStyleMap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 681,
									"name": "providedAreaStyleMap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 682,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 683,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 685,
													"name": "area",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 131,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "ElementStyle",
														"id": 14
													}
												},
												{
													"id": 684,
													"name": "line",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 130,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "ElementStyle",
														"id": 14
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														685,
														684
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 169,
									"character": 24
								}
							]
						},
						{
							"id": 702,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 703,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 317,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 700,
							"name": "renderAreas",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 701,
									"name": "renderAreas",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 306,
									"character": 15
								}
							]
						},
						{
							"id": 696,
							"name": "renderPaths",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 697,
									"name": "renderPaths",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 698,
											"name": "columnList",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 699,
											"name": "direction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Element"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 245,
									"character": 15
								}
							]
						},
						{
							"id": 755,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 756,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 757,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 758,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 759,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 760,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 761,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 762,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "AreaChartProps",
																				"id": 787
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 763,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 764,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 765,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 766,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 767,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 667,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 668,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 669,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AreaChartProps",
												"id": 787
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 111,
									"character": 25
								}
							]
						},
						{
							"id": 686,
							"name": "style",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 687,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the style used for drawing the path"
									},
									"parameters": [
										{
											"id": 688,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 689,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "StyleType",
												"id": 657
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 186,
									"character": 9
								}
							]
						},
						{
							"id": 730,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 731,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 736,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 737,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 738,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AreaChartProps",
														"id": 787
													}
												]
											}
										},
										{
											"id": 739,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 745,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 746,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 747,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AreaChartProps",
														"id": 787
													}
												]
											}
										},
										{
											"id": 748,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 749,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 715,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 716,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 717,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 718,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 706,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 707,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 723,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 724,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 725,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AreaChartProps",
														"id": 787
													}
												]
											}
										},
										{
											"id": 726,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 727,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 728,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 729,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 732,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 733,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 734,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AreaChartProps",
														"id": 787
													}
												]
											}
										},
										{
											"id": 735,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 713,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 714,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 740,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 741,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 742,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AreaChartProps",
														"id": 787
													}
												]
											}
										},
										{
											"id": 743,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 744,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 719,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 720,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 721,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AreaChartProps",
														"id": 787
													}
												]
											}
										},
										{
											"id": 722,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 708,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 709,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 710,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "AreaChartProps",
														"id": 787
													}
												]
											}
										},
										{
											"id": 711,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 712,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 661,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 662,
									"name": "interpolation",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 103,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"name": "curveLinear",
										"id": 430
									},
									"defaultValue": " CurveInterpolation.curveLinear"
								},
								{
									"id": 666,
									"name": "stack",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 108,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 663,
									"name": "columns",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 665,
											"name": "down",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 106,
													"character": 16
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "undefined"
												}
											},
											"defaultValue": " []"
										},
										{
											"id": 664,
											"name": "up",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 105,
													"character": 14
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "undefined"
												}
											},
											"defaultValue": " []"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												665,
												664
											]
										}
									],
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 104,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										662,
										666
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										663
									]
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 102,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								751
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								777,
								773,
								778,
								776
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								693,
								768,
								676,
								670,
								674,
								690,
								680,
								702,
								700,
								696,
								755,
								667,
								686,
								730,
								736,
								745,
								715,
								706,
								723,
								728,
								732,
								713,
								740,
								719,
								708
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								661
							]
						}
					],
					"sources": [
						{
							"fileName": "AreaChart.tsx",
							"line": 101,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "AreaChartProps",
									"id": 787
								}
							]
						}
					]
				},
				{
					"id": 787,
					"name": "AreaChartProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "AreaChart.tsx",
							"line": 40,
							"character": 26
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 406
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 788,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 793,
											"name": "axis",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 45,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 790,
											"name": "columns",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 42,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "AreaChartColumns",
												"id": 419
											}
										},
										{
											"id": 795,
											"name": "highlight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 47,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 792,
											"name": "interpolation",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 44,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "CurveInterpolation",
												"id": 422
											}
										},
										{
											"id": 797,
											"name": "onHighlightChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 49,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 798,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 799,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 800,
																	"name": "column",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "AreaChart.tsx",
															"line": 49,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 801,
											"name": "onSelectionChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 50,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 802,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 803,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 804,
																	"name": "column",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "AreaChart.tsx",
															"line": 50,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 796,
											"name": "selection",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 48,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 789,
											"name": "series",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 41,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"name": "TimeSeries",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 794,
											"name": "stack",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 46,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 791,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "AreaChart.tsx",
													"line": 43,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "AreaChartStyle",
												"id": 54
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												793,
												790,
												795,
												792,
												797,
												801,
												796,
												789,
												794,
												791
											]
										}
									],
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 40,
											"character": 41
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 782,
					"name": "AreaData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "AreaChart.tsx",
							"line": 29,
							"character": 13
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 783,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 784,
									"name": "x0",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 30,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 785,
									"name": "y0",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 31,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 786,
									"name": "y1",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "AreaChart.tsx",
											"line": 32,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										784,
										785,
										786
									]
								}
							],
							"sources": [
								{
									"fileName": "AreaChart.tsx",
									"line": 29,
									"character": 15
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						657
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						660
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						787,
						782
					]
				}
			],
			"sources": [
				{
					"fileName": "AreaChart.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1267,
			"name": "\"BarChart\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/BarChart.tsx",
			"children": [
				{
					"id": 1268,
					"name": "BarChart",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a bar chart based on IndexedEvents within a TimeSeries.",
						"text": "This BarChart implementation is a little different that other time axis\nbar charts in that it will render across a the time range of the event\nrather than rendering to specific categories. As a result,\na Aug-2014 bar will render between the Aug 2014 tick mark and\nthe Sept 2014 tickmark. However, this allows it to play well with other\ntypes of charts that maybe integrated into the same visualization.\n\nThe BarChart will render a single TimeSeries. You can specify the columns\nyou want to render with the `columns` prop. Each column will be stacked on\nthe other, in the order specified in the `columns` array.\n\n### IndexedEvents\n\nBarCharts are supposed to be for aggregated values (e.g. average of\nmany points over an hour), so the hours themselves are specified\nwith an \"Index\". An Index is a string that represents that range of time,\nrather than a specific time like a timestamp would.\n\nPond provides several mechanisms for building aggregated series from\na TimeSeries, and the BarChart code is suited to visualizing that\noutput. See Pond for more details (especially TimeSeries.fixedWindowRollup\nand the Pipeline processing facilities). The realtime example in this\nlibrary also shows how to do this on incoming streams of data.\n\nIf you have one timestamped point per hour and really want to represent\nthose with a BarChart, you can use the Pond static method\n`Index.getIndexString(period, date)` to take the Date and return an\nIndex string. Say if those points were hourly, you'll end up with\nstrings that look like \"1h-412715\". This represents a specific hour\nin time (the 412,715th hour since midnight 1 Jan 1970, actually).\nNote that for larger time periods, index strings can be partial\ndates, like \"2016-08-31\" for Aug 31st, 2016 or \"2016-08\" for Aug 2016.\n\nUse those index strings to build your timeseries instead of timestamps.\nHere's the Pond code needed to convert a date to an index string:\n\n```\n  import { Index } from \"pondjs\";\n  const d = new Date(\"2017-01-30T11:58:38.741Z\");\n  const index = Index.getIndexString(\"1h\", d);   // '1h-412715'\n```\n\nWith either the aggregated approach, or the above timestamped\nconversion, you will want a `TimeSeries` of `IndexedEvent`s that\nlooks like this:\n```\n  const series = new TimeSeries({\n    name: \"myseries\",\n    columns: [\"index\", \"value\"],\n    points: [\n      [\"1h-41275\", 22],\n      [\"1h-41276\", 35],\n      [\"1h-41277\", 72],\n      ...\n    ]\n  })\n```\n\nNote: the first column of the timeseries should be \"index\" (not \"time\")\nand each point should have an index string at the beginning.\n\n### Interactivity\n\nThe BarChart supports selection of individual bars. To control this use\n`onSelectionChange` to get a callback of selection changed. Your callback\nwill be called with the selection (an object containing the event\nand column). You can pass this back into the BarChart as `selection`. For\nexample:\n\n```\n <BarChart\n     ...\n     selection={this.state.selection}\n     onSelectionChange={selection => this.setState({selection})} />\n```\n\nSimilarly you can monitor which bar is being hovered over with the\n`onHighlightChange` callback. This can be used to determine the info box\nto display. Info box will display a box (like a tooltip) with a line\nconnecting it to the bar. You use the `info` prop to evoke this and to\nsupply the text for the info box. See the styling notes below for more\ninformation on this.\n\n### Styling\n\nA BarChart supports per-column or per-event styling. Styles can be set for\neach of the four states that are possible: normal, highlighted,\nselected and muted. To style per-column, supply an object. For per-event styling\nsupply a function: `(event, column) => {}` The functon should return a style object.\n\nSee the `style` prop in the API documentation for more information.\n\nSeparately the size of the bars can be controlled with the `spacing` and\n`offset` props. Spacing controls the gap between the bars. Offset moves the\nbars left or right by the given number of pixels. You can use this to place\nbars along side each other. Alternatively, you can give each column a fixed width\nusing the `size` prop. In this case this size will be used in preference to the size\ndetermined from the timerange of the event and the `spacing`.\n\nThe info box is also able to be styled using `infoStyle`, `stemStyle` and\n`markerStyle` This enables you to control the drawing of the box, the connecting\nlines (stem) and dot respectively. Using the `infoWidth` and `infoHeight`\nprops you can control the size of the box, which is fixed. For the info inside\nthe box, it's up to you: it can either be a simple string or an array of\n{label, value} pairs.\n"
					},
					"typeParameter": [
						{
							"id": 1300,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1301,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1346,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1347,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1348,
									"name": "new BarChart",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1349,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BarChartProps",
												"id": 1378
											}
										},
										{
											"id": 1350,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BarChart",
										"id": 1268
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1373,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1369,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1370,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1371,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1371
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BarChartProps",
												"id": 1378
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1374,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1375,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1376,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1377,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1372,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1364,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1365,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1366,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1367,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1368,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1283,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1284,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1285,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										},
										{
											"id": 1286,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 1287,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 185,
									"character": 15
								}
							]
						},
						{
							"id": 1276,
							"name": "handleHover",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1277,
									"name": "handleHover",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1278,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										},
										{
											"id": 1279,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 1280,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 172,
									"character": 15
								}
							]
						},
						{
							"id": 1281,
							"name": "handleHoverLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1282,
									"name": "handleHoverLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 179,
									"character": 20
								}
							]
						},
						{
							"id": 1288,
							"name": "providedColumnStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1289,
									"name": "providedColumnStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1290,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BarChartChannelStyle",
										"id": 2
									}
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 193,
									"character": 23
								}
							]
						},
						{
							"id": 1298,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1299,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 354,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1296,
							"name": "renderBars",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1297,
									"name": "renderBars",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 243,
									"character": 14
								}
							]
						},
						{
							"id": 1351,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1352,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1353,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1354,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1355,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1356,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1357,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 1358,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "BarChartProps",
																				"id": 1378
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1359,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1360,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1361,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1362,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1363,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1291,
							"name": "style",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1292,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the style used for drawing the path"
									},
									"parameters": [
										{
											"id": 1293,
											"name": "element",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1294,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1295,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 210,
									"character": 9
								}
							]
						},
						{
							"id": 1326,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1327,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1332,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1333,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1334,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BarChartProps",
														"id": 1378
													}
												]
											}
										},
										{
											"id": 1335,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1341,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1342,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1343,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BarChartProps",
														"id": 1378
													}
												]
											}
										},
										{
											"id": 1344,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1345,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1311,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1312,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1313,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1314,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1302,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1303,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1319,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1320,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1321,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BarChartProps",
														"id": 1378
													}
												]
											}
										},
										{
											"id": 1322,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1323,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1324,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1325,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1328,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1329,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1330,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BarChartProps",
														"id": 1378
													}
												]
											}
										},
										{
											"id": 1331,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1309,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1310,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1336,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1337,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1338,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BarChartProps",
														"id": 1378
													}
												]
											}
										},
										{
											"id": 1339,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1340,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1315,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1316,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1317,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BarChartProps",
														"id": 1378
													}
												]
											}
										},
										{
											"id": 1318,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1304,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1305,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1306,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BarChartProps",
														"id": 1378
													}
												]
											}
										},
										{
											"id": 1307,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1308,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1269,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1270,
									"name": "columns",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 164,
											"character": 15
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"defaultValue": " [\"value\"]"
								},
								{
									"id": 1275,
									"name": "infoHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 169,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "30"
								},
								{
									"id": 1274,
									"name": "infoWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 168,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "90"
								},
								{
									"id": 1273,
									"name": "markerRadius",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 167,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								},
								{
									"id": 1272,
									"name": "offset",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 166,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 1271,
									"name": "spacing",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 165,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1270,
										1275,
										1274,
										1273,
										1272,
										1271
									]
								}
							],
							"sources": [
								{
									"fileName": "BarChart.tsx",
									"line": 163,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1347
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1373,
								1369,
								1374,
								1372
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1364,
								1283,
								1276,
								1281,
								1288,
								1298,
								1296,
								1351,
								1291,
								1326,
								1332,
								1341,
								1311,
								1302,
								1319,
								1324,
								1328,
								1309,
								1336,
								1315,
								1304
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1269
							]
						}
					],
					"sources": [
						{
							"fileName": "BarChart.tsx",
							"line": 162,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "BarChartProps",
									"id": 1378
								}
							]
						}
					]
				},
				{
					"id": 1378,
					"name": "BarChartProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "BarChart.tsx",
							"line": 28,
							"character": 25
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 406
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1379,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1383,
											"name": "columns",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 32,
													"character": 11
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1406,
											"name": "highlighted",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 46,
													"character": 15
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1407,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1409,
															"name": "column",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "BarChart.tsx",
																	"line": 48,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1408,
															"name": "event",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "BarChart.tsx",
																	"line": 47,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1409,
																1408
															]
														}
													],
													"sources": [
														{
															"fileName": "BarChart.tsx",
															"line": 46,
															"character": 17
														}
													]
												}
											}
										},
										{
											"id": 1388,
											"name": "info",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 34,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 438
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1391,
											"name": "infoHeight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 37,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1389,
											"name": "infoStyle",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 35,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "EventMarkerStyle",
												"id": 186
											}
										},
										{
											"id": 1392,
											"name": "infoTimeFormat",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 38,
													"character": 18
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1393,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1394,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1395,
																			"name": "args",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isRest": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "BarChart.tsx",
																	"line": 38,
																	"character": 29
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 1390,
											"name": "infoWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 36,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1396,
											"name": "markerRadius",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 39,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1382,
											"name": "offset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 31,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1410,
											"name": "onHighlightChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 50,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1411,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1412,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1413,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "BarChart.tsx",
															"line": 50,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 1402,
											"name": "onSelectionChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 45,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1403,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1404,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1405,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "BarChart.tsx",
															"line": 45,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 1398,
											"name": "selected",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 41,
													"character": 12
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1399,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1401,
															"name": "column",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "BarChart.tsx",
																	"line": 43,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1400,
															"name": "event",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "BarChart.tsx",
																	"line": 42,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1401,
																1400
															]
														}
													],
													"sources": [
														{
															"fileName": "BarChart.tsx",
															"line": 41,
															"character": 14
														}
													]
												}
											}
										},
										{
											"id": 1380,
											"name": "series",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 29,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"name": "TimeSeries",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 1397,
											"name": "size",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 40,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1381,
											"name": "spacing",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 30,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1384,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BarChart.tsx",
													"line": 33,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BarChartStyle",
														"id": 94
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1385,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1386,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1387,
																			"name": "column",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"name": "BarChartChannelStyle",
																		"id": 2
																	}
																}
															],
															"sources": [
																{
																	"fileName": "BarChart.tsx",
																	"line": 33,
																	"character": 27
																}
															]
														}
													},
													{
														"type": "reference",
														"name": "Styler",
														"id": 581
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1383,
												1406,
												1388,
												1391,
												1389,
												1392,
												1390,
												1396,
												1382,
												1410,
												1402,
												1398,
												1380,
												1397,
												1381,
												1384
											]
										}
									],
									"sources": [
										{
											"fileName": "BarChart.tsx",
											"line": 28,
											"character": 40
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1268
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1378
					]
				}
			],
			"sources": [
				{
					"fileName": "BarChart.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1414,
			"name": "\"Baseline\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/Baseline.tsx",
			"children": [
				{
					"id": 1415,
					"name": "Baseline",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The BaseLine component displays a simple horizontal line at a value.",
						"text": "For example the following code overlays Baselines for the mean and stdev\nof a series on top of another chart.\n\n```\n<ChartContainer timeRange={series.timerange()} >\n    <ChartRow height=\"150\">\n        <YAxis\n          id=\"price\"\n          label=\"Price ($)\"\n          min={series.min()} max={series.max()}\n          width=\"60\" format=\"$,.2f\"\n        />\n        <Charts>\n            <LineChart axis=\"price\" series={series} style={style} />\n            <Baseline axis=\"price\" value={series.avg()} label=\"Avg\" position=\"right\" />\n            <Baseline axis=\"price\" value={series.avg()-series.stdev()} />\n            <Baseline axis=\"price\" value={series.avg()+series.stdev()} />\n        </Charts>\n    </ChartRow>\n</ChartContainer>\n```\n"
					},
					"typeParameter": [
						{
							"id": 1423,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1424,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1469,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1470,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1471,
									"name": "new Baseline",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1472,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BaselineProps",
												"id": 1501
											}
										},
										{
											"id": 1473,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Baseline",
										"id": 1415
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1496,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1492,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1493,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1494,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1494
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BaselineProps",
												"id": 1501
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1497,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1498,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1499,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1500,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1495,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1487,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1488,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1489,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1490,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1491,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1421,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1422,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "Baseline.tsx",
									"line": 59,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1474,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1475,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1476,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1477,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1478,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1479,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1480,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 1481,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "BaselineProps",
																				"id": 1501
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1482,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1483,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1484,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1485,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1486,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1449,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1450,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1455,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1456,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1457,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaselineProps",
														"id": 1501
													}
												]
											}
										},
										{
											"id": 1458,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1464,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1465,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1466,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaselineProps",
														"id": 1501
													}
												]
											}
										},
										{
											"id": 1467,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1468,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1434,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1435,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1436,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1437,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1425,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1426,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1442,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1443,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1444,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaselineProps",
														"id": 1501
													}
												]
											}
										},
										{
											"id": 1445,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1446,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1447,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1448,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1451,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1452,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1453,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaselineProps",
														"id": 1501
													}
												]
											}
										},
										{
											"id": 1454,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1432,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1433,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1459,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1460,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1461,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaselineProps",
														"id": 1501
													}
												]
											}
										},
										{
											"id": 1462,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1463,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1438,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1439,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1440,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaselineProps",
														"id": 1501
													}
												]
											}
										},
										{
											"id": 1441,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1427,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1428,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1429,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BaselineProps",
														"id": 1501
													}
												]
											}
										},
										{
											"id": 1430,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1431,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1416,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1418,
									"name": "label",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Baseline.tsx",
											"line": 54,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								},
								{
									"id": 1419,
									"name": "position",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Baseline.tsx",
											"line": 55,
											"character": 16
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "left"
									},
									"defaultValue": "\"left\""
								},
								{
									"id": 1420,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Baseline.tsx",
											"line": 56,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": " defaultStyle as any"
								},
								{
									"id": 1417,
									"name": "value",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Baseline.tsx",
											"line": 53,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1418,
										1419,
										1420,
										1417
									]
								}
							],
							"sources": [
								{
									"fileName": "Baseline.tsx",
									"line": 52,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1470
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1496,
								1492,
								1497,
								1495
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1487,
								1421,
								1474,
								1449,
								1455,
								1464,
								1434,
								1425,
								1442,
								1447,
								1451,
								1432,
								1459,
								1438,
								1427
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1416
							]
						}
					],
					"sources": [
						{
							"fileName": "Baseline.tsx",
							"line": 51,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "BaselineProps",
									"id": 1501
								}
							]
						}
					]
				},
				{
					"id": 1501,
					"name": "BaselineProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Baseline.tsx",
							"line": 17,
							"character": 25
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 406
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1502,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1503,
											"name": "axis",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Baseline.tsx",
													"line": 18,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1506,
											"name": "label",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "Baseline.tsx",
													"line": 21,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1507,
											"name": "position",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "Baseline.tsx",
													"line": 22,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "left"
													},
													{
														"type": "stringLiteral",
														"value": "right"
													}
												]
											}
										},
										{
											"id": 1504,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "Baseline.tsx",
													"line": 19,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "BaselineStyle",
												"id": 158
											}
										},
										{
											"id": 1505,
											"name": "value",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "Baseline.tsx",
													"line": 20,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1503,
												1506,
												1507,
												1504,
												1505
											]
										}
									],
									"sources": [
										{
											"fileName": "Baseline.tsx",
											"line": 17,
											"character": 40
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1415
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1501
					]
				}
			],
			"sources": [
				{
					"fileName": "Baseline.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1508,
			"name": "\"BoxChart\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/BoxChart.tsx",
			"children": [
				{
					"id": 1509,
					"name": "BoxChart",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a boxplot chart.",
						"text": "The TimeSeries supplied to the boxplot, as the `series` prop can be one of two types:\n\n 1) It can be a TimeSeries containing IndexedEvents or TimeRangeEvents.\n    In this case a `column` prop should be supplied to specify the\n    data column containing the dimensions of the boxes. This props\n    should be an array of size 1 to 5 elements. e.g. [12, 18, 22, 28]. The\n    numbers should be ordered, lowest to greatest.\n\n 2) A TimeSeries containing timestamp based Events. In this case the\n    boxplot will be aggregated for you. To control the aggregation you can supply\n    an `aggregation` prop: a structure to specify the window size and\n    reducers used to determine the boxes.\n\nIn both cases you are generating up to two ranges and a center marker. In the\nfirst case you are defining this based on the array of numbers. The outer numbers\nspecify the outerRange, the inner numbers specify the innerRange and the middle\nnumber specifies the center marker. In the second case you are building those ranges\nfrom denser data, specifying a window and aggregation functions to build each\nof the ranges and center maker.\n\nIn both cases you do not need to supply all the values. For example if you\nprovide an array of 2 elements, that would define a single range, with no outer range\nand no center marker. The BoxChart is pretty flexible in that way, so you\ncan use it in many situations.\n\nHere is an example of using it to display temperature ranges. The series\npassed to this code would be a TimeSeries containing IndexedEvents. For\neach event, the column `temp` contains an array of values used for the\nbox plot ranges:\n\n```\n    <BoxChart\n      axis=\"temperatureAxis\"\n      style={style}\n      column=\"temp\"\n      series={series} />\n```\n\nWhile here is an example with a dense TimeSeries of Events supplied,\nalong with an aggregation specification. This code would produce an\nouter range from the 5th percentile to the 95th, along with an inner\nrange for the interquantile, and a center marker at the median:\n\n```\n   <BoxChart\n     axis=\"speedaxis\"\n     series={speed}\n     column=\"speed\"\n     style={style}\n     aggregation={{\n       size: this.state.rollup,\n       reducers: {\n         outer: [percentile(5), percentile(95)],\n         inner: [percentile(25), percentile(75)],\n         center: median(),\n       },\n     }}\n   />\n```\n\nThe BoxChart supports Info boxes, highlighting and selection.\n\nNote: selection and highlighting is on the whole event, not individual ranges.\nAlso note that since the box chart builds an internal TimeSeries for performance\nreasons, selection will give you and IndexedEvent, but it won't be the same\nIndexedEvent in your `series`. Similarly if you are using the aggregation\nspecification you will get events for the rollup, not your original data.\n"
					},
					"typeParameter": [
						{
							"id": 1565,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1566,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1611,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1534,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1535,
									"name": "new BoxChart",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1536,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BoxChartProps",
												"id": 1672
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BoxChart",
										"id": 1509
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 316,
									"character": 21
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1634,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1531,
							"name": "highlightedStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 314,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1532,
							"name": "mutedStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 315,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1533,
							"name": "normalStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 316,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1630,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1631,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1632,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1632
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BoxChartProps",
												"id": 1672
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1529,
							"name": "providedStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 312,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1635,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1636,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1637,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1638,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1530,
							"name": "selectedStyle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 313,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1528,
							"name": "series",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 309,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "TimeSeries",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Index"
									}
								]
							}
						},
						{
							"id": 1633,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1537,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1538,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1539,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BoxChartProps",
												"id": 1672
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 333,
									"character": 29
								}
							]
						},
						{
							"id": 1625,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1626,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1627,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1628,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1629,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1549,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1550,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1551,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGElement"
													}
												]
											}
										},
										{
											"id": 1552,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Index"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 431,
									"character": 15
								}
							]
						},
						{
							"id": 1543,
							"name": "handleHover",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1544,
									"name": "handleHover",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1545,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGElement"
													}
												]
											}
										},
										{
											"id": 1546,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Index"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 419,
									"character": 15
								}
							]
						},
						{
							"id": 1547,
							"name": "handleHoverLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1548,
									"name": "handleHoverLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 425,
									"character": 20
								}
							]
						},
						{
							"id": 1553,
							"name": "providedStyleArray",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1554,
									"name": "providedStyleArray",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Given a `column`, look up the ChannelStyle."
									},
									"parameters": [
										{
											"id": 1555,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "LevelStyle",
											"id": 112
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 441,
									"character": 22
								}
							]
						},
						{
							"id": 1563,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1564,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 717,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1561,
							"name": "renderBars",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1562,
									"name": "renderBars",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 535,
									"character": 14
								}
							]
						},
						{
							"id": 1612,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1613,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1614,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1615,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1616,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1617,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1618,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 1619,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "BoxChartProps",
																				"id": 1672
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1620,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1621,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1622,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1623,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1624,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1540,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1541,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1542,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BoxChartProps",
												"id": 1672
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 353,
									"character": 25
								}
							]
						},
						{
							"id": 1556,
							"name": "style",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1557,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the style of a specific column, at a specific level taking into\naccount the mode of the Event (selected, highlighted etc). This is the\nstyle used for drawing the box itself."
									},
									"parameters": [
										{
											"id": 1558,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1559,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Index"
													}
												]
											}
										},
										{
											"id": 1560,
											"name": "level",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LevelStyle",
										"id": 112
									}
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 460,
									"character": 9
								}
							]
						},
						{
							"id": 1591,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1592,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1597,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1598,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1599,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BoxChartProps",
														"id": 1672
													}
												]
											}
										},
										{
											"id": 1600,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1606,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1607,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1608,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BoxChartProps",
														"id": 1672
													}
												]
											}
										},
										{
											"id": 1609,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1610,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1576,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1577,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1578,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1579,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1567,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1568,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1584,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1585,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1586,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BoxChartProps",
														"id": 1672
													}
												]
											}
										},
										{
											"id": 1587,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1588,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1589,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1590,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1593,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1594,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1595,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BoxChartProps",
														"id": 1672
													}
												]
											}
										},
										{
											"id": 1596,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1574,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1575,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1601,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1602,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1603,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BoxChartProps",
														"id": 1672
													}
												]
											}
										},
										{
											"id": 1604,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1605,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1580,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1581,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1582,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BoxChartProps",
														"id": 1672
													}
												]
											}
										},
										{
											"id": 1583,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1569,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1570,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1571,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BoxChartProps",
														"id": 1672
													}
												]
											}
										},
										{
											"id": 1572,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1573,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1510,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1511,
									"name": "column",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 286,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"value\""
								},
								{
									"id": 1527,
									"name": "infoHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 305,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "30"
								},
								{
									"id": 1525,
									"name": "infoMarkerRadius",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 303,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								},
								{
									"id": 1526,
									"name": "infoWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 304,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "90"
								},
								{
									"id": 1512,
									"name": "innerSpacing",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 287,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 1513,
									"name": "outerSpacing",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 288,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								},
								{
									"id": 1514,
									"name": "infoStyle",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1516,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 291,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"white\""
										},
										{
											"id": 1517,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 292,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.9"
										},
										{
											"id": 1518,
											"name": "pointerEvents",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 293,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 1515,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 290,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#999\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1516,
												1517,
												1518,
												1515
											]
										}
									],
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 289,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 1523,
									"name": "markerStyle",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1524,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 301,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#999\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1524
											]
										}
									],
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 300,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 1519,
									"name": "stemStyle",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 1521,
											"name": "cursor",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 297,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"crosshair\""
										},
										{
											"id": 1522,
											"name": "pointerEvents",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 298,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 1520,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 296,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#999\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1521,
												1522,
												1520
											]
										}
									],
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 295,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1511,
										1527,
										1525,
										1526,
										1512,
										1513
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										1514,
										1523,
										1519
									]
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 285,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1534
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1634,
								1531,
								1532,
								1533,
								1630,
								1529,
								1635,
								1530,
								1528,
								1633
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1537,
								1625,
								1549,
								1543,
								1547,
								1553,
								1563,
								1561,
								1612,
								1540,
								1556,
								1591,
								1597,
								1606,
								1576,
								1567,
								1584,
								1589,
								1593,
								1574,
								1601,
								1580,
								1569
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1510
							]
						}
					],
					"sources": [
						{
							"fileName": "BoxChart.tsx",
							"line": 284,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "BoxChartProps",
									"id": 1672
								}
							]
						}
					]
				},
				{
					"id": 1639,
					"name": "AggregationSpec",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A structure the user can pass into this Chart to automatically build the\nbox ranges using Pond's fixedWindowRollup function."
					},
					"sources": [
						{
							"fileName": "BoxChart.tsx",
							"line": 51,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1640,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1642,
									"name": "reducers",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 53,
											"character": 12
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1643,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1646,
													"name": "center",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "BoxChart.tsx",
															"line": 56,
															"character": 14
														}
													],
													"type": {
														"type": "reference",
														"name": "ReducerFunction"
													}
												},
												{
													"id": 1645,
													"name": "inner",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "BoxChart.tsx",
															"line": 55,
															"character": 13
														}
													],
													"type": {
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"name": "ReducerFunction"
															},
															{
																"type": "reference",
																"name": "ReducerFunction"
															}
														]
													}
												},
												{
													"id": 1644,
													"name": "outer",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "BoxChart.tsx",
															"line": 54,
															"character": 13
														}
													],
													"type": {
														"type": "tuple",
														"elements": [
															{
																"type": "reference",
																"name": "ReducerFunction"
															},
															{
																"type": "reference",
																"name": "ReducerFunction"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1646,
														1645,
														1644
													]
												}
											],
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 53,
													"character": 13
												}
											]
										}
									}
								},
								{
									"id": 1641,
									"name": "size",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 52,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "Window"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1642,
										1641
									]
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 51,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 1672,
					"name": "BoxChartProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "BoxChart.tsx",
							"line": 192,
							"character": 25
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 406
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1673,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1676,
											"name": "aggregation",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 195,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "AggregationSpec",
												"id": 1639
											}
										},
										{
											"id": 1675,
											"name": "column",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 194,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1695,
											"name": "highlighted",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 208,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Index"
													}
												]
											}
										},
										{
											"id": 1681,
											"name": "info",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 197,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 438
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1688,
											"name": "infoHeight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 201,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1689,
											"name": "infoMarkerRadius",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 202,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1682,
											"name": "infoStyle",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 198,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "EventMarkerStyle",
												"id": 186
											}
										},
										{
											"id": 1683,
											"name": "infoTimeFormat",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 199,
													"character": 18
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1684,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1685,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1686,
																			"name": "date",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "BoxChart.tsx",
																	"line": 199,
																	"character": 20
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1687,
											"name": "infoWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 200,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1692,
											"name": "innerSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 205,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1690,
											"name": "innerSpacing",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 203,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1700,
											"name": "onHighlightChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 210,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1701,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1702,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1703,
																	"name": "e",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Event",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "Index"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "BoxChart.tsx",
															"line": 210,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 1696,
											"name": "onSelectionChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 209,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1697,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1698,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1699,
																	"name": "e",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Event",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "Index"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "BoxChart.tsx",
															"line": 209,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 1693,
											"name": "outerSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 206,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1691,
											"name": "outerSpacing",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 204,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1694,
											"name": "selected",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 207,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Index"
													}
												]
											}
										},
										{
											"id": 1674,
											"name": "series",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 193,
													"character": 10
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "TimeSeries",
														"typeArguments": [
															{
																"type": "reference",
																"name": "Index"
															}
														]
													},
													{
														"type": "reference",
														"name": "TimeSeries",
														"typeArguments": [
															{
																"type": "reference",
																"name": "Time"
															}
														]
													}
												]
											}
										},
										{
											"id": 1677,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "BoxChart.tsx",
													"line": 196,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "BoxChartStyle",
														"id": 119
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1678,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1679,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1680,
																			"name": "channel",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"name": "ChannelStyle"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "BoxChart.tsx",
																	"line": 196,
																	"character": 27
																}
															]
														}
													},
													{
														"type": "reference",
														"name": "Styler",
														"id": 581
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1676,
												1675,
												1695,
												1681,
												1688,
												1689,
												1682,
												1683,
												1687,
												1692,
												1690,
												1700,
												1696,
												1693,
												1691,
												1694,
												1674,
												1677
											]
										}
									],
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 192,
											"character": 40
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1656,
					"name": "BoxChartRanges",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Defines a structure that will hold the actual ranges to be plotted, whether they\ncome from the chart itself doing the aggregation or are supplied pre-baked from\nthe user."
					},
					"sources": [
						{
							"fileName": "BoxChart.tsx",
							"line": 79,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1657,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1658,
									"name": "center",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 80,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1660,
									"name": "innerMax",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 82,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1659,
									"name": "innerMin",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 81,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1662,
									"name": "outerMax",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 84,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1661,
									"name": "outerMin",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 83,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1658,
										1660,
										1659,
										1662,
										1661
									]
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 79,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 1667,
					"name": "getAggregatedSeries",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1668,
							"name": "getAggregatedSeries",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Takes in a TimeSeries and an AggregationSpec and builds a new TimeSeries<Index>\nwhich will be rendered by the chart. The `AggregationSpec` is a combination of\nthe windowing size to use (e.g. 5 minutes) and the reducer functions used to\nbuild the inner and outer ranges, along with the center. For example:\n```\n{\n   size: window(duration(\"5m\")),\n   reducers: {\n       outer: [min(), max()],\n       inner: [percentile(25), percentile(75)],\n       center: median()\n   }\n}\n```"
							},
							"parameters": [
								{
									"id": 1669,
									"name": "series",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TimeSeries",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Key"
											}
										]
									}
								},
								{
									"id": 1670,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1671,
									"name": "aggregation",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AggregationSpec",
										"id": 1639
									},
									"defaultValue": " defaultAggregation"
								}
							],
							"type": {
								"type": "reference",
								"name": "TimeSeries",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Index"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "BoxChart.tsx",
							"line": 156,
							"character": 28
						}
					]
				},
				{
					"id": 1663,
					"name": "getSeries",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1664,
							"name": "getSeries",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Remaps a `TimeSeries<Index>` which is assumed to have an array of between 1 and 5 values\nat the `column` specified to a a new TimeSeries<Index>, where each Index is associated with\na structure containing outer and inner ranges along with center.",
								"text": "The input `TimeSeries` is the format the user should supply to the series if they want\nto pre-bake the ranges. The output `TimeSeries` is the format actually plotted. If the\nchart itself does the aggregation then this same output format will be generated by the\nfunction `getAggregatedSeries()` below.\n"
							},
							"parameters": [
								{
									"id": 1665,
									"name": "series",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TimeSeries",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Index"
											}
										]
									}
								},
								{
									"id": 1666,
									"name": "column",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "TimeSeries",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Index"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "BoxChart.tsx",
							"line": 97,
							"character": 18
						}
					]
				},
				{
					"id": 1647,
					"name": "defaultAggregation",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "The default version of the AggregationSpec, which will result in a classic\nBoxPlot with outer box being min to max, inner box being the 25th and 75th\npercentiles, and a marker at the center for the medium."
					},
					"children": [
						{
							"id": 1648,
							"name": "size",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 66,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Window"
							},
							"defaultValue": " window(duration(\"5m\"))"
						},
						{
							"id": 1649,
							"name": "reducers",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 1652,
									"name": "center",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 70,
											"character": 14
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1653,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1654,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1655,
															"name": "values",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									},
									"defaultValue": " median()"
								},
								{
									"id": 1651,
									"name": "inner",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 69,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " [percentile(25), percentile(75)]"
								},
								{
									"id": 1650,
									"name": "outer",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "BoxChart.tsx",
											"line": 68,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "Object"
									},
									"defaultValue": " [min(), max()]"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1652,
										1651,
										1650
									]
								}
							],
							"sources": [
								{
									"fileName": "BoxChart.tsx",
									"line": 67,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1648
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1649
							]
						}
					],
					"sources": [
						{
							"fileName": "BoxChart.tsx",
							"line": 65,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1509
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1639,
						1672,
						1656
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1667,
						1663
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1647
					]
				}
			],
			"sources": [
				{
					"fileName": "BoxChart.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1704,
			"name": "\"Brush\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/Brush.tsx",
			"children": [
				{
					"id": 1705,
					"name": "Brush",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a brush with the range defined in the prop `timeRange`."
					},
					"typeParameter": [
						{
							"id": 1741,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1710,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1711,
									"name": "new Brush",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1712,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BrushProps",
												"id": 1813
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Brush",
										"id": 1705
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 45,
									"character": 28
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1808,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1709,
							"name": "overlay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 45,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "SVGRectElement"
							}
						},
						{
							"id": 1804,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1805,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1806,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1806
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BrushProps",
												"id": 1813
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1809,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1810,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1811,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1812,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1807,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BrushState",
										"id": 1823
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1799,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1800,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1801,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1802,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1803,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1715,
							"name": "handleBrushMouseDown",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1716,
									"name": "handleBrushMouseDown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1717,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 69,
									"character": 24
								}
							]
						},
						{
							"id": 1728,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1729,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Handles clearing the TimeRange if the user clicks on the overlay (but\ndoesn't drag to create a new brush). This will send a null as the\nnew TimeRange. The user of this code can react to that however they\nsee fit, but the most logical response is to reset the timerange to\nsome initial value. This behavior is optional."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 135,
									"character": 15
								}
							]
						},
						{
							"id": 1721,
							"name": "handleHandleMouseDown",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1722,
									"name": "handleHandleMouseDown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1723,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										},
										{
											"id": 1724,
											"name": "handle",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 98,
									"character": 25
								}
							]
						},
						{
							"id": 1730,
							"name": "handleMouseMove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1731,
									"name": "handleMouseMove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1732,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 141,
									"character": 19
								}
							]
						},
						{
							"id": 1725,
							"name": "handleMouseUp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1726,
									"name": "handleMouseUp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1727,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 115,
									"character": 17
								}
							]
						},
						{
							"id": 1718,
							"name": "handleOverlayMouseDown",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1719,
									"name": "handleOverlayMouseDown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1720,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 84,
									"character": 26
								}
							]
						},
						{
							"id": 1739,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1740,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 338,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1735,
							"name": "renderBrush",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1736,
									"name": "renderBrush",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 235,
									"character": 15
								}
							]
						},
						{
							"id": 1737,
							"name": "renderHandles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1738,
									"name": "renderHandles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 287,
									"character": 17
								}
							]
						},
						{
							"id": 1733,
							"name": "renderOverlay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1734,
									"name": "renderOverlay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 199,
									"character": 17
								}
							]
						},
						{
							"id": 1786,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1787,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1788,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "BrushState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1789,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1790,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1791,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1792,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "BrushState",
																						"id": 1823
																					}
																				]
																			}
																		},
																		{
																			"id": 1793,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "BrushProps",
																				"id": 1813
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1794,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1795,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1796,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1797,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1798,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1713,
							"name": "viewport",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1714,
									"name": "viewport",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TimeRange"
									}
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 62,
									"character": 12
								}
							]
						},
						{
							"id": 1766,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1767,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1772,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1773,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1774,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushProps",
														"id": 1813
													}
												]
											}
										},
										{
											"id": 1775,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1781,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1782,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1783,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushProps",
														"id": 1813
													}
												]
											}
										},
										{
											"id": 1784,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushState",
														"id": 1823
													}
												]
											}
										},
										{
											"id": 1785,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1751,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1752,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1753,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1754,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1742,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1743,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1759,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1760,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1761,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushProps",
														"id": 1813
													}
												]
											}
										},
										{
											"id": 1762,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushState",
														"id": 1823
													}
												]
											}
										},
										{
											"id": 1763,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1764,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1765,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1768,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1769,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1770,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushProps",
														"id": 1813
													}
												]
											}
										},
										{
											"id": 1771,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1749,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1750,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1776,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1777,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1778,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushProps",
														"id": 1813
													}
												]
											}
										},
										{
											"id": 1779,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushState",
														"id": 1823
													}
												]
											}
										},
										{
											"id": 1780,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1755,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1756,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1757,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushProps",
														"id": 1813
													}
												]
											}
										},
										{
											"id": 1758,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushState",
														"id": 1823
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1744,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1745,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1746,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushProps",
														"id": 1813
													}
												]
											}
										},
										{
											"id": 1747,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "BrushState",
														"id": 1823
													}
												]
											}
										},
										{
											"id": 1748,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1706,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1708,
									"name": "allowSelectionClear",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 42,
											"character": 27
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 1707,
									"name": "handleSize",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 41,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "6"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1708,
										1707
									]
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 40,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1710
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1808,
								1709,
								1804,
								1809,
								1807
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1799,
								1715,
								1728,
								1721,
								1730,
								1725,
								1718,
								1739,
								1735,
								1737,
								1733,
								1786,
								1713,
								1766,
								1772,
								1781,
								1751,
								1742,
								1759,
								1764,
								1768,
								1749,
								1776,
								1755,
								1744
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1706
							]
						}
					],
					"sources": [
						{
							"fileName": "Brush.tsx",
							"line": 39,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "BrushProps",
									"id": 1813
								},
								{
									"type": "reference",
									"name": "BrushState",
									"id": 1823
								}
							]
						}
					]
				},
				{
					"id": 1813,
					"name": "BrushProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Brush.tsx",
							"line": 20,
							"character": 22
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 406
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1814,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1818,
											"name": "allowSelectionClear",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "Brush.tsx",
													"line": 24,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1817,
											"name": "handleSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "Brush.tsx",
													"line": 23,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1819,
											"name": "onTimeRangeChanged",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "Brush.tsx",
													"line": 25,
													"character": 22
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1820,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1821,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1822,
																	"name": "d",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "TimeRange"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "Brush.tsx",
															"line": 25,
															"character": 24
														}
													]
												}
											}
										},
										{
											"id": 1815,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "Brush.tsx",
													"line": 21,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1816,
											"name": "timeRange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "Brush.tsx",
													"line": 22,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "TimeRange"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1818,
												1817,
												1819,
												1815,
												1816
											]
										}
									],
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 20,
											"character": 37
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1823,
					"name": "BrushState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Brush.tsx",
							"line": 28,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1824,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1826,
									"name": "brushingInitializationSite",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 30,
											"character": 30
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1827,
									"name": "initialBrushBeginTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 31,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1828,
									"name": "initialBrushEndTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 32,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1829,
									"name": "initialBrushXYPosition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 33,
											"character": 26
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 1825,
									"name": "isBrushing",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Brush.tsx",
											"line": 29,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1826,
										1827,
										1828,
										1829,
										1825
									]
								}
							],
							"sources": [
								{
									"fileName": "Brush.tsx",
									"line": 28,
									"character": 24
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1705
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1813,
						1823
					]
				}
			],
			"sources": [
				{
					"fileName": "Brush.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2340,
			"name": "\"ChartContainer\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/ChartContainer.tsx",
			"children": [
				{
					"id": 2341,
					"name": "ShowGridPosition",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 2342,
							"name": "Over",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 51,
									"character": 8
								}
							],
							"defaultValue": "\"OVER\""
						},
						{
							"id": 2343,
							"name": "Under",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 52,
									"character": 9
								}
							],
							"defaultValue": "\"UNDER\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								2342,
								2343
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 50,
							"character": 28
						}
					]
				},
				{
					"id": 2344,
					"name": "ChartContainer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `<ChartContainer>` is the outer most element of a chart and is\nresponsible for generating and arranging its sub-elements. Specifically,\nit is a container for one or more `<ChartRows>` (each of which contains\ncharts, axes etc) and in addition it manages the overall time range of\nthe chart and so also is responsible for the time axis, which is always\nshared by all the rows.",
						"text": "Here is an example:\n\n```xml\n<ChartContainer timeRange={audSeries.timerange()} width=\"800\">\n    <ChartRow>\n        ...\n    </ChartRow>\n    <ChartRow>\n        ...\n    </ChartRow>\n</ChartContainer>\n```\n"
					},
					"typeParameter": [
						{
							"id": 2371,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2372,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2417,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2418,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2419,
									"name": "new ChartContainer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2420,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChartContainerProps",
												"id": 2463
											}
										},
										{
											"id": 2421,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChartContainer",
										"id": 2344
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2444,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2440,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2441,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2442,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2442
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ChartContainerProps",
												"id": 2463
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2445,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2446,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2447,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2448,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2443,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2435,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2436,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2437,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2438,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2439,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2364,
							"name": "handleBackgroundClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2365,
									"name": "handleBackgroundClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called from the EventHandler (onMouseClick callback) when the user clicks on\nan area without a chart."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 133,
									"character": 25
								}
							]
						},
						{
							"id": 2359,
							"name": "handleMouseMove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2360,
									"name": "handleMouseMove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called from the EventHandler.onMouseMove with the cursor\nposition as a Date."
									},
									"parameters": [
										{
											"id": 2361,
											"name": "t",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 113,
									"character": 19
								}
							]
						},
						{
							"id": 2362,
							"name": "handleMouseOut",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2363,
									"name": "handleMouseOut",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called from the EventHandler.onMouseOut when the cursor leaves\nthe chart area."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 123,
									"character": 18
								}
							]
						},
						{
							"id": 2366,
							"name": "handleZoom",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2367,
									"name": "handleZoom",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2368,
											"name": "timerange",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TimeRange"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 139,
									"character": 14
								}
							]
						},
						{
							"id": 2369,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2370,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 145,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2422,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2423,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2424,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2425,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2426,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2427,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2428,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 2429,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ChartContainerProps",
																				"id": 2463
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2430,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2431,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2432,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2433,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2434,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2397,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2398,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2403,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2404,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2405,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartContainerProps",
														"id": 2463
													}
												]
											}
										},
										{
											"id": 2406,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2412,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2413,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2414,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartContainerProps",
														"id": 2463
													}
												]
											}
										},
										{
											"id": 2415,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2416,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2382,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2383,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2384,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2385,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2373,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2374,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2390,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2391,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2392,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartContainerProps",
														"id": 2463
													}
												]
											}
										},
										{
											"id": 2393,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2394,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2395,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2396,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2399,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2400,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2401,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartContainerProps",
														"id": 2463
													}
												]
											}
										},
										{
											"id": 2402,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2380,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2381,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2407,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2408,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2409,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartContainerProps",
														"id": 2463
													}
												]
											}
										},
										{
											"id": 2410,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2411,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2386,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2387,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2388,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartContainerProps",
														"id": 2463
													}
												]
											}
										},
										{
											"id": 2389,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2375,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2376,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2377,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartContainerProps",
														"id": 2463
													}
												]
											}
										},
										{
											"id": 2378,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2379,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2345,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2347,
									"name": "enablePanZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 102,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 2349,
									"name": "showGrid",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 104,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 2350,
									"name": "showGridPosition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 105,
											"character": 24
										}
									],
									"type": {
										"type": "reference",
										"name": "Under",
										"id": 2343
									},
									"defaultValue": " ShowGridPosition.Under"
								},
								{
									"id": 2351,
									"name": "timeAxisStyle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 106,
											"character": 21
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2352,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2356,
													"name": "axis",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 2357,
															"name": "axisColor",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "ChartContainer.tsx",
																	"line": 37,
																	"character": 17
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"#C0C0C0\""
														},
														{
															"id": 2358,
															"name": "axisWidth",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "ChartContainer.tsx",
																	"line": 38,
																	"character": 17
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															},
															"defaultValue": "1"
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2357,
																2358
															]
														}
													],
													"sources": [
														{
															"fileName": "ChartContainer.tsx",
															"line": 36,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 2353,
													"name": "labels",
													"kind": 2097152,
													"kindString": "Object literal",
													"flags": {},
													"children": [
														{
															"id": 2354,
															"name": "labelColor",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "ChartContainer.tsx",
																	"line": 33,
																	"character": 18
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "\"#8B7E7E\""
														},
														{
															"id": 2355,
															"name": "labelSize",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "ChartContainer.tsx",
																	"line": 34,
																	"character": 17
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															},
															"defaultValue": "11"
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2354,
																2355
															]
														}
													],
													"sources": [
														{
															"fileName": "ChartContainer.tsx",
															"line": 32,
															"character": 10
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Object literals",
													"kind": 2097152,
													"children": [
														2356,
														2353
													]
												}
											]
										}
									},
									"defaultValue": " defaultTimeAxisStyle"
								},
								{
									"id": 2348,
									"name": "timezone",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 103,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Etc/UTC\""
								},
								{
									"id": 2346,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 101,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "800"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2347,
										2349,
										2350,
										2351,
										2348,
										2346
									]
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 100,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2418
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2444,
								2440,
								2445,
								2443
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2435,
								2364,
								2359,
								2362,
								2366,
								2369,
								2422,
								2397,
								2403,
								2412,
								2382,
								2373,
								2390,
								2395,
								2399,
								2380,
								2407,
								2386,
								2375
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2345
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 99,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ChartContainerProps",
									"id": 2463
								}
							]
						}
					]
				},
				{
					"id": 2463,
					"name": "ChartContainerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 55,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2464,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2465,
									"name": "children",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 56,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2473,
									"name": "enablePanZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 64,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2470,
									"name": "maxTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 61,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 2474,
									"name": "minDuration",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 65,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2469,
									"name": "minTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 60,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 2490,
									"name": "onBackgroundClick",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 75,
											"character": 21
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2491,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2492,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 75,
													"character": 23
												}
											]
										}
									}
								},
								{
									"id": 2486,
									"name": "onTimeRangeChanged",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 74,
											"character": 22
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2487,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2488,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2489,
															"name": "timerange",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "TimeRange"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 74,
													"character": 24
												}
											]
										}
									}
								},
								{
									"id": 2482,
									"name": "onTrackerChanged",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 73,
											"character": 20
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2483,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2484,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2485,
															"name": "time",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Date"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartContainer.tsx",
													"line": 73,
													"character": 22
												}
											]
										}
									}
								},
								{
									"id": 2476,
									"name": "showGrid",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 67,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2477,
									"name": "showGridPosition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 68,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "ShowGridPosition",
										"id": 2341
									}
								},
								{
									"id": 2472,
									"name": "timeAxisStyle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 63,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2471,
									"name": "timeFormat",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 62,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2466,
									"name": "timeRange",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 57,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "TimeRange"
									}
								},
								{
									"id": 2467,
									"name": "timezone",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 58,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2479,
									"name": "trackerInfo",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 70,
											"character": 15
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "LabelValueList",
												"id": 438
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 2481,
									"name": "trackerInfoHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 72,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2480,
									"name": "trackerInfoWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 71,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2478,
									"name": "trackerTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 69,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 2475,
									"name": "transition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 66,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2468,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 59,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2465,
										2473,
										2470,
										2474,
										2469,
										2490,
										2486,
										2482,
										2476,
										2477,
										2472,
										2471,
										2466,
										2467,
										2479,
										2481,
										2480,
										2478,
										2475,
										2468
									]
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 55,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 2460,
					"name": "StyleTargetKeys",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 47,
							"character": 27
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"name": "StyleTargets"
						}
					}
				},
				{
					"id": 2456,
					"name": "StyleTargets",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 42,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2457,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2459,
									"name": "axis",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 44,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2458,
									"name": "labels",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 43,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2459,
										2458
									]
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 42,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 2461,
					"name": "TimeAxisStyleType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 48,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2462,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 48,
									"character": 31
								}
							]
						}
					}
				},
				{
					"id": 2449,
					"name": "defaultTimeAxisStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 2453,
							"name": "axis",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 2454,
									"name": "axisColor",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 37,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#C0C0C0\""
								},
								{
									"id": 2455,
									"name": "axisWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 38,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2454,
										2455
									]
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 36,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 2450,
							"name": "labels",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 2451,
									"name": "labelColor",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 33,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#8B7E7E\""
								},
								{
									"id": 2452,
									"name": "labelSize",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "ChartContainer.tsx",
											"line": 34,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "11"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2451,
										2452
									]
								}
							],
							"sources": [
								{
									"fileName": "ChartContainer.tsx",
									"line": 32,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2453,
								2450
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartContainer.tsx",
							"line": 31,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						2341
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2344
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2463,
						2460,
						2456,
						2461
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						2449
					]
				}
			],
			"sources": [
				{
					"fileName": "ChartContainer.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2076,
			"name": "\"ChartRow\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/ChartRow.tsx",
			"children": [
				{
					"id": 2077,
					"name": "ChartRow",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A ChartRow is a container for a set of YAxis and multiple charts\nwhich are overlaid on each other in a central canvas.",
						"text": "Here is an example where a single `<ChartRow>` is defined within\nthe `<ChartContainer>`. Of course you can have any number of rows.\n\nFor this row we specify the one prop `height` as 200 pixels high.\n\nWithin the `<ChartRow>` we add:\n\n* `<YAxis>` elements for axes to the left of the chart\n* `<Chart>` block containing our central chart area\n* `<YAxis>` elements for our axes to the right of the charts\n\n```\n<ChartContainer timeRange={audSeries.timerange()}>\n    <ChartRow height=\"200\">\n        <YAxis />\n        <YAxis />\n        <Charts>\n            charts...\n       </Charts>\n        <YAxis />\n    </ChartRow>\n</ChartContainer>\n```\n"
					},
					"typeParameter": [
						{
							"id": 2095,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2085,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2086,
									"name": "new ChartRow",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2087,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChartRowProps",
												"id": 2176
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ChartRow",
										"id": 2077
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 135,
									"character": 63
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2162,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2158,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2159,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2160,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2160
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ChartRowProps",
												"id": 2176
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2163,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2164,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2165,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2166,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2081,
							"name": "scaleInterpolatorMap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 135,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2082,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2083,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2084,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ScaleInterpolator",
											"id": 264
										}
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 135,
											"character": 25
										}
									]
								}
							}
						},
						{
							"id": 2161,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartRowState",
										"id": 2192
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2088,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2089,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 152,
									"character": 22
								}
							]
						},
						{
							"id": 2090,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2091,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "When we get changes to the row's props we update our map of\naxis scales."
									},
									"parameters": [
										{
											"id": 2092,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChartRowProps",
												"id": 2176
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 198,
									"character": 29
								}
							]
						},
						{
							"id": 2153,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2154,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2155,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2156,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2157,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2093,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2094,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 233,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2140,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2141,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2142,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "ChartRowState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2143,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2144,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2145,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2146,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "ChartRowState",
																						"id": 2192
																					}
																				]
																			}
																		},
																		{
																			"id": 2147,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ChartRowProps",
																				"id": 2176
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2148,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2149,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2150,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2151,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2152,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2120,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2121,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2126,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2127,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2128,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowProps",
														"id": 2176
													}
												]
											}
										},
										{
											"id": 2129,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2135,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2136,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2137,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowProps",
														"id": 2176
													}
												]
											}
										},
										{
											"id": 2138,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowState",
														"id": 2192
													}
												]
											}
										},
										{
											"id": 2139,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2105,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2106,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2107,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2108,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2096,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2097,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2113,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2114,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2115,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowProps",
														"id": 2176
													}
												]
											}
										},
										{
											"id": 2116,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowState",
														"id": 2192
													}
												]
											}
										},
										{
											"id": 2117,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2118,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2119,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2122,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2123,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2124,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowProps",
														"id": 2176
													}
												]
											}
										},
										{
											"id": 2125,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2103,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2104,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2130,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2131,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2132,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowProps",
														"id": 2176
													}
												]
											}
										},
										{
											"id": 2133,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowState",
														"id": 2192
													}
												]
											}
										},
										{
											"id": 2134,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2109,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2110,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2111,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowProps",
														"id": 2176
													}
												]
											}
										},
										{
											"id": 2112,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowState",
														"id": 2192
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2098,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2099,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2100,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowProps",
														"id": 2176
													}
												]
											}
										},
										{
											"id": 2101,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartRowState",
														"id": 2192
													}
												]
											}
										},
										{
											"id": 2102,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2078,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2080,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 131,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								},
								{
									"id": 2079,
									"name": "trackerTimeFormat",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 130,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"%b %d %Y %X\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2080,
										2079
									]
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 129,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2085
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2162,
								2158,
								2163,
								2081,
								2161
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2088,
								2090,
								2153,
								2093,
								2140,
								2120,
								2126,
								2135,
								2105,
								2096,
								2113,
								2118,
								2122,
								2103,
								2130,
								2109,
								2098
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2078
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartRow.tsx",
							"line": 128,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ChartRowProps",
									"id": 2176
								},
								{
									"type": "reference",
									"name": "ChartRowState",
									"id": 2192
								}
							]
						}
					]
				},
				{
					"id": 2176,
					"name": "ChartRowProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ChartRow.tsx",
							"line": 71,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2177,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2178,
									"name": "children",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 72,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2180,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 74,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2189,
									"name": "leftAxisWidths",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 83,
											"character": 18
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 2190,
									"name": "rightAxisWidths",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 84,
											"character": 19
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 2184,
									"name": "timeFormat",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 78,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2181,
									"name": "timeScale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 75,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "ScaleTime",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 2187,
									"name": "trackerInfoHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 81,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2188,
									"name": "trackerInfoValues",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 82,
											"character": 21
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "LabelValueList",
												"id": 438
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 2186,
									"name": "trackerInfoWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 80,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2185,
									"name": "trackerShowTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 79,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2182,
									"name": "trackerTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 76,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 2183,
									"name": "trackerTimeFormat",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 77,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2191,
									"name": "transition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 85,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2179,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 73,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2178,
										2180,
										2189,
										2190,
										2184,
										2181,
										2187,
										2188,
										2186,
										2185,
										2182,
										2183,
										2191,
										2179
									]
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 71,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 2192,
					"name": "ChartRowState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "ChartRow.tsx",
							"line": 91,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2193,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2198,
									"name": "clipId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 93,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2199,
									"name": "clipPathURL",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 94,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2194,
									"name": "yAxisScalerMap",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ChartRow.tsx",
											"line": 92,
											"character": 18
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2195,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 2196,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 2197,
														"name": "key",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"name": "ScalerFunction",
													"id": 302
												}
											},
											"sources": [
												{
													"fileName": "ChartRow.tsx",
													"line": 92,
													"character": 20
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2198,
										2199,
										2194
									]
								}
							],
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 91,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 2207,
					"name": "ElementMap",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ChartRow.tsx",
							"line": 98,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2208,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 2209,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 2210,
										"name": "id",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "ReactElement",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									]
								}
							},
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 98,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 2200,
					"name": "ScalarMap",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ChartRow.tsx",
							"line": 97,
							"character": 21
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2201,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 2202,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 2203,
										"name": "id",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reflection",
									"declaration": {
										"id": 2204,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"signatures": [
											{
												"id": 2205,
												"name": "__call",
												"kind": 4096,
												"kindString": "Call signature",
												"flags": {},
												"parameters": [
													{
														"id": 2206,
														"name": "v",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"sources": [
											{
												"fileName": "ChartRow.tsx",
												"line": 97,
												"character": 39
											}
										]
									}
								}
							},
							"sources": [
								{
									"fileName": "ChartRow.tsx",
									"line": 97,
									"character": 23
								}
							]
						}
					}
				},
				{
					"id": 2167,
					"name": "AXIS_MARGIN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "ChartRow.tsx",
							"line": 34,
							"character": 17
						}
					],
					"type": {
						"type": "unknown",
						"name": "5"
					},
					"defaultValue": "5"
				},
				{
					"id": 2168,
					"name": "createScale",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 2169,
							"name": "createScale",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Given an axis props create a d3 scale"
							},
							"parameters": [
								{
									"id": 2170,
									"name": "yaxis",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ReactElement",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								},
								{
									"id": 2171,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2172,
									"name": "min",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2173,
									"name": "max",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2174,
									"name": "y0",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2175,
									"name": "y1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Scale",
								"id": 396
							}
						}
					],
					"sources": [
						{
							"fileName": "ChartRow.tsx",
							"line": 39,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2077
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2176,
						2192,
						2207,
						2200
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2167
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2168
					]
				}
			],
			"sources": [
				{
					"fileName": "ChartRow.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 310,
			"name": "\"Charts\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/Charts.tsx",
			"children": [
				{
					"id": 311,
					"name": "ScaleType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 312,
							"name": "Linear",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Charts.tsx",
									"line": 28,
									"character": 10
								}
							],
							"defaultValue": "\"LINEAR\""
						},
						{
							"id": 314,
							"name": "Log",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Charts.tsx",
									"line": 30,
									"character": 7
								}
							],
							"defaultValue": "\"LOG\""
						},
						{
							"id": 313,
							"name": "Power",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Charts.tsx",
									"line": 29,
									"character": 9
								}
							],
							"defaultValue": "\"POWER\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								312,
								314,
								313
							]
						}
					],
					"sources": [
						{
							"fileName": "Charts.tsx",
							"line": 27,
							"character": 21
						}
					]
				},
				{
					"id": 315,
					"name": "Charts",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `<Charts>` element is a grouping for charts within a row.\nIt takes no props. Each chart within the group will be overlaid\non top of each other.",
						"text": "Here is an example of two line charts within a `<Charts>` group:\n\n```xml\n<ChartContainer timeRange={audSeries.timerange()}>\n    <ChartRow height=\"200\">\n        <YAxis/>\n        <Charts>\n            <LineChart axis=\"aud\" series={audSeries} style={audStyle}/>\n            <LineChart axis=\"euro\" series={euroSeries} style={euroStyle}/>\n        </Charts>\n        <YAxis/>\n    </ChartRow>\n</ChartContainer>\n```\n\n## Making your own chart\n\nAnything within this grouping is considered a chart, meaning it will have\ncertain props injected into it. As a result you can easily implement your own chart\nby simply expecting to have these props available and rendering as such.\n\nFor your own chart, the render() method should return a SVG group `<g>` at the\ntop level, and then your chart rendering within that.\n\nIn addition to any props you add to your chart, the following props are passed into\neach chart automatically:\n\n#### timeScale\n\nA d3 scale for the time axis which you can use to transform your data in the x direction\n\n#### yScale\n\nA d3 scale for the y-axis which you can use to transform your data in the y direction\n\n#### width\n\nA the width your chart will render into\n"
					},
					"typeParameter": [
						{
							"id": 318,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 319,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 364,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 365,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 366,
									"name": "new Charts",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 367,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ChartsProps",
												"id": 415
											}
										},
										{
											"id": 368,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Charts",
										"id": 315
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 391,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 387,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 388,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 389,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																389
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ChartsProps",
												"id": 415
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 392,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 393,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 394,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 395,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 390,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 382,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 383,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 384,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 385,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 386,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 316,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 317,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "Charts.tsx",
									"line": 111,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 369,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 370,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 371,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 372,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 373,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 374,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 375,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 376,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ChartsProps",
																				"id": 415
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 377,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 378,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 379,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 380,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 381,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 344,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 345,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 350,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 351,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 352,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartsProps",
														"id": 415
													}
												]
											}
										},
										{
											"id": 353,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 359,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 360,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 361,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartsProps",
														"id": 415
													}
												]
											}
										},
										{
											"id": 362,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 363,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 329,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 330,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 331,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 332,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 320,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 321,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 337,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 338,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 339,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartsProps",
														"id": 415
													}
												]
											}
										},
										{
											"id": 340,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 341,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 342,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 343,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 346,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 347,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 348,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartsProps",
														"id": 415
													}
												]
											}
										},
										{
											"id": 349,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 327,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 328,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 354,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 355,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 356,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartsProps",
														"id": 415
													}
												]
											}
										},
										{
											"id": 357,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 358,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 333,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 334,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 335,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartsProps",
														"id": 415
													}
												]
											}
										},
										{
											"id": 336,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 322,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 323,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 324,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ChartsProps",
														"id": 415
													}
												]
											}
										},
										{
											"id": 325,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 326,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								365
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								391,
								387,
								392,
								390
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								382,
								316,
								369,
								344,
								350,
								359,
								329,
								320,
								337,
								342,
								346,
								327,
								354,
								333,
								322
							]
						}
					],
					"sources": [
						{
							"fileName": "Charts.tsx",
							"line": 110,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ChartsProps",
									"id": 415
								}
							]
						}
					]
				},
				{
					"id": 397,
					"name": "AxisProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Charts.tsx",
							"line": 33,
							"character": 21
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 398,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 404,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 39,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 400,
									"name": "id",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 35,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 401,
									"name": "max",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 36,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 402,
									"name": "min",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 37,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 403,
									"name": "transition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 38,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 399,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 34,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "ScaleType",
										"id": 311
									}
								},
								{
									"id": 405,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 40,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										404,
										400,
										401,
										402,
										403,
										399,
										405
									]
								}
							],
							"sources": [
								{
									"fileName": "Charts.tsx",
									"line": 33,
									"character": 23
								}
							]
						}
					}
				},
				{
					"id": 406,
					"name": "ChartProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Charts.tsx",
							"line": 47,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 407,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 410,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 50,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 408,
									"name": "key",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 48,
											"character": 7
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 413,
									"name": "timeFormat",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 53,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 411,
									"name": "timeScale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 51,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "ScaleTime",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 414,
									"name": "transition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 54,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 409,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 49,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 412,
									"name": "yScale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 52,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "ScalerFunction",
										"id": 302
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										410,
										408,
										413,
										411,
										414,
										409,
										412
									]
								}
							],
							"sources": [
								{
									"fileName": "Charts.tsx",
									"line": 47,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 415,
					"name": "ChartsProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Charts.tsx",
							"line": 61,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 416,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 417,
									"name": "children",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Charts.tsx",
											"line": 62,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										417
									]
								}
							],
							"sources": [
								{
									"fileName": "Charts.tsx",
									"line": 61,
									"character": 25
								}
							]
						}
					}
				},
				{
					"id": 396,
					"name": "Scale",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Charts.tsx",
							"line": 22,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ScaleLogarithmic",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							{
								"type": "reference",
								"name": "ScaleLinear",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							{
								"type": "reference",
								"name": "ScaleLogarithmic",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						311
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						315
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						397,
						406,
						415,
						396
					]
				}
			],
			"sources": [
				{
					"fileName": "Charts.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2493,
			"name": "\"EventChart\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/EventChart.tsx",
			"children": [
				{
					"id": 2494,
					"name": "EventChart",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders an event view that shows the supplied set of events along a time axis.\nThe events should be supplied as a Pond TimeSeries.\nThat series may contain regular TimeEvents, TimeRangeEvents\nor IndexedEvents."
					},
					"typeParameter": [
						{
							"id": 2517,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2502,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2503,
									"name": "new EventChart",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2504,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventChartProps",
												"id": 2589
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "EventChart",
										"id": 2494
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 54,
									"character": 22
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2584,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2501,
							"name": "hover",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 54,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Event",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Key"
									}
								]
							}
						},
						{
							"id": 2580,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2581,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2582,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2582
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EventChartProps",
												"id": 2589
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2585,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2586,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2587,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2588,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2583,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "EventChartState",
										"id": 2614
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2575,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2576,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2577,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2578,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2579,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2511,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2512,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Handle click will call the onSelectionChange callback if one is provided\nas a prop. It will be called with the event selected."
									},
									"parameters": [
										{
											"id": 2513,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										},
										{
											"id": 2514,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 87,
									"character": 15
								}
							]
						},
						{
							"id": 2509,
							"name": "onMouseLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2510,
									"name": "onMouseLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Handle mouse leave and calls onMouseLeave callback if one is provided"
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 76,
									"character": 16
								}
							]
						},
						{
							"id": 2505,
							"name": "onMouseOver",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2506,
									"name": "onMouseOver",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Continues a hover event on a specific bar of the bar chart."
									},
									"parameters": [
										{
											"id": 2507,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGRectElement"
													}
												]
											}
										},
										{
											"id": 2508,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 66,
									"character": 15
								}
							]
						},
						{
							"id": 2515,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2516,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 94,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2562,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2563,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2564,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "EventChartState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2565,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2566,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2567,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2568,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "EventChartState",
																						"id": 2614
																					}
																				]
																			}
																		},
																		{
																			"id": 2569,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "EventChartProps",
																				"id": 2589
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2570,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2571,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2572,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2573,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2574,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2542,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2543,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2548,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2549,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2550,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartProps",
														"id": 2589
													}
												]
											}
										},
										{
											"id": 2551,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2557,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2558,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2559,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartProps",
														"id": 2589
													}
												]
											}
										},
										{
											"id": 2560,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartState",
														"id": 2614
													}
												]
											}
										},
										{
											"id": 2561,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2527,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2528,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2529,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2530,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2518,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2519,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2535,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2536,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2537,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartProps",
														"id": 2589
													}
												]
											}
										},
										{
											"id": 2538,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartState",
														"id": 2614
													}
												]
											}
										},
										{
											"id": 2539,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2540,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2541,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2544,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2545,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2546,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartProps",
														"id": 2589
													}
												]
											}
										},
										{
											"id": 2547,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2525,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2526,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2552,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2553,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2554,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartProps",
														"id": 2589
													}
												]
											}
										},
										{
											"id": 2555,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartState",
														"id": 2614
													}
												]
											}
										},
										{
											"id": 2556,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2531,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2532,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2533,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartProps",
														"id": 2589
													}
												]
											}
										},
										{
											"id": 2534,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartState",
														"id": 2614
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2520,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2521,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2522,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartProps",
														"id": 2589
													}
												]
											}
										},
										{
											"id": 2523,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventChartState",
														"id": 2614
													}
												]
											}
										},
										{
											"id": 2524,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2495,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2500,
									"name": "hoverMarkerWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 51,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "5"
								},
								{
									"id": 2496,
									"name": "size",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 47,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "30"
								},
								{
									"id": 2497,
									"name": "spacing",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 48,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 2498,
									"name": "textOffsetX",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 49,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 2499,
									"name": "textOffsetY",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 50,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2500,
										2496,
										2497,
										2498,
										2499
									]
								}
							],
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 46,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2502
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2584,
								2501,
								2580,
								2585,
								2583
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2575,
								2511,
								2509,
								2505,
								2515,
								2562,
								2542,
								2548,
								2557,
								2527,
								2518,
								2535,
								2540,
								2544,
								2525,
								2552,
								2531,
								2520
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2495
							]
						}
					],
					"sources": [
						{
							"fileName": "EventChart.tsx",
							"line": 45,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "EventChartProps",
									"id": 2589
								},
								{
									"type": "reference",
									"name": "EventChartState",
									"id": 2614
								}
							]
						}
					]
				},
				{
					"id": 2589,
					"name": "EventChartProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "EventChart.tsx",
							"line": 18,
							"character": 27
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 406
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2590,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2598,
											"name": "hoverMarkerWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 23,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2592,
											"name": "label",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 20,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2593,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2594,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2595,
																			"name": "args",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isRest": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "EventChart.tsx",
																	"line": 20,
																	"character": 20
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 2610,
											"name": "onMouseLeave",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 29,
													"character": 16
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2611,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2612,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2613,
																	"name": "b",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "EventChart.tsx",
															"line": 29,
															"character": 18
														}
													]
												}
											}
										},
										{
											"id": 2606,
											"name": "onMouseOver",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 28,
													"character": 15
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2607,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2608,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2609,
																	"name": "e",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Event",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "Key"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "EventChart.tsx",
															"line": 28,
															"character": 17
														}
													]
												}
											}
										},
										{
											"id": 2602,
											"name": "onSelectionChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 27,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2603,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2604,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2605,
																	"name": "e",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Event",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "Key"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "EventChart.tsx",
															"line": 27,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 2591,
											"name": "series",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 19,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"name": "TimeSeries",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 2596,
											"name": "size",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 21,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2597,
											"name": "spacing",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 22,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2601,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 26,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "EventChartStyle",
												"id": 153
											}
										},
										{
											"id": 2599,
											"name": "textOffsetX",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 24,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2600,
											"name": "textOffsetY",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventChart.tsx",
													"line": 25,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2598,
												2592,
												2610,
												2606,
												2602,
												2591,
												2596,
												2597,
												2601,
												2599,
												2600
											]
										}
									],
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 18,
											"character": 42
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2614,
					"name": "EventChartState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "EventChart.tsx",
							"line": 35,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2615,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2616,
									"name": "hover",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventChart.tsx",
											"line": 36,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2616
									]
								}
							],
							"sources": [
								{
									"fileName": "EventChart.tsx",
									"line": 35,
									"character": 29
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2494
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2589,
						2614
					]
				}
			],
			"sources": [
				{
					"fileName": "EventChart.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2211,
			"name": "\"EventHandler\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/EventHandler.tsx",
			"children": [
				{
					"id": 2212,
					"name": "EventHandler",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Internal component which provides the top level event catcher for the charts.\nThis is a higher order component. It wraps a tree of SVG elements below it,\npassed in as this.props.children, and catches events that they do not handle.",
						"text": "The EventHandler is responsible for pan and zoom events as well as other click\nand hover actions.\n"
					},
					"typeParameter": [
						{
							"id": 2239,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2216,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2217,
									"name": "new EventHandler",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2218,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventHandlerProps",
												"id": 2311
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "EventHandler",
										"id": 2212
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 53,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2306,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2215,
							"name": "eventRect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 53,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "SVGRectElement"
							}
						},
						{
							"id": 2302,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2303,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2304,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2304
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EventHandlerProps",
												"id": 2311
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2307,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2308,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2309,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2310,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2305,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "EventHandlerState",
										"id": 2334
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2297,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2298,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2299,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2300,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2301,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2219,
							"name": "getOffsetMousePosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2220,
									"name": "getOffsetMousePosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2221,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 70,
									"character": 26
								}
							]
						},
						{
							"id": 2225,
							"name": "handleMouseDown",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2226,
									"name": "handleMouseDown",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2227,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 137,
									"character": 19
								}
							]
						},
						{
							"id": 2234,
							"name": "handleMouseMove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2235,
									"name": "handleMouseMove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2236,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 188,
									"character": 19
								}
							]
						},
						{
							"id": 2231,
							"name": "handleMouseOut",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2232,
									"name": "handleMouseOut",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2233,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 181,
									"character": 18
								}
							]
						},
						{
							"id": 2228,
							"name": "handleMouseUp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2229,
									"name": "handleMouseUp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2230,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 158,
									"character": 17
								}
							]
						},
						{
							"id": 2222,
							"name": "handleScrollWheel",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2223,
									"name": "handleScrollWheel",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2224,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "WheelEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 81,
									"character": 21
								}
							]
						},
						{
							"id": 2237,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2238,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 226,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2284,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2285,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2286,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "EventHandlerState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2287,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2288,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2289,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2290,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "EventHandlerState",
																						"id": 2334
																					}
																				]
																			}
																		},
																		{
																			"id": 2291,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "EventHandlerProps",
																				"id": 2311
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2292,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2293,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2294,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2295,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2296,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2264,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2265,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2270,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2271,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2272,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerProps",
														"id": 2311
													}
												]
											}
										},
										{
											"id": 2273,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2279,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2280,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2281,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerProps",
														"id": 2311
													}
												]
											}
										},
										{
											"id": 2282,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerState",
														"id": 2334
													}
												]
											}
										},
										{
											"id": 2283,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2249,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2250,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2251,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2252,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2240,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2241,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2257,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2258,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2259,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerProps",
														"id": 2311
													}
												]
											}
										},
										{
											"id": 2260,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerState",
														"id": 2334
													}
												]
											}
										},
										{
											"id": 2261,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2262,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2263,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2266,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2267,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2268,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerProps",
														"id": 2311
													}
												]
											}
										},
										{
											"id": 2269,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2247,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2248,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2274,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2275,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2276,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerProps",
														"id": 2311
													}
												]
											}
										},
										{
											"id": 2277,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerState",
														"id": 2334
													}
												]
											}
										},
										{
											"id": 2278,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2253,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2254,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2255,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerProps",
														"id": 2311
													}
												]
											}
										},
										{
											"id": 2256,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerState",
														"id": 2334
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2242,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2243,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2244,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerProps",
														"id": 2311
													}
												]
											}
										},
										{
											"id": 2245,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventHandlerState",
														"id": 2334
													}
												]
											}
										},
										{
											"id": 2246,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2213,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2214,
									"name": "enablePanZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 50,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2214
									]
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 49,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2216
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2306,
								2215,
								2302,
								2307,
								2305
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2297,
								2219,
								2225,
								2234,
								2231,
								2228,
								2222,
								2237,
								2284,
								2264,
								2270,
								2279,
								2249,
								2240,
								2257,
								2262,
								2266,
								2247,
								2274,
								2253,
								2242
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2213
							]
						}
					],
					"sources": [
						{
							"fileName": "EventHandler.tsx",
							"line": 48,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "EventHandlerProps",
									"id": 2311
								},
								{
									"type": "reference",
									"name": "EventHandlerState",
									"id": 2334
								}
							]
						}
					]
				},
				{
					"id": 2311,
					"name": "EventHandlerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "EventHandler.tsx",
							"line": 19,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2312,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2313,
									"name": "enablePanZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 20,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2316,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 23,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2319,
									"name": "maxTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 26,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 2317,
									"name": "minDuration",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 24,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2318,
									"name": "minTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 25,
											"character": 11
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 2331,
									"name": "onMouseClick",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 30,
											"character": 16
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2332,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2333,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "EventHandler.tsx",
													"line": 30,
													"character": 18
												}
											]
										}
									}
								},
								{
									"id": 2324,
									"name": "onMouseMove",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 28,
											"character": 15
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2325,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2326,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2327,
															"name": "d",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Date"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "EventHandler.tsx",
													"line": 28,
													"character": 17
												}
											]
										}
									}
								},
								{
									"id": 2328,
									"name": "onMouseOut",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 29,
											"character": 14
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2329,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2330,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "EventHandler.tsx",
													"line": 29,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 2320,
									"name": "onZoom",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 27,
											"character": 10
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2321,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2322,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2323,
															"name": "timerange",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "TimeRange"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "EventHandler.tsx",
													"line": 27,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 2314,
									"name": "scale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 21,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "ScaleTime",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 2315,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 22,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2313,
										2316,
										2319,
										2317,
										2318,
										2331,
										2324,
										2328,
										2320,
										2314,
										2315
									]
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 19,
									"character": 31
								}
							]
						}
					}
				},
				{
					"id": 2334,
					"name": "EventHandlerState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "EventHandler.tsx",
							"line": 33,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2335,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2337,
									"name": "initialPanBegin",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 35,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2338,
									"name": "initialPanEnd",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 36,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2339,
									"name": "initialPanPosition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 37,
											"character": 22
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 2336,
									"name": "isPanning",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "EventHandler.tsx",
											"line": 34,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2337,
										2338,
										2339,
										2336
									]
								}
							],
							"sources": [
								{
									"fileName": "EventHandler.tsx",
									"line": 33,
									"character": 31
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2212
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2311,
						2334
					]
				}
			],
			"sources": [
				{
					"fileName": "EventHandler.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1088,
			"name": "\"EventMarker\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/EventMarker.tsx",
			"children": [
				{
					"id": 1089,
					"name": "EventMarker",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a marker at a specific event on the chart.",
						"text": "`EventMarker`s are made out of several structural components:\n\n * the \"marker\" itself which appears at the time and value of the event.\n   This is a dot whose radius is defined by `markerRadius`, and\n   whose style is set with `style.marker`\n * the \"marker label\" which is a string that will be rendered next to\n   the marker. The label can be aligned with `markerAlign` and also\n   styled with `style.text`\n * the \"info box\" which is a box containing values that hovers at the\n   top of the chart. Optionally it can show the time above the box.\n   The values themselves are supplied as either array of label value\n   pairs (a `LabelValueList`) or a simple label (a string) using the\n   `info` prop. The info box can be styled with `style.box` and\n   `style.text`, sized with `infoWidth` and `infoHeight`, and the time\n   formatted with `infoTimeFormat`\n * the \"stem\" which is a connector between the marker and the\n   info box to visually link the two, can be styled with `style.stem`.\n\nCombining these attributes, Event markers fall into two flavors, either\nyou want to omit the infoBox and mark the event with a dot and optionally\na label, or you want to omit the label (and perhaps marker dot) and show\na flag style marker with the info box connected to the Event with the stem.\n\nIf the `Event` spans a time range, the marker will appear at\nthe center of the timerange represented by that event. You can, however,\noverride either the x or y position by a number of pixels.\n"
					},
					"typeParameter": [
						{
							"id": 1114,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1115,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1160,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1161,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1162,
									"name": "new EventMarker",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1163,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "EventMarkerProps",
												"id": 1245
											}
										},
										{
											"id": 1164,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "EventMarker",
										"id": 1089
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1187,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1183,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1184,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1185,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1185
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "EventMarkerProps",
												"id": 1245
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1188,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1189,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1190,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1191,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1186,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1178,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1179,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1180,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1181,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1182,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1112,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1113,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 378,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1107,
							"name": "renderMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1108,
									"name": "renderMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1109,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 1110,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1111,
											"name": "info",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 438
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 189,
									"character": 16
								}
							]
						},
						{
							"id": 1104,
							"name": "renderTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1105,
									"name": "renderTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1106,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 171,
									"character": 14
								}
							]
						},
						{
							"id": 1165,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1166,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1167,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1168,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1169,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1170,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1171,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 1172,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "EventMarkerProps",
																				"id": 1245
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1173,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1174,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1175,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1176,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1177,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1140,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1141,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1146,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1147,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1148,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventMarkerProps",
														"id": 1245
													}
												]
											}
										},
										{
											"id": 1149,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1155,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1156,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1157,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventMarkerProps",
														"id": 1245
													}
												]
											}
										},
										{
											"id": 1158,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1159,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1125,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1126,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1127,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1128,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1116,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1117,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1133,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1134,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1135,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventMarkerProps",
														"id": 1245
													}
												]
											}
										},
										{
											"id": 1136,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1137,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1138,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1139,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1142,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1143,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1144,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventMarkerProps",
														"id": 1245
													}
												]
											}
										},
										{
											"id": 1145,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1123,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1124,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1150,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1151,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1152,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventMarkerProps",
														"id": 1245
													}
												]
											}
										},
										{
											"id": 1153,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1154,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1129,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1130,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1131,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventMarkerProps",
														"id": 1245
													}
												]
											}
										},
										{
											"id": 1132,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1118,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1119,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1120,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventMarkerProps",
														"id": 1245
													}
												]
											}
										},
										{
											"id": 1121,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1122,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1090,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1092,
									"name": "column",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 163,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"value\""
								},
								{
									"id": 1101,
									"name": "markerLabelAlign",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 166,
											"character": 24
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "left"
									},
									"defaultValue": "\"left\""
								},
								{
									"id": 1100,
									"name": "markerRadius",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 165,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								},
								{
									"id": 1102,
									"name": "offsetX",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 167,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 1103,
									"name": "offsetY",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 168,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 1093,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 164,
											"character": 13
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1094,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1096,
															"name": "box",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 345,
																	"character": 7
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 1095,
															"name": "text",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 344,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1096,
																1095
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1097,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1099,
															"name": "marker",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 368,
																	"character": 10
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 1098,
															"name": "stem",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 367,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1099,
																1098
															]
														}
													]
												}
											}
										]
									},
									"defaultValue": " defaultStyle"
								},
								{
									"id": 1091,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 162,
											"character": 12
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "flag"
									},
									"defaultValue": "\"flag\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1092,
										1101,
										1100,
										1102,
										1103,
										1093,
										1091
									]
								}
							],
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 161,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1161
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1187,
								1183,
								1188,
								1186
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1178,
								1112,
								1107,
								1104,
								1165,
								1140,
								1146,
								1155,
								1125,
								1116,
								1133,
								1138,
								1142,
								1123,
								1150,
								1129,
								1118
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1090
							]
						}
					],
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 160,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "EventMarkerProps",
									"id": 1245
								}
							]
						}
					]
				},
				{
					"id": 1211,
					"name": "EventIndexProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 41,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1212,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1214,
									"name": "format",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 43,
											"character": 10
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1215,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1216,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1217,
																	"name": "date",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Date"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 43,
															"character": 12
														}
													]
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 1213,
									"name": "index",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 42,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "Index"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1214,
										1213
									]
								}
							],
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 41,
									"character": 22
								}
							]
						}
					}
				},
				{
					"id": 1245,
					"name": "EventMarkerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 113,
							"character": 28
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 406
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1246,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1248,
											"name": "column",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 115,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1247,
											"name": "event",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 114,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 1250,
											"name": "info",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 117,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 438
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1253,
											"name": "infoHeight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 120,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1254,
											"name": "infoTimeFormat",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 121,
													"character": 18
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1255,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1256,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1257,
																			"name": "date",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "EventMarker.tsx",
																	"line": 121,
																	"character": 20
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1252,
											"name": "infoWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 119,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1258,
											"name": "markerLabel",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 122,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1259,
											"name": "markerLabelAlign",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 123,
													"character": 20
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "left"
													},
													{
														"type": "stringLiteral",
														"value": "right"
													},
													{
														"type": "stringLiteral",
														"value": "top"
													},
													{
														"type": "stringLiteral",
														"value": "bottom"
													}
												]
											}
										},
										{
											"id": 1260,
											"name": "markerRadius",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 124,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1265,
											"name": "offsetX",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 126,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1266,
											"name": "offsetY",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 127,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1251,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 118,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "EventMarkerStyle",
												"id": 186
											}
										},
										{
											"id": 1249,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 116,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "stringLiteral",
														"value": "point"
													},
													{
														"type": "stringLiteral",
														"value": "flag"
													}
												]
											}
										},
										{
											"id": 1261,
											"name": "yValueFunc",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 125,
													"character": 14
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1262,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1263,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1264,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 125,
															"character": 16
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1248,
												1247,
												1250,
												1253,
												1254,
												1252,
												1258,
												1259,
												1260,
												1265,
												1266,
												1251,
												1249,
												1261
											]
										}
									],
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 113,
											"character": 43
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1197,
					"name": "EventTimeProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 31,
							"character": 19
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1198,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1200,
									"name": "format",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 33,
											"character": 10
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1201,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1202,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1203,
																	"name": "date",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Date"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 33,
															"character": 12
														}
													]
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 1199,
									"name": "time",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 32,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1200,
										1199
									]
								}
							],
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 31,
									"character": 21
								}
							]
						}
					}
				},
				{
					"id": 1204,
					"name": "EventTimeRangeProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 36,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1205,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1207,
									"name": "format",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 38,
											"character": 10
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1208,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1209,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1210,
																	"name": "date",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "Date"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 38,
															"character": 12
														}
													]
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 1206,
									"name": "timerange",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "EventMarker.tsx",
											"line": 37,
											"character": 13
										}
									],
									"type": {
										"type": "reference",
										"name": "TimeRange"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1207,
										1206
									]
								}
							],
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 36,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 1236,
					"name": "EventIndex",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Helper component to render a `index`'s begin time in the `format` provided"
					},
					"signatures": [
						{
							"id": 1237,
							"name": "EventIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Helper component to render a `index`'s begin time in the `format` provided"
							},
							"parameters": [
								{
									"id": 1238,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"originalName": "__0",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1239,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1241,
													"name": "format",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 90,
															"character": 63
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1242,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1243,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1244,
																					"name": "date",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "Date"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	]
																}
															}
														]
													},
													"defaultValue": "\"%m/%d/%y %X\""
												},
												{
													"id": 1240,
													"name": "index",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 90,
															"character": 55
														}
													],
													"type": {
														"type": "reference",
														"name": "Index"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1241,
														1240
													]
												}
											],
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 90,
													"character": 48
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 90,
							"character": 16
						}
					]
				},
				{
					"id": 1218,
					"name": "EventTime",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Helper component to render a `time` in the `format` provided"
					},
					"signatures": [
						{
							"id": 1219,
							"name": "EventTime",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Helper component to render a `time` in the `format` provided"
							},
							"parameters": [
								{
									"id": 1220,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"originalName": "__0",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1221,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1223,
													"name": "format",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 49,
															"character": 60
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1224,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1225,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1226,
																					"name": "date",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "Date"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	]
																}
															}
														]
													},
													"defaultValue": "\"%m/%d/%y %X\""
												},
												{
													"id": 1222,
													"name": "time",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 49,
															"character": 52
														}
													],
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1223,
														1222
													]
												}
											],
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 49,
													"character": 46
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 49,
							"character": 15
						}
					]
				},
				{
					"id": 1227,
					"name": "EventTimeRange",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Helper component to render a `timerange` in the `format` provided"
					},
					"signatures": [
						{
							"id": 1228,
							"name": "EventTimeRange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Helper component to render a `timerange` in the `format` provided"
							},
							"parameters": [
								{
									"id": 1229,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"originalName": "__0",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1230,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1232,
													"name": "format",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 67,
															"character": 75
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1233,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1234,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1235,
																					"name": "date",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "Date"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	]
																}
															}
														]
													},
													"defaultValue": "\"%m/%d/%y %X\""
												},
												{
													"id": 1231,
													"name": "timerange",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "EventMarker.tsx",
															"line": 67,
															"character": 67
														}
													],
													"type": {
														"type": "reference",
														"name": "TimeRange"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1232,
														1231
													]
												}
											],
											"sources": [
												{
													"fileName": "EventMarker.tsx",
													"line": 67,
													"character": 56
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Element"
							}
						}
					],
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 67,
							"character": 20
						}
					]
				},
				{
					"id": 1192,
					"name": "textStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 1195,
							"name": "fill",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 27,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"#bdbdbd\""
						},
						{
							"id": 1193,
							"name": "fontSize",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 25,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "11"
						},
						{
							"id": 1196,
							"name": "pointerEvents",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 28,
									"character": 17
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "none"
							},
							"defaultValue": "\"none\""
						},
						{
							"id": 1194,
							"name": "textAnchor",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "EventMarker.tsx",
									"line": 26,
									"character": 14
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "start"
							},
							"defaultValue": "\"start\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1195,
								1193,
								1196,
								1194
							]
						}
					],
					"sources": [
						{
							"fileName": "EventMarker.tsx",
							"line": 24,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1089
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1211,
						1245,
						1197,
						1204
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1236,
						1218,
						1227
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1192
					]
				}
			],
			"sources": [
				{
					"fileName": "EventMarker.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2714,
			"name": "\"LabelAxis\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/LabelAxis.tsx",
			"children": [
				{
					"id": 2715,
					"name": "LabelAxis",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a 'axis' that display a label for a data channel and a\nmax and average value:\n```\n     +----------------+-----+------- ...\n     | Traffic        | 120 |\n     | Max 100 Gbps   |     | Chart  ...\n     | Avg 26 Gbps    | 0   |\n     +----------------+-----+------- ...\n```"
					},
					"typeParameter": [
						{
							"id": 2725,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2726,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2771,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2772,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2773,
									"name": "new LabelAxis",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2774,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LabelAxisProps",
												"id": 2803
											}
										},
										{
											"id": 2775,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LabelAxis",
										"id": 2715
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2798,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2794,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2795,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2796,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2796
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "LabelAxisProps",
												"id": 2803
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2799,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2800,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2801,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2802,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2797,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2789,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2790,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2791,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2792,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2793,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2723,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2724,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "LabelAxis.tsx",
									"line": 80,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2721,
							"name": "renderAxis",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2722,
									"name": "renderAxis",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "LabelAxis.tsx",
									"line": 53,
									"character": 14
								}
							]
						},
						{
							"id": 2776,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2777,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2778,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2779,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2780,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2781,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2782,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 2783,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "LabelAxisProps",
																				"id": 2803
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2784,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2785,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2786,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2787,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2788,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2751,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2752,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2757,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2758,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2759,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelAxisProps",
														"id": 2803
													}
												]
											}
										},
										{
											"id": 2760,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2766,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2767,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2768,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelAxisProps",
														"id": 2803
													}
												]
											}
										},
										{
											"id": 2769,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2770,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2736,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2737,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2738,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2739,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2727,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2728,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2744,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2745,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2746,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelAxisProps",
														"id": 2803
													}
												]
											}
										},
										{
											"id": 2747,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2748,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2749,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2750,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2753,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2754,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2755,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelAxisProps",
														"id": 2803
													}
												]
											}
										},
										{
											"id": 2756,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2734,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2735,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2761,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2762,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2763,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelAxisProps",
														"id": 2803
													}
												]
											}
										},
										{
											"id": 2764,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2765,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2740,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2741,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2742,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelAxisProps",
														"id": 2803
													}
												]
											}
										},
										{
											"id": 2743,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2729,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2730,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2731,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelAxisProps",
														"id": 2803
													}
												]
											}
										},
										{
											"id": 2732,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2733,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2716,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2720,
									"name": "format",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 50,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".2f\""
								},
								{
									"id": 2717,
									"name": "hideScale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 47,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 2719,
									"name": "valWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 49,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "40"
								},
								{
									"id": 2718,
									"name": "values",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 48,
											"character": 14
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "undefined"
										}
									},
									"defaultValue": " []"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2720,
										2717,
										2719,
										2718
									]
								}
							],
							"sources": [
								{
									"fileName": "LabelAxis.tsx",
									"line": 46,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2772
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2798,
								2794,
								2799,
								2797
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2789,
								2723,
								2721,
								2776,
								2751,
								2757,
								2766,
								2736,
								2727,
								2744,
								2749,
								2753,
								2734,
								2761,
								2740,
								2729
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2716
							]
						}
					],
					"sources": [
						{
							"fileName": "LabelAxis.tsx",
							"line": 45,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "LabelAxisProps",
									"id": 2803
								}
							]
						}
					]
				},
				{
					"id": 2803,
					"name": "LabelAxisProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "LabelAxis.tsx",
							"line": 19,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2804,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2814,
									"name": "format",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 29,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2816,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 31,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2806,
									"name": "hideScale",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 21,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2805,
									"name": "label",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 20,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2812,
									"name": "max",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 27,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2813,
									"name": "min",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 28,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2811,
									"name": "valWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 26,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2807,
									"name": "values",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 22,
											"character": 10
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 2808,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 2809,
														"name": "label",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "LabelAxis.tsx",
																"line": 23,
																"character": 13
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 2810,
														"name": "value",
														"kind": 32,
														"kindString": "Variable",
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "LabelAxis.tsx",
																"line": 24,
																"character": 13
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "string"
																}
															]
														}
													}
												],
												"groups": [
													{
														"title": "Variables",
														"kind": 32,
														"children": [
															2809,
															2810
														]
													}
												],
												"sources": [
													{
														"fileName": "LabelAxis.tsx",
														"line": 22,
														"character": 11
													}
												]
											}
										}
									}
								},
								{
									"id": 2815,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "LabelAxis.tsx",
											"line": 30,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2814,
										2816,
										2806,
										2805,
										2812,
										2813,
										2811,
										2807,
										2815
									]
								}
							],
							"sources": [
								{
									"fileName": "LabelAxis.tsx",
									"line": 19,
									"character": 28
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2715
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2803
					]
				}
			],
			"sources": [
				{
					"fileName": "LabelAxis.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2817,
			"name": "\"Legend\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/Legend.tsx",
			"children": [
				{
					"id": 2818,
					"name": "Legend",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Legends are simple to define.",
						"text": "First specify the styles you want each item to have. This is either\nthe CSS that should be appied to rendered symbol. Or you can provide\na Styler object. See below for full styling details.\n\n```\nconst style = Styler([\n    {key: \"aud\", color: \"steelblue\", width: 1, dashed: true},\n    {key: \"euro\", color: \"#F68B24\", width: 2}\n]);\n```\n\nNext build a list of categories you want in the legend.\n\n```\nconst categories = [\n    {key: \"aust\", label: \"AUD\", value: \"1.52\", disabled: true},\n    {key: \"usa\", label: \"USD\", value: \"1.43\", disabled: false}\n];\n```\nFor each category to display you must provide a key, a label and\nif it should be displayed disabled or not.\n\nThen render the legend, with type either \"line\", \"swatch\" or \"dot\":\n\n```\n<Legend type=\"line\" style={style} categories={categories} />\n```\n\nOptionally you can also display a value below the label. This is\nuseful when hovering over another chart on the page, or to display\nthe current value of live data. You can see this defined in the\nabove categories.\n\nThe legend can also be supplied with callback functions which will\ntell you if the user has clicked or hovered over on one of the legend\nitems. You can use this to sync highlighting and selection to a\nchart.\n\n## Styling\n\nThere are three methods of styling a legend:\n - using a Styler object\n - using an object containing inline styles\n - using a function which returns an inline style\n\nA Styler object can be supplied directly to the `style` prop\nof the legend. This is the simplest approach, since you can\nusually just use the same Styler as you use for your chart.\n\nSupplying an object to the `style` prop gives you more control\nthan the Styler, since you can provide the actual CSS properties\nfor each element of the legend. The format for the object is:\n\n```\n{\n    columnName1: {\n      symbol: {\n        normal: {...styleSymbol},\n        highlighted: {...styleSymbol},\n        selected: {...styleSymbol},\n        muted: {...styleSymbol}\n      },\n      label: {\n        normal: {...labelStyle},\n        highlighted: {...labelStyle},\n        selected: {...labelStyle},\n        muted: {...labelStyle}\n      },\n      value: {\n        normal: {...valueStyle},\n        highlighted: {...valueStyle},\n        selected: {...valueStyle},\n        muted: {...valueStyle}\n      }\n    },\n    columnName2 : {\n        ...\n    },\n    ...\n }\n\n - symbolStyle is the CSS properties for the symbol, which\nis either a swatch, dot or line. For a line, you'd want to\nprovide the SVG <line> properties, for a swatch you'd provide\nthe SVG <rect> properties and for a dot the <ellipse> properties.\n - labelStyle is the main label for the legend item. It is a\n SVG <text> element, so you can control the font properties.\n - valueStyle is the optional value. As with the labelStyle you\n this is an SVG <text> element.\n\nFinally, you can provide a function to the `style` prop. This\nis similar to providing an object, except your function will\nbe called with the columnName and you should return the map\ncontaining symbol, label and value styles.\n"
					},
					"typeParameter": [
						{
							"id": 2865,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2866,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2911,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2912,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2913,
									"name": "new Legend",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2914,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendProps",
												"id": 2951
											}
										},
										{
											"id": 2915,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Legend",
										"id": 2818
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2938,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2934,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2935,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2936,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2936
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "LegendProps",
												"id": 2951
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2939,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2940,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2941,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2942,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2937,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2929,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2930,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2931,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2932,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2933,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2843,
							"name": "labelStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2844,
									"name": "labelStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2845,
											"name": "category",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendCategory",
												"id": 2943
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2846,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 2851,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 2852,
																"name": "mode",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"name": "CSSProperties"
														}
													},
													"children": [
														{
															"id": 2848,
															"name": "highlighted",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 39,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 2850,
															"name": "muted",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 41,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 2847,
															"name": "normal",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 38,
																	"character": 10
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 2849,
															"name": "selected",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 40,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2848,
																2850,
																2847,
																2849
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"name": "CSSProperties"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 215,
									"character": 14
								}
							]
						},
						{
							"id": 2826,
							"name": "providedStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2827,
									"name": "providedStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "For each category item we get the users style preference. This\ncan be supplied in a number of ways:\n * Typically you would get the legend style from a `Styler` instance;\n * Alternatively, you can pass in a style object which has your\n   category in it mapped to the associated style;\n * Finally, the provided style can also be a function which will\n   be passes a category and should return the associated style.\n   i.e. (category: string) => CategoryStyle"
									},
									"parameters": [
										{
											"id": 2828,
											"name": "category",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendCategory",
												"id": 2943
											}
										},
										{
											"id": 2829,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendItemType",
												"id": 457
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CategoryStyle",
										"id": 205
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 163,
									"character": 17
								}
							]
						},
						{
							"id": 2863,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2864,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 233,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2916,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2917,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2918,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2919,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2920,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2921,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2922,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 2923,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "LegendProps",
																				"id": 2951
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2924,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2925,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2926,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2927,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2928,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2830,
							"name": "styleMode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2831,
									"name": "styleMode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "For each category this function takes the current selected and highlighted item, along\nwith the disabled state of the item, and returns the mode it should be rendered in:\n * normal\n * selected\n * highlighted, or\n * muted"
									},
									"parameters": [
										{
											"id": 2832,
											"name": "category",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendCategory",
												"id": 2943
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "StyleMode",
										"id": 13
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 185,
									"character": 13
								}
							]
						},
						{
							"id": 2833,
							"name": "symbolStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2834,
									"name": "symbolStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2835,
											"name": "category",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendCategory",
												"id": 2943
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2836,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 2841,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 2842,
																"name": "mode",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"name": "CSSProperties"
														}
													},
													"children": [
														{
															"id": 2838,
															"name": "highlighted",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 39,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 2840,
															"name": "muted",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 41,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 2837,
															"name": "normal",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 38,
																	"character": 10
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 2839,
															"name": "selected",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 40,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2838,
																2840,
																2837,
																2839
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"name": "CSSProperties"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 206,
									"character": 15
								}
							]
						},
						{
							"id": 2853,
							"name": "valueStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2854,
									"name": "valueStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2855,
											"name": "category",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendCategory",
												"id": 2943
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2856,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 2861,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 2862,
																"name": "mode",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"name": "CSSProperties"
														}
													},
													"children": [
														{
															"id": 2858,
															"name": "highlighted",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 39,
																	"character": 15
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 2860,
															"name": "muted",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 41,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 2857,
															"name": "normal",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 38,
																	"character": 10
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 2859,
															"name": "selected",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 40,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2858,
																2860,
																2857,
																2859
															]
														}
													]
												}
											},
											{
												"type": "reference",
												"name": "CSSProperties"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 224,
									"character": 14
								}
							]
						},
						{
							"id": 2891,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2892,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2897,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2898,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2899,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendProps",
														"id": 2951
													}
												]
											}
										},
										{
											"id": 2900,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2906,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2907,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2908,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendProps",
														"id": 2951
													}
												]
											}
										},
										{
											"id": 2909,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2910,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2876,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2877,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2878,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2879,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2867,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2868,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2884,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2885,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2886,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendProps",
														"id": 2951
													}
												]
											}
										},
										{
											"id": 2887,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2888,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2889,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2890,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2893,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2894,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2895,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendProps",
														"id": 2951
													}
												]
											}
										},
										{
											"id": 2896,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2874,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2875,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2901,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2902,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2903,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendProps",
														"id": 2951
													}
												]
											}
										},
										{
											"id": 2904,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2905,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2880,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2881,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2882,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendProps",
														"id": 2951
													}
												]
											}
										},
										{
											"id": 2883,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2869,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2870,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2871,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendProps",
														"id": 2951
													}
												]
											}
										},
										{
											"id": 2872,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2873,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2819,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2823,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 148,
											"character": 13
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "left"
									},
									"defaultValue": "\"left\""
								},
								{
									"id": 2820,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 146,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2821,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {}
										}
									}
								},
								{
									"id": 2825,
									"name": "symbolHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 150,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "16"
								},
								{
									"id": 2824,
									"name": "symbolWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 149,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "16"
								},
								{
									"id": 2822,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 147,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "Swatch",
										"id": 458
									},
									"defaultValue": " LegendItemType.Swatch"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2823,
										2820,
										2825,
										2824,
										2822
									]
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 145,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2912
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2938,
								2934,
								2939,
								2937
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2929,
								2843,
								2826,
								2863,
								2916,
								2830,
								2833,
								2853,
								2891,
								2897,
								2906,
								2876,
								2867,
								2884,
								2889,
								2893,
								2874,
								2901,
								2880,
								2869
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2819
							]
						}
					],
					"sources": [
						{
							"fileName": "Legend.tsx",
							"line": 144,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "LegendProps",
									"id": 2951
								}
							]
						}
					]
				},
				{
					"id": 2943,
					"name": "LegendCategory",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Legend.tsx",
							"line": 24,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2944,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2948,
									"name": "disabled",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 28,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2945,
									"name": "key",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 25,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2946,
									"name": "label",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 26,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2950,
									"name": "labelStyle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 30,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 2949,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 29,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 2947,
									"name": "value",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 27,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2948,
										2945,
										2946,
										2950,
										2949,
										2947
									]
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 24,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 2951,
					"name": "LegendProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Legend.tsx",
							"line": 33,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2952,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2954,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 35,
											"character": 9
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "left"
											},
											{
												"type": "stringLiteral",
												"value": "right"
											}
										]
									}
								},
								{
									"id": 2959,
									"name": "categories",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 37,
											"character": 14
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "LegendCategory",
											"id": 2943
										}
									}
								},
								{
									"id": 2962,
									"name": "highlight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 40,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2968,
									"name": "onHighlightChange",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 43,
											"character": 21
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2969,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2970,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2971,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "Legend.tsx",
													"line": 43,
													"character": 23
												}
											]
										}
									}
								},
								{
									"id": 2964,
									"name": "onSelectionChange",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 42,
											"character": 21
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2965,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 2966,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2967,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "Legend.tsx",
													"line": 42,
													"character": 23
												}
											]
										}
									}
								},
								{
									"id": 2963,
									"name": "selection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 41,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2955,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 36,
											"character": 9
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "LegendStyle",
												"id": 212
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2956,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2957,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2958,
																	"name": "column",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "CategoryStyle",
																"id": 205
															}
														}
													],
													"sources": [
														{
															"fileName": "Legend.tsx",
															"line": 36,
															"character": 25
														}
													]
												}
											},
											{
												"type": "reference",
												"name": "Styler",
												"id": 581
											}
										]
									}
								},
								{
									"id": 2961,
									"name": "symbolHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 39,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2960,
									"name": "symbolWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 38,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2953,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "Legend.tsx",
											"line": 34,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "LegendItemType",
										"id": 457
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2954,
										2959,
										2962,
										2968,
										2964,
										2963,
										2955,
										2961,
										2960,
										2953
									]
								}
							],
							"sources": [
								{
									"fileName": "Legend.tsx",
									"line": 33,
									"character": 25
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2818
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2943,
						2951
					]
				}
			],
			"sources": [
				{
					"fileName": "Legend.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 456,
			"name": "\"LegendItem\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/LegendItem.tsx",
			"children": [
				{
					"id": 457,
					"name": "LegendItemType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 460,
							"name": "Dot",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 19,
									"character": 7
								}
							],
							"defaultValue": "\"DOT\""
						},
						{
							"id": 459,
							"name": "Line",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 18,
									"character": 8
								}
							],
							"defaultValue": "\"LINE\""
						},
						{
							"id": 458,
							"name": "Swatch",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 17,
									"character": 10
								}
							],
							"defaultValue": "\"SWATCH\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								460,
								459,
								458
							]
						}
					],
					"sources": [
						{
							"fileName": "LegendItem.tsx",
							"line": 16,
							"character": 26
						}
					]
				},
				{
					"id": 461,
					"name": "LegendItem",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 483,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 484,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 529,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 530,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 531,
									"name": "new LegendItem",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 532,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendItemProps",
												"id": 561
											}
										},
										{
											"id": 533,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LegendItem",
										"id": 461
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 556,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 552,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 553,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 554,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																554
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "LegendItemProps",
												"id": 561
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 557,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 558,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 559,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 560,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 555,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 547,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 548,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 549,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 550,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 551,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 462,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 463,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 464,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "HTMLDivElement"
													}
												]
											}
										},
										{
											"id": 465,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 37,
									"character": 15
								}
							]
						},
						{
							"id": 466,
							"name": "handleHover",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 467,
									"name": "handleHover",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 468,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "HTMLDivElement"
													}
												]
											}
										},
										{
											"id": 469,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 43,
									"character": 15
								}
							]
						},
						{
							"id": 470,
							"name": "handleHoverLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 471,
									"name": "handleHoverLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 48,
									"character": 20
								}
							]
						},
						{
							"id": 481,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 482,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 99,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 478,
							"name": "renderDot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 479,
									"name": "renderDot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 480,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementStyle",
												"id": 14
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 85,
									"character": 13
								}
							]
						},
						{
							"id": 472,
							"name": "renderLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 473,
									"name": "renderLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 474,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementStyle",
												"id": 14
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 53,
									"character": 14
								}
							]
						},
						{
							"id": 475,
							"name": "renderSwatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 476,
									"name": "renderSwatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 477,
											"name": "style",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ElementStyle",
												"id": 14
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 69,
									"character": 16
								}
							]
						},
						{
							"id": 534,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 535,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 536,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 537,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 538,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 539,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 540,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 541,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "LegendItemProps",
																				"id": 561
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 542,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 543,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 544,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 545,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 546,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 509,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 510,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 515,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 516,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 517,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendItemProps",
														"id": 561
													}
												]
											}
										},
										{
											"id": 518,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 524,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 525,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 526,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendItemProps",
														"id": 561
													}
												]
											}
										},
										{
											"id": 527,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 528,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 494,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 495,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 496,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 497,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 485,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 486,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 502,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 503,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 504,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendItemProps",
														"id": 561
													}
												]
											}
										},
										{
											"id": 505,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 506,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 507,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 508,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 511,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 512,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 513,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendItemProps",
														"id": 561
													}
												]
											}
										},
										{
											"id": 514,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 492,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 493,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 519,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 520,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 521,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendItemProps",
														"id": 561
													}
												]
											}
										},
										{
											"id": 522,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 523,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 498,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 499,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 500,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendItemProps",
														"id": 561
													}
												]
											}
										},
										{
											"id": 501,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 487,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 488,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 489,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LegendItemProps",
														"id": 561
													}
												]
											}
										},
										{
											"id": 490,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 491,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								530
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								556,
								552,
								557,
								555
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								547,
								462,
								466,
								470,
								481,
								478,
								472,
								475,
								534,
								509,
								515,
								524,
								494,
								485,
								502,
								507,
								511,
								492,
								519,
								498,
								487
							]
						}
					],
					"sources": [
						{
							"fileName": "LegendItem.tsx",
							"line": 36,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "LegendItemProps",
									"id": 561
								}
							]
						}
					]
				},
				{
					"id": 561,
					"name": "LegendItemProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "LegendItem.tsx",
							"line": 22,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 562,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 563,
									"name": "itemKey",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 23,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 565,
									"name": "label",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 25,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 570,
									"name": "labelStyle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 30,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 14
									}
								},
								{
									"id": 576,
									"name": "onHighlightChange",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 33,
											"character": 21
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 577,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 578,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 579,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "LegendItem.tsx",
													"line": 33,
													"character": 22
												}
											]
										}
									}
								},
								{
									"id": 572,
									"name": "onSelectionChange",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 32,
											"character": 21
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 573,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 574,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 575,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "LegendItem.tsx",
													"line": 32,
													"character": 22
												}
											]
										}
									}
								},
								{
									"id": 568,
									"name": "symbolHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 28,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 569,
									"name": "symbolStyle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 29,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 14
									}
								},
								{
									"id": 567,
									"name": "symbolWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 27,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 564,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 24,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "LegendItemType",
										"id": 457
									}
								},
								{
									"id": 566,
									"name": "value",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 26,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 571,
									"name": "valueStyle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LegendItem.tsx",
											"line": 31,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 14
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										563,
										565,
										570,
										576,
										572,
										568,
										569,
										567,
										564,
										566,
										571
									]
								}
							],
							"sources": [
								{
									"fileName": "LegendItem.tsx",
									"line": 22,
									"character": 29
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						457
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						461
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						561
					]
				}
			],
			"sources": [
				{
					"fileName": "LegendItem.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2972,
			"name": "\"LineChart\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/LineChart.tsx",
			"children": [
				{
					"id": 2973,
					"name": "LineChart",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `<LineChart>` component is able to display multiple columns of a TimeSeries\nas separate line charts.",
						"text": "The `<LineChart>` should be used within `<ChartContainer>` etc., as this will\nconstruct the horizontal and vertical axis, and manage other elements.\n\nHere is an example of two columns of a TimeSeries being plotted with the `<LineChart>`:\n\n```\n<ChartContainer timeRange={this.state.timerange} >\n<ChartRow height=\"200\">\n<YAxis id=\"y\" label=\"Price ($)\" min={0.5} max={1.5} format=\"$,.2f\" />\n<Charts>\n<LineChart\naxis=\"y\"\nbreakLine={false}\nseries={currencySeries}\ncolumns={[\"aud\", \"euro\"]}\nstyle={style}\ninterpolation=\"curveBasis\" />\n</Charts>\n</ChartRow>\n</ChartContainer>\n```\n"
					},
					"typeParameter": [
						{
							"id": 3009,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3054,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3055,
									"name": "new LineChart",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3056,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LineChartProps",
												"id": 3085
											}
										},
										{
											"id": 3057,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LineChart",
										"id": 2973
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3080,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3076,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3077,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3078,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3078
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "LineChartProps",
												"id": 3085
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3081,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3082,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3083,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3084,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3079,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "__type"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3071,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3072,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3073,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3074,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3075,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2987,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2988,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2989,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGPathElement"
													}
												]
											}
										},
										{
											"id": 2990,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 137,
									"character": 15
								}
							]
						},
						{
							"id": 2981,
							"name": "handleHover",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2982,
									"name": "handleHover",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2983,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGPathElement"
													}
												]
											}
										},
										{
											"id": 2984,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 125,
									"character": 15
								}
							]
						},
						{
							"id": 2985,
							"name": "handleHoverLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2986,
									"name": "handleHoverLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 131,
									"character": 20
								}
							]
						},
						{
							"id": 2994,
							"name": "pathStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2995,
									"name": "pathStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the style used for drawing the path"
									},
									"parameters": [
										{
											"id": 2996,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 165,
									"character": 13
								}
							]
						},
						{
							"id": 2991,
							"name": "providedPathStyleMap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2992,
									"name": "providedPathStyleMap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the supplied style as a LineChartStyle, given a provided\nLineChartStyle, Styler, or function, for the `column` provided."
									},
									"parameters": [
										{
											"id": 2993,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LineChartChannelStyle",
										"id": 22
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 148,
									"character": 24
								}
							]
						},
						{
							"id": 3007,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3008,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 272,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3004,
							"name": "renderLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3005,
									"name": "renderLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3006,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 224,
									"character": 14
								}
							]
						},
						{
							"id": 3002,
							"name": "renderLines",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3003,
									"name": "renderLines",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Element"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 220,
									"character": 15
								}
							]
						},
						{
							"id": 2997,
							"name": "renderPath",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2998,
									"name": "renderPath",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2999,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "PointData",
												"id": 3110
											}
										},
										{
											"id": 3000,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3001,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 190,
									"character": 14
								}
							]
						},
						{
							"id": 3058,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3059,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3060,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "__type"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3061,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3062,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3063,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3064,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "__type"
																					}
																				]
																			}
																		},
																		{
																			"id": 3065,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "LineChartProps",
																				"id": 3085
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3066,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3067,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3068,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3069,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3070,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2978,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2979,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2980,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LineChartProps",
												"id": 3085
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 87,
									"character": 25
								}
							]
						},
						{
							"id": 3034,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3035,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3040,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3041,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3042,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LineChartProps",
														"id": 3085
													}
												]
											}
										},
										{
											"id": 3043,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3049,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3050,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3051,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LineChartProps",
														"id": 3085
													}
												]
											}
										},
										{
											"id": 3052,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3053,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3019,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3020,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3021,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3022,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3010,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3011,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3027,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3028,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3029,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LineChartProps",
														"id": 3085
													}
												]
											}
										},
										{
											"id": 3030,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3031,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3032,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3033,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3036,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3037,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3038,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LineChartProps",
														"id": 3085
													}
												]
											}
										},
										{
											"id": 3039,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3017,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3018,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3044,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3045,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3046,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LineChartProps",
														"id": 3085
													}
												]
											}
										},
										{
											"id": 3047,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3048,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3023,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3024,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3025,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LineChartProps",
														"id": 3085
													}
												]
											}
										},
										{
											"id": 3026,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3012,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3013,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3014,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LineChartProps",
														"id": 3085
													}
												]
											}
										},
										{
											"id": 3015,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3016,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2974,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2977,
									"name": "breakLine",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LineChart.tsx",
											"line": 84,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 2975,
									"name": "columns",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LineChart.tsx",
											"line": 82,
											"character": 15
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"defaultValue": " [\"value\"]"
								},
								{
									"id": 2976,
									"name": "interpolation",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "LineChart.tsx",
											"line": 83,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"name": "curveLinear",
										"id": 430
									},
									"defaultValue": " CurveInterpolation.curveLinear"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2977,
										2975,
										2976
									]
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 81,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3054
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3080,
								3076,
								3081,
								3079
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3071,
								2987,
								2981,
								2985,
								2994,
								2991,
								3007,
								3004,
								3002,
								2997,
								3058,
								2978,
								3034,
								3040,
								3049,
								3019,
								3010,
								3027,
								3032,
								3036,
								3017,
								3044,
								3023,
								3012
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2974
							]
						}
					],
					"sources": [
						{
							"fileName": "LineChart.tsx",
							"line": 80,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "LineChartProps",
									"id": 3085
								},
								{
									"type": "reference",
									"name": "__type"
								}
							]
						}
					]
				},
				{
					"id": 3085,
					"name": "LineChartProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "LineChart.tsx",
							"line": 28,
							"character": 26
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 406
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3086,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3088,
											"name": "axis",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 30,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3095,
											"name": "breakLine",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 34,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3089,
											"name": "columns",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 31,
													"character": 11
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 3101,
											"name": "highlight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 37,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3094,
											"name": "interpolation",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 33,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "CurveInterpolation",
												"id": 422
											}
										},
										{
											"id": 3102,
											"name": "onHighlightChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 38,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3103,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3104,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 3105,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "LineChart.tsx",
															"line": 38,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 3097,
											"name": "onSelectionChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 36,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3098,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3099,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 3100,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "LineChart.tsx",
															"line": 36,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 3096,
											"name": "selection",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 35,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3087,
											"name": "series",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 29,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3090,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "LineChart.tsx",
													"line": 32,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "LineChartStyle",
														"id": 27
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3091,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3092,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3093,
																			"name": "column",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"name": "LineChartChannelStyle",
																		"id": 22
																	}
																}
															],
															"sources": [
																{
																	"fileName": "LineChart.tsx",
																	"line": 32,
																	"character": 28
																}
															]
														}
													},
													{
														"type": "reference",
														"name": "Styler",
														"id": 581
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3088,
												3095,
												3089,
												3101,
												3094,
												3102,
												3097,
												3096,
												3087,
												3090
											]
										}
									],
									"sources": [
										{
											"fileName": "LineChart.tsx",
											"line": 28,
											"character": 41
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3106,
					"name": "Point",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "LineChart.tsx",
							"line": 44,
							"character": 17
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3107,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3108,
									"name": "x",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LineChart.tsx",
											"line": 45,
											"character": 5
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 3109,
									"name": "y",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "LineChart.tsx",
											"line": 46,
											"character": 5
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3108,
										3109
									]
								}
							],
							"sources": [
								{
									"fileName": "LineChart.tsx",
									"line": 44,
									"character": 19
								}
							]
						}
					}
				},
				{
					"id": 3110,
					"name": "PointData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "LineChart.tsx",
							"line": 52,
							"character": 21
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Point",
							"id": 3106
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2973
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3085,
						3106,
						3110
					]
				}
			],
			"sources": [
				{
					"fileName": "LineChart.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3111,
			"name": "\"Resizable\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/Resizable.tsx",
			"children": [
				{
					"id": 3112,
					"name": "Resizable",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This takes a single child and inserts a prop 'width' on it that is the\ncurrent width of the this container. This is handy if you want to surround\na chart or other svg diagram and have this drive the chart width."
					},
					"typeParameter": [
						{
							"id": 3125,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3114,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3115,
									"name": "new Resizable",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3116,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ResizableProps",
												"id": 3197
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Resizable",
										"id": 3112
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 28,
									"character": 27
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3113,
							"name": "container",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 28,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLElement"
							}
						},
						{
							"id": 3192,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3188,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3189,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3190,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3190
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "__type"
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3193,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3194,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3195,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3196,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3191,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ResizableState",
										"id": 3199
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3117,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3118,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 35,
									"character": 21
								}
							]
						},
						{
							"id": 3119,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3120,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 40,
									"character": 24
								}
							]
						},
						{
							"id": 3183,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3184,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3185,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3186,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3187,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3121,
							"name": "handleResize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3122,
									"name": "handleResize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 44,
									"character": 16
								}
							]
						},
						{
							"id": 3123,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3124,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 52,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3170,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3171,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3172,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"name": "ResizableState"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3173,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3174,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3175,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3176,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "ResizableState",
																						"id": 3199
																					}
																				]
																			}
																		},
																		{
																			"id": 3177,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "__type"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3178,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3179,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3180,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3181,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3182,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3150,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3151,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3156,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3157,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3158,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3159,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3165,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3166,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3167,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3168,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableState",
														"id": 3199
													}
												]
											}
										},
										{
											"id": 3169,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3135,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3136,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3137,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3138,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3126,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3127,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3143,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3144,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3145,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3146,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableState",
														"id": 3199
													}
												]
											}
										},
										{
											"id": 3147,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3148,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3149,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3152,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3153,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3154,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3155,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3133,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3134,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3160,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3161,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3162,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3163,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableState",
														"id": 3199
													}
												]
											}
										},
										{
											"id": 3164,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3139,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3140,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3141,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3142,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableState",
														"id": 3199
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3128,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3129,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3130,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "__type"
													}
												]
											}
										},
										{
											"id": 3131,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ResizableState",
														"id": 3199
													}
												]
											}
										},
										{
											"id": 3132,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3114
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3113,
								3192,
								3188,
								3193,
								3191
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3117,
								3119,
								3183,
								3121,
								3123,
								3170,
								3150,
								3156,
								3165,
								3135,
								3126,
								3143,
								3148,
								3152,
								3133,
								3160,
								3139,
								3128
							]
						}
					],
					"sources": [
						{
							"fileName": "Resizable.tsx",
							"line": 27,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "__type"
								},
								{
									"type": "reference",
									"name": "ResizableState",
									"id": 3199
								}
							]
						}
					]
				},
				{
					"id": 3197,
					"name": "ResizableProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Resizable.tsx",
							"line": 13,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3198,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 13,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 3199,
					"name": "ResizableState",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isPrivate": true,
						"isExported": true
					},
					"comment": {},
					"sources": [
						{
							"fileName": "Resizable.tsx",
							"line": 18,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3200,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3201,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Resizable.tsx",
											"line": 19,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3201
									]
								}
							],
							"sources": [
								{
									"fileName": "Resizable.tsx",
									"line": 18,
									"character": 28
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3112
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3197,
						3199
					]
				}
			],
			"sources": [
				{
					"fileName": "Resizable.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3202,
			"name": "\"ScatterChart\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/ScatterChart.tsx",
			"children": [
				{
					"id": 3203,
					"name": "ScatterChart",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The `<ScatterChart >` widget is able to display multiple columns of a series\nscattered across a time axis.",
						"text": "The ScatterChart should be used within `<ChartContainer>` etc.,\nas this will construct the horizontal and vertical axis, and\nmanage other elements. As with other charts, this lets them be stacked or\noverlaid on top of each other.\n\nA custom info overlay lets you hover over the data and examine points. Points\ncan be selected or highlighted.\n\n```\n<ChartContainer timeRange={series.timerange()}>\n    <ChartRow height=\"150\">\n        <YAxis id=\"wind\" label=\"Wind gust (mph)\" labelOffset={-5}\n               min={0} max={series.max()} width=\"100\" type=\"linear\" format=\",.1f\"/>\n        <Charts>\n            <ScatterChart\n              axis=\"wind\"\n              series={series}\n              style={{color: \"steelblue\", opacity: 0.5}} />\n        </Charts>\n    </ChartRow>\n</ChartContainer>\n```\n\n### Styling\n\nA scatter chart supports per-column or per-event styling. Styles can be set for\neach of the four states that are possible for each event: normal, highlighted,\nselected or muted. To style per-column, supply an object. For per-event styling\nsupply a function: `(event, column) => {}` The functon will return a style object.\nSee the `style` prop in the API documentation for more information.\n\nSeparately the size of the dots can be controlled with the `radius` prop. This\ncan either be a fixed value (e.g. 2.0), or a function. If a function is supplied\nit will be called as `(event, column) => {}` and should return the size.\n\nThe hover info for each point is also able to be styled using the info style.\nThis enables you to control the drawing of the box and connecting lines. Using\nthe `infoWidth` and `infoHeight` props you can control the size of the box, which\nis fixed.\n"
					},
					"typeParameter": [
						{
							"id": 3245,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3246,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3291,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3217,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3218,
									"name": "new ScatterChart",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3219,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScatterChartProps",
												"id": 3323
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ScatterChart",
										"id": 3203
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 109,
									"character": 30
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3314,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3216,
							"name": "eventrect",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 109,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "SVGRectElement"
							}
						},
						{
							"id": 3310,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3311,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3312,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3312
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ScatterChartProps",
												"id": 3323
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3315,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3316,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3317,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3318,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3313,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3305,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3306,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3307,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3308,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3309,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3220,
							"name": "getOffsetMousePosition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3221,
									"name": "getOffsetMousePosition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3222,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 118,
									"character": 26
								}
							]
						},
						{
							"id": 3223,
							"name": "handleClick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3224,
									"name": "handleClick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3225,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGCircleElement"
													}
												]
											}
										},
										{
											"id": 3226,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 3227,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 129,
									"character": 15
								}
							]
						},
						{
							"id": 3228,
							"name": "handleHover",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3229,
									"name": "handleHover",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3230,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MouseEvent",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SVGElement"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 136,
									"character": 15
								}
							]
						},
						{
							"id": 3231,
							"name": "handleHoverLeave",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3232,
									"name": "handleHoverLeave",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 159,
									"character": 20
								}
							]
						},
						{
							"id": 3233,
							"name": "providedStyleMap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3234,
									"name": "providedStyleMap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3235,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3236,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ScatterChartChannelStyle",
										"id": 130
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 165,
									"character": 20
								}
							]
						},
						{
							"id": 3243,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3244,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 284,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3241,
							"name": "renderScatter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3242,
									"name": "renderScatter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 215,
									"character": 17
								}
							]
						},
						{
							"id": 3292,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3293,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3294,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3295,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3296,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3297,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3298,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 3299,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ScatterChartProps",
																				"id": 3323
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3300,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3301,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3302,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3303,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3304,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3237,
							"name": "style",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3238,
									"name": "style",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the style used for drawing the path"
									},
									"parameters": [
										{
											"id": 3239,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3240,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 181,
									"character": 9
								}
							]
						},
						{
							"id": 3271,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3272,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3277,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3278,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3279,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ScatterChartProps",
														"id": 3323
													}
												]
											}
										},
										{
											"id": 3280,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3286,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3287,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3288,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ScatterChartProps",
														"id": 3323
													}
												]
											}
										},
										{
											"id": 3289,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3290,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3256,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3257,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3258,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3259,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3247,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3248,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3264,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3265,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3266,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ScatterChartProps",
														"id": 3323
													}
												]
											}
										},
										{
											"id": 3267,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3268,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3269,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3270,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3273,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3274,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3275,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ScatterChartProps",
														"id": 3323
													}
												]
											}
										},
										{
											"id": 3276,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3254,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3255,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3281,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3282,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3283,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ScatterChartProps",
														"id": 3323
													}
												]
											}
										},
										{
											"id": 3284,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3285,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3260,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3261,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3262,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ScatterChartProps",
														"id": 3323
													}
												]
											}
										},
										{
											"id": 3263,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3249,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3250,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3251,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ScatterChartProps",
														"id": 3323
													}
												]
											}
										},
										{
											"id": 3252,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3253,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 3204,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 3205,
									"name": "columns",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 101,
											"character": 15
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"defaultValue": " [\"value\"]"
								},
								{
									"id": 3215,
									"name": "infoHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 105,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "30"
								},
								{
									"id": 3207,
									"name": "infoStyle",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 103,
											"character": 17
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3208,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3210,
															"name": "box",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 345,
																	"character": 7
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 3209,
															"name": "text",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 344,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3210,
																3209
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3211,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3213,
															"name": "marker",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 368,
																	"character": 10
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 3212,
															"name": "stem",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 367,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3213,
																3212
															]
														}
													]
												}
											}
										]
									},
									"defaultValue": " defaultEventMarkerStyle"
								},
								{
									"id": 3214,
									"name": "infoWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 104,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "90"
								},
								{
									"id": 3206,
									"name": "radius",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 102,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3205,
										3215,
										3207,
										3214,
										3206
									]
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 100,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3217
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3314,
								3216,
								3310,
								3315,
								3313
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3305,
								3220,
								3223,
								3228,
								3231,
								3233,
								3243,
								3241,
								3292,
								3237,
								3271,
								3277,
								3286,
								3256,
								3247,
								3264,
								3269,
								3273,
								3254,
								3281,
								3260,
								3249
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								3204
							]
						}
					],
					"sources": [
						{
							"fileName": "ScatterChart.tsx",
							"line": 99,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ScatterChartProps",
									"id": 3323
								}
							]
						}
					]
				},
				{
					"id": 3319,
					"name": "EventColumnPair",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ScatterChart.tsx",
							"line": 30,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3320,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3322,
									"name": "column",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 32,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3321,
									"name": "event",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 31,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "Event",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Key"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3322,
										3321
									]
								}
							],
							"sources": [
								{
									"fileName": "ScatterChart.tsx",
									"line": 30,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 3323,
					"name": "ScatterChartProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ScatterChart.tsx",
							"line": 35,
							"character": 29
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 406
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3324,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3327,
											"name": "axis",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3326,
											"name": "columns",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 37,
													"character": 11
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 3350,
											"name": "highlight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 51,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "EventColumnPair",
												"id": 3319
											}
										},
										{
											"id": 3337,
											"name": "info",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 44,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 438
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 3340,
											"name": "infoHeight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 47,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3338,
											"name": "infoStyle",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 45,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "EventMarkerStyle",
												"id": 186
											}
										},
										{
											"id": 3341,
											"name": "infoTimeFormat",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 48,
													"character": 18
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3342,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3343,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3344,
																			"name": "date",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Date"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "ScatterChart.tsx",
																	"line": 48,
																	"character": 20
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 3339,
											"name": "infoWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 46,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3351,
											"name": "onMouseNear",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 52,
													"character": 15
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3352,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3353,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 3354,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "ScatterChart.tsx",
															"line": 52,
															"character": 17
														}
													]
												}
											}
										},
										{
											"id": 3346,
											"name": "onSelectionChange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 50,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3347,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3348,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 3349,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "ScatterChart.tsx",
															"line": 50,
															"character": 23
														}
													]
												}
											}
										},
										{
											"id": 3328,
											"name": "radius",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 39,
													"character": 10
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3329,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3330,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3331,
																			"name": "args",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isRest": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"sources": [
																{
																	"fileName": "ScatterChart.tsx",
																	"line": 39,
																	"character": 21
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										},
										{
											"id": 3345,
											"name": "selected",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 49,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "EventColumnPair",
												"id": 3319
											}
										},
										{
											"id": 3325,
											"name": "series",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 36,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3332,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "ScatterChart.tsx",
													"line": 40,
													"character": 9
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "ScatterChartStyle",
														"id": 135
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3333,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3334,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3335,
																			"name": "channel",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 3336,
																			"name": "event",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "reference",
																				"name": "Event",
																				"typeArguments": [
																					{
																						"type": "reference",
																						"name": "Key"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"name": "ScatterChartChannelStyle",
																		"id": 130
																	}
																}
															],
															"sources": [
																{
																	"fileName": "ScatterChart.tsx",
																	"line": 42,
																	"character": 9
																}
															]
														}
													},
													{
														"type": "reference",
														"name": "Styler",
														"id": 581
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3327,
												3326,
												3350,
												3337,
												3340,
												3338,
												3341,
												3339,
												3351,
												3346,
												3328,
												3345,
												3325,
												3332
											]
										}
									],
									"sources": [
										{
											"fileName": "ScatterChart.tsx",
											"line": 35,
											"character": 44
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3203
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3319,
						3323
					]
				}
			],
			"sources": [
				{
					"fileName": "ScatterChart.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1830,
			"name": "\"TimeMarker\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/TimeMarker.tsx",
			"children": [
				{
					"id": 1831,
					"name": "TimeMarker",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An overlay marker that marks a specific `time` with a line, time label\nand info box containing data"
					},
					"typeParameter": [
						{
							"id": 1855,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1856,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1901,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1902,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1903,
									"name": "new TimeMarker",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1904,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TimeMarkerProps",
												"id": 1938
											}
										},
										{
											"id": 1905,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TimeMarker",
										"id": 1831
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1928,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1924,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1925,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1926,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1926
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TimeMarkerProps",
												"id": 1938
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1929,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1930,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1931,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1932,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1927,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1919,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1920,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1921,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1922,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1923,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1853,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1854,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimeMarker.tsx",
									"line": 169,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1850,
							"name": "renderInfoBox",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1851,
									"name": "renderInfoBox",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1852,
											"name": "posx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimeMarker.tsx",
									"line": 131,
									"character": 17
								}
							]
						},
						{
							"id": 1844,
							"name": "renderLine",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1845,
									"name": "renderLine",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1846,
											"name": "posx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimeMarker.tsx",
									"line": 98,
									"character": 14
								}
							]
						},
						{
							"id": 1847,
							"name": "renderTimeMarker",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1848,
									"name": "renderTimeMarker",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1849,
											"name": "d",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimeMarker.tsx",
									"line": 103,
									"character": 20
								}
							]
						},
						{
							"id": 1906,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1907,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1908,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1909,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1910,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1911,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1912,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 1913,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "TimeMarkerProps",
																				"id": 1938
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1914,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1915,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1916,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1917,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1918,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1881,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1882,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1887,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1888,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1889,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerProps",
														"id": 1938
													}
												]
											}
										},
										{
											"id": 1890,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1896,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1897,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1898,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerProps",
														"id": 1938
													}
												]
											}
										},
										{
											"id": 1899,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1900,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1866,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1867,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1868,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1869,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1857,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1858,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1874,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1875,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1876,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerProps",
														"id": 1938
													}
												]
											}
										},
										{
											"id": 1877,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1878,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1879,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1880,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1883,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1884,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1885,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerProps",
														"id": 1938
													}
												]
											}
										},
										{
											"id": 1886,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1864,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1865,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1891,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1892,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1893,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerProps",
														"id": 1938
													}
												]
											}
										},
										{
											"id": 1894,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1895,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1870,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1871,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1872,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerProps",
														"id": 1938
													}
												]
											}
										},
										{
											"id": 1873,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1859,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1860,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1861,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerProps",
														"id": 1938
													}
												]
											}
										},
										{
											"id": 1862,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1863,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1832,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1843,
									"name": "infoHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 95,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "25"
								},
								{
									"id": 1842,
									"name": "infoWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 94,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "90"
								},
								{
									"id": 1833,
									"name": "showInfoBox",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 90,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 1834,
									"name": "showLine",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 91,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 1835,
									"name": "showTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 92,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "true"
									},
									"defaultValue": "true"
								},
								{
									"id": 1836,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 93,
											"character": 13
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1837,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1839,
															"name": "box",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 345,
																	"character": 7
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														},
														{
															"id": 1838,
															"name": "text",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 344,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1839,
																1838
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1840,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1841,
															"name": "line",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "style.ts",
																	"line": 388,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"name": "CSSProperties"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1841
															]
														}
													]
												}
											}
										]
									},
									"defaultValue": " defaultTimeMarkerStyle"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1843,
										1842,
										1833,
										1834,
										1835,
										1836
									]
								}
							],
							"sources": [
								{
									"fileName": "TimeMarker.tsx",
									"line": 89,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1902
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1928,
								1924,
								1929,
								1927
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1919,
								1853,
								1850,
								1844,
								1847,
								1906,
								1881,
								1887,
								1896,
								1866,
								1857,
								1874,
								1879,
								1883,
								1864,
								1891,
								1870,
								1859
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1832
							]
						}
					],
					"sources": [
						{
							"fileName": "TimeMarker.tsx",
							"line": 88,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "TimeMarkerProps",
									"id": 1938
								}
							]
						}
					]
				},
				{
					"id": 1933,
					"name": "StringPair",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "TimeMarker.tsx",
							"line": 25,
							"character": 22
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1934,
					"name": "TimeFormatCallback",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "TimeMarker.tsx",
							"line": 27,
							"character": 30
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1935,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1936,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1937,
											"name": "d",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Date"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimeMarker.tsx",
									"line": 27,
									"character": 32
								}
							]
						}
					}
				},
				{
					"id": 1938,
					"name": "TimeMarkerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "TimeMarker.tsx",
							"line": 29,
							"character": 27
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 406
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1939,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1943,
											"name": "info",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The values to show in the info box. This is either an array of objects,\nwith each object specifying the label and value to be shown in the info\nbox, or a simple string label"
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 50,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 438
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1944,
											"name": "infoHeight",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The height of the hover info box"
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 55,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1945,
											"name": "infoWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The width of the hover info box"
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 60,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1946,
											"name": "showInfoBox",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Display the info box at all. If you don't have any values to show and\njust want a line and a time (for example), you can set this to false."
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 66,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1947,
											"name": "showLine",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "You can show the info box without the corresponding time marker. Why\nwould you do this? You might use the `ChartContainer` tracker mechanism\nto show the line across multiple rows, then add a `TimeMarker` selectively\nto each row."
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 74,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1948,
											"name": "showTime",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "You can hide the time displayed above the info box. You might do this\nbecause it is already displayed elsewhere in your UI. Or maybe you\njust don't like it."
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 81,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1941,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The style of the info box and connecting lines"
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 38,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "Partial",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeMarkerStyle",
														"id": 197
													}
												]
											}
										},
										{
											"id": 1940,
											"name": "time",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"comment": {
												"shortText": "A Javascript Date object to position the marker"
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 33,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"name": "Date"
											}
										},
										{
											"id": 1942,
											"name": "timeFormat",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The format to display the time of the marker in"
											},
											"sources": [
												{
													"fileName": "TimeMarker.tsx",
													"line": 43,
													"character": 14
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "TimeFormatCallback",
														"id": 1934
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1943,
												1944,
												1945,
												1946,
												1947,
												1948,
												1941,
												1940,
												1942
											]
										}
									],
									"sources": [
										{
											"fileName": "TimeMarker.tsx",
											"line": 29,
											"character": 42
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1831
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1933,
						1934,
						1938
					]
				}
			],
			"sources": [
				{
					"fileName": "TimeMarker.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3355,
			"name": "\"TimeRangeMarker\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/TimeRangeMarker.tsx",
			"children": [
				{
					"id": 3356,
					"name": "TimeRangeMarker",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a band with extents defined by the supplied `TimeRange`. This\nis a super simple component right now which just renders a simple\nrectangle, in the style of the prop `style` across the timerange\nspecified. However, this is useful for highlighting a timerange to\ncorrespond with another part of the your UI.",
						"text": "See also the Brush component for a `TimeRange` marker that you can\nresize interactively.\n"
					},
					"typeParameter": [
						{
							"id": 3364,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3365,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3410,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3411,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3412,
									"name": "new TimeRangeMarker",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3413,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TimeRangeMarkerProps",
												"id": 3442
											}
										},
										{
											"id": 3414,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TimeRangeMarker",
										"id": 3356
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3437,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3433,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3434,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3435,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3435
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TimeRangeMarkerProps",
												"id": 3442
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3438,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3439,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3440,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3441,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3436,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3428,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3429,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3430,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3431,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3432,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3362,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3363,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimeRangeMarker.tsx",
									"line": 73,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3360,
							"name": "renderBand",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3361,
									"name": "renderBand",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"sources": [
								{
									"fileName": "TimeRangeMarker.tsx",
									"line": 38,
									"character": 14
								}
							]
						},
						{
							"id": 3415,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3416,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3417,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3418,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3419,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3420,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3421,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 3422,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "TimeRangeMarkerProps",
																				"id": 3442
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3423,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3424,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3425,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3426,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3427,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3390,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3391,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3396,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3397,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3398,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeRangeMarkerProps",
														"id": 3442
													}
												]
											}
										},
										{
											"id": 3399,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3405,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3406,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3407,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeRangeMarkerProps",
														"id": 3442
													}
												]
											}
										},
										{
											"id": 3408,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3409,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3375,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3376,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3377,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3378,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3366,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3367,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3383,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3384,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3385,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeRangeMarkerProps",
														"id": 3442
													}
												]
											}
										},
										{
											"id": 3386,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3387,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3388,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3389,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3392,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3393,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3394,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeRangeMarkerProps",
														"id": 3442
													}
												]
											}
										},
										{
											"id": 3395,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3373,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3374,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3400,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3401,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3402,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeRangeMarkerProps",
														"id": 3442
													}
												]
											}
										},
										{
											"id": 3403,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3404,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3379,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3380,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3381,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeRangeMarkerProps",
														"id": 3442
													}
												]
											}
										},
										{
											"id": 3382,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3368,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3369,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3370,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "TimeRangeMarkerProps",
														"id": 3442
													}
												]
											}
										},
										{
											"id": 3371,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3372,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 3357,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 3358,
									"name": "style",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 3359,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "TimeRangeMarker.tsx",
													"line": 35,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"rgba(70, 130, 180, 0.25);\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3359
											]
										}
									],
									"sources": [
										{
											"fileName": "TimeRangeMarker.tsx",
											"line": 35,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										3358
									]
								}
							],
							"sources": [
								{
									"fileName": "TimeRangeMarker.tsx",
									"line": 34,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3411
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3437,
								3433,
								3438,
								3436
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3428,
								3362,
								3360,
								3415,
								3390,
								3396,
								3405,
								3375,
								3366,
								3383,
								3388,
								3392,
								3373,
								3400,
								3379,
								3368
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								3357
							]
						}
					],
					"sources": [
						{
							"fileName": "TimeRangeMarker.tsx",
							"line": 33,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "TimeRangeMarkerProps",
									"id": 3442
								}
							]
						}
					]
				},
				{
					"id": 3442,
					"name": "TimeRangeMarkerProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "TimeRangeMarker.tsx",
							"line": 15,
							"character": 32
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ChartProps",
								"id": 406
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3443,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3451,
											"name": "height",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "TimeRangeMarker.tsx",
													"line": 20,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3445,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "TimeRangeMarker.tsx",
													"line": 17,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "CSSProperties"
											}
										},
										{
											"id": 3446,
											"name": "timeScale",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "TimeRangeMarker.tsx",
													"line": 18,
													"character": 13
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3447,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3448,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 3449,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "TimeRangeMarker.tsx",
															"line": 18,
															"character": 14
														}
													]
												}
											}
										},
										{
											"id": 3444,
											"name": "timerange",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "TimeRangeMarker.tsx",
													"line": 16,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "TimeRange"
											}
										},
										{
											"id": 3450,
											"name": "width",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "TimeRangeMarker.tsx",
													"line": 19,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												3451,
												3445,
												3446,
												3444,
												3450
											]
										}
									],
									"sources": [
										{
											"fileName": "TimeRangeMarker.tsx",
											"line": 15,
											"character": 47
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3356
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3442
					]
				}
			],
			"sources": [
				{
					"fileName": "TimeRangeMarker.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3452,
			"name": "\"ValueAxis\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/ValueAxis.tsx",
			"children": [
				{
					"id": 3453,
					"name": "ValueAxis",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 3456,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3457,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 3502,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 3503,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3504,
									"name": "new ValueAxis",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3505,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ValueAxisProps",
												"id": 3534
											}
										},
										{
											"id": 3506,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValueAxis",
										"id": 3453
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 3529,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 3525,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 3526,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 3527,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																3527
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ValueAxisProps",
												"id": 3534
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 3530,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3531,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 3532,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 3533,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 3528,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 3520,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3521,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3522,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3523,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3524,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 3454,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3455,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "ValueAxis.tsx",
									"line": 21,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 3507,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 3508,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3509,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 3510,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3511,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 3512,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 3513,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 3514,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ValueAxisProps",
																				"id": 3534
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 3515,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3516,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 3517,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3518,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3519,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 3482,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3483,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 3488,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3489,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3490,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueAxisProps",
														"id": 3534
													}
												]
											}
										},
										{
											"id": 3491,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 3497,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3498,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3499,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueAxisProps",
														"id": 3534
													}
												]
											}
										},
										{
											"id": 3500,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3501,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 3467,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3468,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 3469,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 3470,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 3458,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3459,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 3475,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3476,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 3477,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueAxisProps",
														"id": 3534
													}
												]
											}
										},
										{
											"id": 3478,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3479,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 3480,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3481,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 3484,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3485,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3486,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueAxisProps",
														"id": 3534
													}
												]
											}
										},
										{
											"id": 3487,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 3465,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3466,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 3492,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3493,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 3494,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueAxisProps",
														"id": 3534
													}
												]
											}
										},
										{
											"id": 3495,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3496,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 3471,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3472,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 3473,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueAxisProps",
														"id": 3534
													}
												]
											}
										},
										{
											"id": 3474,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 3460,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 3461,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 3462,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueAxisProps",
														"id": 3534
													}
												]
											}
										},
										{
											"id": 3463,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 3464,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3503
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3529,
								3525,
								3530,
								3528
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3520,
								3454,
								3507,
								3482,
								3488,
								3497,
								3467,
								3458,
								3475,
								3480,
								3484,
								3465,
								3492,
								3471,
								3460
							]
						}
					],
					"sources": [
						{
							"fileName": "ValueAxis.tsx",
							"line": 20,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ValueAxisProps",
									"id": 3534
								}
							]
						}
					]
				},
				{
					"id": 3534,
					"name": "ValueAxisProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ValueAxis.tsx",
							"line": 13,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3535,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3537,
									"name": "detail",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ValueAxis.tsx",
											"line": 15,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3539,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ValueAxis.tsx",
											"line": 17,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3536,
									"name": "value",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ValueAxis.tsx",
											"line": 14,
											"character": 9
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 3538,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ValueAxis.tsx",
											"line": 16,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										3537,
										3539,
										3536,
										3538
									]
								}
							],
							"sources": [
								{
									"fileName": "ValueAxis.tsx",
									"line": 13,
									"character": 28
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3453
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3534
					]
				}
			],
			"sources": [
				{
					"fileName": "ValueAxis.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2617,
			"name": "\"ValueList\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/ValueList.tsx",
			"children": [
				{
					"id": 2618,
					"name": "ValueList",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Renders a box of size `width` and `height` and places a list of label\nvalue pairs within that box, `align`ed to the left or center within\nthe box. The `style` prop is a CSS properties object that will be\napplied to the box."
					},
					"typeParameter": [
						{
							"id": 2629,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2630,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2675,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2676,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2677,
									"name": "new ValueList",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2678,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ValueListProps",
												"id": 2707
											}
										},
										{
											"id": 2679,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValueList",
										"id": 2618
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2702,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2698,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2699,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2700,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2700
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ValueListProps",
												"id": 2707
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2703,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2704,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2705,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2706,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2701,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2693,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2694,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2695,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2696,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2697,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 2627,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2628,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "ValueList.tsx",
									"line": 38,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2680,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2681,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2682,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2683,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2684,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2685,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2686,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 2687,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ValueListProps",
																				"id": 2707
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2688,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2689,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2690,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2691,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2692,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 2655,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2656,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2661,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2662,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2663,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 2707
													}
												]
											}
										},
										{
											"id": 2664,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2670,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2671,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2672,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 2707
													}
												]
											}
										},
										{
											"id": 2673,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2674,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 2640,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2641,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 2642,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 2643,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 2631,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2632,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 2648,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2649,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 2650,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 2707
													}
												]
											}
										},
										{
											"id": 2651,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2652,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 2653,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2654,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 2657,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2658,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2659,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 2707
													}
												]
											}
										},
										{
											"id": 2660,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 2638,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2639,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2665,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2666,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2667,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 2707
													}
												]
											}
										},
										{
											"id": 2668,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2669,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 2644,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2645,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 2646,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 2707
													}
												]
											}
										},
										{
											"id": 2647,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 2633,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2634,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 2635,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 2707
													}
												]
											}
										},
										{
											"id": 2636,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2637,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 2619,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 2620,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 32,
											"character": 13
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "center"
									},
									"defaultValue": "\"center\""
								},
								{
									"id": 2622,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 34,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								},
								{
									"id": 2623,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 35,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2624,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2626,
													"name": "box",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 345,
															"character": 7
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												},
												{
													"id": 2625,
													"name": "text",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 344,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														2626,
														2625
													]
												}
											]
										}
									},
									"defaultValue": " defaultStyle"
								},
								{
									"id": 2621,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 33,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2620,
										2622,
										2623,
										2621
									]
								}
							],
							"sources": [
								{
									"fileName": "ValueList.tsx",
									"line": 31,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2676
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2702,
								2698,
								2703,
								2701
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2693,
								2627,
								2680,
								2655,
								2661,
								2670,
								2640,
								2631,
								2648,
								2653,
								2657,
								2638,
								2665,
								2644,
								2633
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2619
							]
						}
					],
					"sources": [
						{
							"fileName": "ValueList.tsx",
							"line": 30,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ValueListProps",
									"id": 2707
								}
							]
						}
					]
				},
				{
					"id": 2707,
					"name": "ValueListProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "ValueList.tsx",
							"line": 16,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2708,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2709,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 17,
											"character": 9
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "center"
											},
											{
												"type": "stringLiteral",
												"value": "left"
											}
										]
									}
								},
								{
									"id": 2713,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 21,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2711,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 19,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "InfoBoxStyle",
										"id": 172
									}
								},
								{
									"id": 2710,
									"name": "values",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 18,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "LabelValueList",
										"id": 438
									}
								},
								{
									"id": 2712,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "ValueList.tsx",
											"line": 20,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2709,
										2713,
										2711,
										2710,
										2712
									]
								}
							],
							"sources": [
								{
									"fileName": "ValueList.tsx",
									"line": 16,
									"character": 28
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2618
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2707
					]
				}
			],
			"sources": [
				{
					"fileName": "ValueList.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1949,
			"name": "\"YAxis\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/YAxis.tsx",
			"children": [
				{
					"id": 1953,
					"name": "YAxis",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The YAxis widget displays a vertical axis to the left or right\nof the charts. A YAxis always appears within a `ChartRow`, from\nwhich it gets its height and positioning. You can have more than\none axis per row.",
						"text": "Here's a simple YAxis example:\n\n```js\n<YAxis\n  id=\"price-axis\"\n  label=\"Price (USD)\"\n  min={0} max={100}\n  width=\"60\"\n  type=\"linear\"\n  format=\"$,.2f\"\n/>\n```\n\nVisually you can control the axis `label`, its size via the `width`\nprop, its `format`, and `type` of scale (linear).\n\nEach axis also defines a scale through a `min` and `max` prop. Charts\nmay then refer to the axis by by citing the axis `id` in their `axis`\nprop. Those charts will then use the axis scale for their y-scale.\n\nHere is an example of two line charts that each have their own axis:\n\n```js\n<ChartContainer timeRange={audSeries.timerange()}>\n    <ChartRow height=\"200\">\n        <YAxis id=\"aud\" label=\"AUD\" min={0.5} max={1.5} width=\"60\" format=\"$,.2f\"/>\n        <Charts>\n            <LineChart axis=\"aud\" series={audSeries} style={audStyle}/>\n            <LineChart axis=\"euro\" series={euroSeries} style={euroStyle}/>\n        </Charts>\n        <YAxis id=\"euro\" label=\"Euro\" min={0.5} max={1.5} width=\"80\" format=\"$,.2f\"/>\n    </ChartRow>\n</ChartContainer>\n```\n\n Note that there are two `<YAxis>` components defined here, one before\n the `<Charts>` block and one after. This defines that the first axis will\n appear to the left of the charts and the second will appear after the charts.\n Each of the line charts uses its `axis` prop to identify the axis (\"aud\" or \"euro\")\n it will use for its vertical scale.\n"
					},
					"typeParameter": [
						{
							"id": 1968,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1969,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 2014,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 2015,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2016,
									"name": "new YAxis",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2017,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "YAxisProps",
												"id": 2060
											}
										},
										{
											"id": 2018,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "YAxis",
										"id": 1953
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 2041,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 2037,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2038,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2039,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																2039
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "YAxisProps",
												"id": 2060
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 2042,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2043,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 2044,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 2045,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 2040,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 2032,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2033,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2034,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2035,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2036,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 1966,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1967,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "YAxis.tsx",
									"line": 116,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 2019,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 2020,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2021,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 2022,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2023,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 2024,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2025,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 2026,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "YAxisProps",
																				"id": 2060
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 2027,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2028,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 2029,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2030,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2031,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1994,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1995,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 2000,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2001,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2002,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "YAxisProps",
														"id": 2060
													}
												]
											}
										},
										{
											"id": 2003,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 2009,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2010,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2011,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "YAxisProps",
														"id": 2060
													}
												]
											}
										},
										{
											"id": 2012,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2013,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1979,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1980,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1981,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1982,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 1970,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1971,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1987,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1988,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1989,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "YAxisProps",
														"id": 2060
													}
												]
											}
										},
										{
											"id": 1990,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1991,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1992,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1993,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1996,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1997,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1998,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "YAxisProps",
														"id": 2060
													}
												]
											}
										},
										{
											"id": 1999,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1977,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1978,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 2004,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 2005,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 2006,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "YAxisProps",
														"id": 2060
													}
												]
											}
										},
										{
											"id": 2007,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 2008,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1983,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1984,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1985,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "YAxisProps",
														"id": 2060
													}
												]
											}
										},
										{
											"id": 1986,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 1972,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1973,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1974,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "YAxisProps",
														"id": 2060
													}
												]
											}
										},
										{
											"id": 1975,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1976,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 1954,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 1960,
									"name": "absolute",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 108,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "false"
									},
									"defaultValue": "false"
								},
								{
									"id": 1956,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 104,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"left\""
								},
								{
									"id": 1961,
									"name": "format",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 109,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\".2s\""
								},
								{
									"id": 1955,
									"name": "id",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 103,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"yaxis\""
								},
								{
									"id": 1962,
									"name": "labelOffset",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 110,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 1958,
									"name": "max",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 106,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 1957,
									"name": "min",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 105,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 1965,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 113,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": " defaultStyle"
								},
								{
									"id": 1963,
									"name": "transition",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 111,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								},
								{
									"id": 1959,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 107,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "Linear",
										"id": 312
									},
									"defaultValue": " ScaleType.Linear"
								},
								{
									"id": 1964,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 112,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "80"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1960,
										1956,
										1961,
										1955,
										1962,
										1958,
										1957,
										1965,
										1963,
										1959,
										1964
									]
								}
							],
							"sources": [
								{
									"fileName": "YAxis.tsx",
									"line": 102,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2015
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2041,
								2037,
								2042,
								2040
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2032,
								1966,
								2019,
								1994,
								2000,
								2009,
								1979,
								1970,
								1987,
								1992,
								1996,
								1977,
								2004,
								1983,
								1972
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1954
							]
						}
					],
					"sources": [
						{
							"fileName": "YAxis.tsx",
							"line": 101,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "YAxisProps",
									"id": 2060
								}
							]
						}
					]
				},
				{
					"id": 1950,
					"name": "YAxisStyle",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1952,
							"name": "axis",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "YAxis.tsx",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "CSSProperties"
							}
						},
						{
							"id": 1951,
							"name": "labels",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "YAxis.tsx",
									"line": 22,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "CSSProperties"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1952,
								1951
							]
						}
					],
					"sources": [
						{
							"fileName": "YAxis.tsx",
							"line": 21,
							"character": 27
						}
					]
				},
				{
					"id": 2046,
					"name": "CSSProperties",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "YAxis.tsx",
							"line": 19,
							"character": 18
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2047,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 2048,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 2049,
										"name": "key",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"sources": [
								{
									"fileName": "YAxis.tsx",
									"line": 19,
									"character": 20
								}
							]
						}
					}
				},
				{
					"id": 2060,
					"name": "YAxisProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "YAxis.tsx",
							"line": 40,
							"character": 22
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "AxisProps",
								"id": 397
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2061,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2067,
											"name": "absolute",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 46,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2070,
											"name": "align",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 49,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2069,
											"name": "format",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 48,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2062,
											"name": "label",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 41,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2068,
											"name": "labelOffset",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 47,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2064,
											"name": "max",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 43,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2063,
											"name": "min",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 42,
													"character": 7
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2071,
											"name": "scale",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 50,
													"character": 9
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2072,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2073,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2074,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "YAxis.tsx",
															"line": 50,
															"character": 11
														}
													]
												}
											}
										},
										{
											"id": 2066,
											"name": "style",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 45,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"name": "YAxisStyle",
												"id": 1950
											}
										},
										{
											"id": 2075,
											"name": "tickCount",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 51,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2065,
											"name": "width",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "YAxis.tsx",
													"line": 44,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												2067,
												2070,
												2069,
												2062,
												2068,
												2064,
												2063,
												2071,
												2066,
												2075,
												2065
											]
										}
									],
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 40,
											"character": 36
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2050,
					"name": "defaultStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 2058,
							"name": "axis",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 2059,
									"name": "axisColor",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 36,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#C0C0C0\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2059
									]
								}
							],
							"sources": [
								{
									"fileName": "YAxis.tsx",
									"line": 35,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 2051,
							"name": "labels",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {},
							"children": [
								{
									"id": 2052,
									"name": "fill",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 28,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#8B7E7E\""
								},
								{
									"id": 2055,
									"name": "fontFamily",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 31,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\"Goudy Bookletter 1911\", sans-serif\"\""
								},
								{
									"id": 2054,
									"name": "fontSize",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 30,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "12"
								},
								{
									"id": 2053,
									"name": "fontWeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 29,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								},
								{
									"id": 2057,
									"name": "pointerEvents",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 33,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"none\""
								},
								{
									"id": 2056,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "YAxis.tsx",
											"line": 32,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"none\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										2052,
										2055,
										2054,
										2053,
										2057,
										2056
									]
								}
							],
							"sources": [
								{
									"fileName": "YAxis.tsx",
									"line": 27,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								2058,
								2051
							]
						}
					],
					"sources": [
						{
							"fileName": "YAxis.tsx",
							"line": 26,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1953
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1950
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2046,
						2060
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						2050
					]
				}
			],
			"sources": [
				{
					"fileName": "YAxis.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 632,
			"name": "\"curve\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/curve.ts",
			"children": [
				{
					"id": 633,
					"name": "CurveLookup",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "curve.ts",
							"line": 39,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 634,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 635,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 636,
										"name": "name",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 39,
									"character": 25
								}
							]
						}
					}
				},
				{
					"id": 637,
					"name": "curves",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 640,
							"name": "curveBasis",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 44,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 638,
							"name": "curveBasisClosed",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 42,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 639,
							"name": "curveBasisOpen",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 43,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 641,
							"name": "curveBundle",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 45,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveBundleFactory"
							}
						},
						{
							"id": 644,
							"name": "curveCardinal",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 48,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveCardinalFactory"
							}
						},
						{
							"id": 642,
							"name": "curveCardinalClosed",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 46,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveCardinalFactory"
							}
						},
						{
							"id": 643,
							"name": "curveCardinalOpen",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 47,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveCardinalFactory"
							}
						},
						{
							"id": 647,
							"name": "curveCatmullRom",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 51,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveCatmullRomFactory"
							}
						},
						{
							"id": 645,
							"name": "curveCatmullRomClosed",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 49,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveCatmullRomFactory"
							}
						},
						{
							"id": 646,
							"name": "curveCatmullRomOpen",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 50,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveCatmullRomFactory"
							}
						},
						{
							"id": 649,
							"name": "curveLinear",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 53,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 648,
							"name": "curveLinearClosed",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 52,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 650,
							"name": "curveMonotoneX",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 54,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 651,
							"name": "curveMonotoneY",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 55,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 652,
							"name": "curveNatural",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 56,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 653,
							"name": "curveStep",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 57,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 654,
							"name": "curveStepAfter",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 58,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 655,
							"name": "curveStepBefore",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "curve.ts",
									"line": 59,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								640,
								638,
								639,
								641,
								644,
								642,
								643,
								647,
								645,
								646,
								649,
								648,
								650,
								651,
								652,
								653,
								654,
								655
							]
						}
					],
					"sources": [
						{
							"fileName": "curve.ts",
							"line": 41,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						633
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						637
					]
				}
			],
			"sources": [
				{
					"fileName": "curve.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 805,
			"name": "\"info\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/info.tsx",
			"children": [
				{
					"id": 984,
					"name": "InfoBox",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Renders a box of size `width` and `height` and places a list of label\nvalue pairs within that box, `align`ed to the left or center within\nthe box. The `style` prop is a CSS properties object that will be\napplied to the box."
					},
					"typeParameter": [
						{
							"id": 995,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 996,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1041,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1042,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 1043,
									"name": "new InfoBox",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1044,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "InfoBoxProps",
												"id": 1079
											}
										},
										{
											"id": 1045,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "InfoBox",
										"id": 984
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 1068,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 1064,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1065,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1066,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																1066
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "InfoBoxProps",
												"id": 1079
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 1069,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1070,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1071,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1072,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 1067,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 1059,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 1060,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1061,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1062,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1063,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 993,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 994,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "info.tsx",
									"line": 153,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 1046,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 1047,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1048,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1049,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1050,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 1051,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1052,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 1053,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "InfoBoxProps",
																				"id": 1079
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 1054,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1055,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 1056,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1057,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1058,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 1021,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1022,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 1027,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1028,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1029,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InfoBoxProps",
														"id": 1079
													}
												]
											}
										},
										{
											"id": 1030,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 1036,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1037,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1038,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InfoBoxProps",
														"id": 1079
													}
												]
											}
										},
										{
											"id": 1039,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1040,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 1006,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1007,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 1008,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 1009,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 997,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 998,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 1014,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1015,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 1016,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InfoBoxProps",
														"id": 1079
													}
												]
											}
										},
										{
											"id": 1017,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1018,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 1019,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1020,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 1023,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1024,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1025,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InfoBoxProps",
														"id": 1079
													}
												]
											}
										},
										{
											"id": 1026,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 1004,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1005,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 1031,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1032,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1033,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InfoBoxProps",
														"id": 1079
													}
												]
											}
										},
										{
											"id": 1034,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1035,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 1010,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1011,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 1012,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InfoBoxProps",
														"id": 1079
													}
												]
											}
										},
										{
											"id": 1013,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 999,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 1000,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 1001,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InfoBoxProps",
														"id": 1079
													}
												]
											}
										},
										{
											"id": 1002,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 1003,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 985,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 986,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 147,
											"character": 13
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "center"
									},
									"defaultValue": "\"center\""
								},
								{
									"id": 988,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 149,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								},
								{
									"id": 989,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 150,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 990,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 992,
													"name": "box",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 345,
															"character": 7
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												},
												{
													"id": 991,
													"name": "text",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 344,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														992,
														991
													]
												}
											]
										}
									},
									"defaultValue": " defaultStyle"
								},
								{
									"id": 987,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 148,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "150"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										986,
										988,
										989,
										987
									]
								}
							],
							"sources": [
								{
									"fileName": "info.tsx",
									"line": 146,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1042
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1068,
								1064,
								1069,
								1067
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1059,
								993,
								1046,
								1021,
								1027,
								1036,
								1006,
								997,
								1014,
								1019,
								1023,
								1004,
								1031,
								1010,
								999
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								985
							]
						}
					],
					"sources": [
						{
							"fileName": "info.tsx",
							"line": 145,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "InfoBoxProps",
									"id": 1079
								}
							]
						}
					]
				},
				{
					"id": 806,
					"name": "Label",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Renders a single label surrounded by a box of size `width` and `height`"
					},
					"typeParameter": [
						{
							"id": 817,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 818,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 863,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 864,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 865,
									"name": "new Label",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 866,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LabelProps",
												"id": 1082
											}
										},
										{
											"id": 867,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Label",
										"id": 806
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 890,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 886,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 887,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 888,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																888
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "LabelProps",
												"id": 1082
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 891,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 892,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 893,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 894,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 889,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 881,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 882,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 883,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 884,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 885,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 815,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 816,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "info.tsx",
									"line": 47,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 868,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 869,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 870,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 871,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 872,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 873,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 874,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 875,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "LabelProps",
																				"id": 1082
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 876,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 877,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 878,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 879,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 880,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 843,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 844,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 849,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 850,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 851,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelProps",
														"id": 1082
													}
												]
											}
										},
										{
											"id": 852,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 858,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 859,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 860,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelProps",
														"id": 1082
													}
												]
											}
										},
										{
											"id": 861,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 862,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 828,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 829,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 830,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 831,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 819,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 820,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 836,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 837,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 838,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelProps",
														"id": 1082
													}
												]
											}
										},
										{
											"id": 839,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 840,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 841,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 842,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 845,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 846,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 847,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelProps",
														"id": 1082
													}
												]
											}
										},
										{
											"id": 848,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 826,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 827,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 853,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 854,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 855,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelProps",
														"id": 1082
													}
												]
											}
										},
										{
											"id": 856,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 857,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 832,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 833,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 834,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelProps",
														"id": 1082
													}
												]
											}
										},
										{
											"id": 835,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 821,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 822,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 823,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "LabelProps",
														"id": 1082
													}
												]
											}
										},
										{
											"id": 824,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 825,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 807,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 808,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 41,
											"character": 13
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "center"
									},
									"defaultValue": "\"center\""
								},
								{
									"id": 810,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 43,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								},
								{
									"id": 811,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 44,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 812,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 814,
													"name": "box",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 345,
															"character": 7
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												},
												{
													"id": 813,
													"name": "text",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 344,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														814,
														813
													]
												}
											]
										}
									},
									"defaultValue": " defaultStyle"
								},
								{
									"id": 809,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 42,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										808,
										810,
										811,
										809
									]
								}
							],
							"sources": [
								{
									"fileName": "info.tsx",
									"line": 40,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								864
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								890,
								886,
								891,
								889
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								881,
								815,
								868,
								843,
								849,
								858,
								828,
								819,
								836,
								841,
								845,
								826,
								853,
								832,
								821
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								807
							]
						}
					],
					"sources": [
						{
							"fileName": "info.tsx",
							"line": 39,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "LabelProps",
									"id": 1082
								}
							]
						}
					]
				},
				{
					"id": 895,
					"name": "ValueList",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Renders a box of size `width` and `height` and places a list of label\nvalue pairs within that box, `align`ed to the left or center within\nthe box. The `style` prop is a CSS properties object that will be\napplied to the box."
					},
					"typeParameter": [
						{
							"id": 906,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 907,
							"name": "SS",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 952,
							"name": "S",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 953,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 954,
									"name": "new ValueList",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 955,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ValueListProps",
												"id": 1085
											}
										},
										{
											"id": 956,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ValueList",
										"id": 895
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.__constructor"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 281,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.__constructor"
							}
						},
						{
							"id": 979,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 302,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.context"
							}
						},
						{
							"id": 975,
							"name": "props",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 300,
									"character": 13
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 976,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 977,
															"name": "children",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 300,
																	"character": 34
																}
															],
															"type": {
																"type": "reference",
																"name": "ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																977
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 300,
															"character": 24
														}
													]
												}
											}
										]
									},
									{
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ValueListProps",
												"id": 1085
											}
										]
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.props"
							}
						},
						{
							"id": 980,
							"name": "refs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 303,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 981,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 982,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 983,
												"name": "key",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "ReactInstance"
										}
									},
									"sources": [
										{
											"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
											"line": 303,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.refs"
							}
						},
						{
							"id": 978,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 301,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "S"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.state"
							}
						},
						{
							"id": 970,
							"name": "forceUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 971,
									"name": "forceUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 972,
											"name": "callBack",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 973,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 974,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 292,
															"character": 30
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.forceUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 292,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.forceUpdate"
							}
						},
						{
							"id": 904,
							"name": "render",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 905,
									"name": "render",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									},
									"overwrites": {
										"type": "reference",
										"name": "Component.render"
									}
								}
							],
							"sources": [
								{
									"fileName": "info.tsx",
									"line": 96,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						},
						{
							"id": 957,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 958,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 959,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "typeParameter",
													"name": "S"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 960,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 961,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 962,
																	"name": "__call",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 963,
																			"name": "prevState",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Readonly",
																				"typeArguments": [
																					{
																						"type": "typeParameter",
																						"name": "S"
																					}
																				]
																			}
																		},
																		{
																			"id": 964,
																			"name": "props",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "ValueListProps",
																				"id": 1085
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "unknown",
																				"name": "S"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 965,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {}
																				}
																			}
																		]
																	}
																}
															],
															"sources": [
																{
																	"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
																	"line": 288,
																	"character": 18
																}
															]
														}
													},
													{
														"type": "union",
														"types": [
															{
																"type": "unknown",
																"name": "S"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 966,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														]
													}
												]
											}
										},
										{
											"id": 967,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 968,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 969,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
															"line": 289,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Component.setState"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 287,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Component.setState"
							}
						},
						{
							"id": 932,
							"name": "UNSAFE_componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 933,
									"name": "UNSAFE_componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 458,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 938,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 939,
									"name": "UNSAFE_componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 940,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 1085
													}
												]
											}
										},
										{
											"id": 941,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 490,
									"character": 40
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 947,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 948,
									"name": "UNSAFE_componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 949,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 1085
													}
												]
											}
										},
										{
											"id": 950,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 951,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 518,
									"character": 34
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 917,
							"name": "componentDidCatch",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 918,
									"name": "componentDidCatch",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
									},
									"parameters": [
										{
											"id": 919,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										},
										{
											"id": 920,
											"name": "errorInfo",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidCatch"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidCatch"
							}
						},
						{
							"id": 908,
							"name": "componentDidMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 909,
									"name": "componentDidMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after a compoment is mounted. Setting state here will trigger re-rendering."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentDidMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 376,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentDidMount"
							}
						},
						{
							"id": 925,
							"name": "componentDidUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 926,
									"name": "componentDidUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately after updating occurs. Not called for the initial render.",
										"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
									},
									"parameters": [
										{
											"id": 927,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 1085
													}
												]
											}
										},
										{
											"id": 928,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 929,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "typeParameter",
												"name": "SS"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.componentDidUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 429,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.componentDidUpdate"
							}
						},
						{
							"id": 930,
							"name": "componentWillMount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 931,
									"name": "componentWillMount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
										"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillMount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 444,
									"character": 26
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						},
						{
							"id": 934,
							"name": "componentWillReceiveProps",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 935,
									"name": "componentWillReceiveProps",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
										"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 936,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 1085
													}
												]
											}
										},
										{
											"id": 937,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillReceiveProps"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 473,
									"character": 33
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						},
						{
							"id": 915,
							"name": "componentWillUnmount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 916,
									"name": "componentWillUnmount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.componentWillUnmount"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 392,
									"character": 28
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						},
						{
							"id": 942,
							"name": "componentWillUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 943,
									"name": "componentWillUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
										"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
										"tags": [
											{
												"tag": "deprecated",
												"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
											},
											{
												"tag": "see",
												"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
											}
										]
									},
									"parameters": [
										{
											"id": 944,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 1085
													}
												]
											}
										},
										{
											"id": 945,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 946,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "DeprecatedLifecycle.componentWillUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 503,
									"character": 27
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						},
						{
							"id": 921,
							"name": "getSnapshotBeforeUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 922,
									"name": "getSnapshotBeforeUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
										"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
									},
									"parameters": [
										{
											"id": 923,
											"name": "prevProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 1085
													}
												]
											}
										},
										{
											"id": 924,
											"name": "prevState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "typeParameter",
												"name": "SS"
											},
											{
												"type": "intrinsic",
												"name": "null"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "NewLifecycle.getSnapshotBeforeUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 423,
									"character": 31
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 910,
							"name": "shouldComponentUpdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"signatures": [
								{
									"id": 911,
									"name": "shouldComponentUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
										"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
									},
									"parameters": [
										{
											"id": 912,
											"name": "nextProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ValueListProps",
														"id": 1085
													}
												]
											}
										},
										{
											"id": 913,
											"name": "nextState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										},
										{
											"id": 914,
											"name": "nextContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ComponentLifecycle.shouldComponentUpdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/node_modules/@types/react/index.d.ts",
									"line": 387,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						},
						{
							"id": 896,
							"name": "defaultProps",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 897,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 90,
											"character": 13
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "center"
									},
									"defaultValue": "\"center\""
								},
								{
									"id": 899,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 92,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								},
								{
									"id": 900,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 93,
											"character": 13
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 901,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 903,
													"name": "box",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 345,
															"character": 7
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												},
												{
													"id": 902,
													"name": "text",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "style.ts",
															"line": 344,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "CSSProperties"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														903,
														902
													]
												}
											]
										}
									},
									"defaultValue": " defaultStyle"
								},
								{
									"id": 898,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 91,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										897,
										899,
										900,
										898
									]
								}
							],
							"sources": [
								{
									"fileName": "info.tsx",
									"line": 89,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								953
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								979,
								975,
								980,
								978
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								970,
								904,
								957,
								932,
								938,
								947,
								917,
								908,
								925,
								930,
								934,
								915,
								942,
								921,
								910
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								896
							]
						}
					],
					"sources": [
						{
							"fileName": "info.tsx",
							"line": 88,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Component",
							"typeArguments": [
								{
									"type": "reference",
									"name": "ValueListProps",
									"id": 1085
								}
							]
						}
					]
				},
				{
					"id": 1073,
					"name": "BoxProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "info.tsx",
							"line": 17,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1074,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1075,
									"name": "align",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 18,
											"character": 9
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "center"
											},
											{
												"type": "stringLiteral",
												"value": "left"
											}
										]
									}
								},
								{
									"id": 1078,
									"name": "height",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 21,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1076,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 19,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "InfoBoxStyle",
										"id": 172
									}
								},
								{
									"id": 1077,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 20,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1075,
										1078,
										1076,
										1077
									]
								}
							],
							"sources": [
								{
									"fileName": "info.tsx",
									"line": 17,
									"character": 22
								}
							]
						}
					}
				},
				{
					"id": 1079,
					"name": "InfoBoxProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "info.tsx",
							"line": 24,
							"character": 24
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "BoxProps",
								"id": 1073
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1080,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1081,
											"name": "info",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "info.tsx",
													"line": 25,
													"character": 8
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "LabelValueList",
														"id": 438
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1081
											]
										}
									],
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 24,
											"character": 37
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1082,
					"name": "LabelProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "info.tsx",
							"line": 28,
							"character": 22
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "BoxProps",
								"id": 1073
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1083,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1084,
											"name": "label",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "info.tsx",
													"line": 29,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1084
											]
										}
									],
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 28,
											"character": 35
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1085,
					"name": "ValueListProps",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "info.tsx",
							"line": 32,
							"character": 26
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "BoxProps",
								"id": 1073
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1086,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1087,
											"name": "values",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "info.tsx",
													"line": 33,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"name": "LabelValueList",
												"id": 438
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												1087
											]
										}
									],
									"sources": [
										{
											"fileName": "info.tsx",
											"line": 32,
											"character": 39
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						984,
						806,
						895
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1073,
						1079,
						1082,
						1085
					]
				}
			],
			"sources": [
				{
					"fileName": "info.tsx",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 263,
			"name": "\"interpolators\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/interpolators.ts",
			"children": [
				{
					"id": 264,
					"name": "ScaleInterpolator",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 279,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 280,
									"name": "new ScaleInterpolator",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 281,
											"name": "transition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 282,
											"name": "ease",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 283,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 284,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 285,
																	"name": "x",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"sources": [
														{
															"fileName": "interpolators.ts",
															"line": 31,
															"character": 41
														}
													]
												}
											}
										},
										{
											"id": 286,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnimationCallback",
												"id": 306
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ScaleInterpolator",
										"id": 264
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 29,
									"character": 40
								}
							]
						},
						{
							"id": 266,
							"name": "cacheKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 21,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 267,
							"name": "cachedScaler",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 22,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 268,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 269,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 270,
													"name": "v",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "interpolators.ts",
											"line": 22,
											"character": 25
										}
									]
								}
							}
						},
						{
							"id": 273,
							"name": "callback",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 27,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "AnimationCallback",
								"id": 306
							}
						},
						{
							"id": 275,
							"name": "ease",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 29,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 276,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 277,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 278,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "interpolators.ts",
											"line": 29,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 265,
							"name": "initialTimestamp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 19,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 272,
							"name": "sourceScale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 25,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "Scale",
								"id": 396
							}
						},
						{
							"id": 271,
							"name": "targetScale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 24,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "Scale",
								"id": 396
							}
						},
						{
							"id": 274,
							"name": "transitionTime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 28,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 298,
							"name": "latestScale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 299,
									"name": "latestScale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the d3 scale. It will return the target scale if present\notherwise the source scale. Note: this is the d3 internal scale. To\nscale values, use the scaler."
									},
									"type": {
										"type": "reference",
										"name": "Scale",
										"id": 396
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 132,
									"character": 15
								}
							]
						},
						{
							"id": 293,
							"name": "scaler",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 294,
									"name": "scaler",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a scaler, which is a function that scales the value\nsupplied to it. This returns the scaler corresponding to the\nsource scale. Note that if a target scale is defined and the\ninterpolator is animating towards that target, the supplied\ncallback will be called with the transitional scaler that can\nbe used to scale data to the intermediate state."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 295,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 296,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 297,
															"name": "v",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 120,
									"character": 10
								}
							]
						},
						{
							"id": 289,
							"name": "setScale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 290,
									"name": "setScale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A new (or initial) scale is set on the interpolator"
									},
									"parameters": [
										{
											"id": 291,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 292,
											"name": "scale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Scale",
												"id": 396
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 88,
									"character": 12
								}
							]
						},
						{
							"id": 300,
							"name": "transition",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 301,
									"name": "transition",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the transition, as set in the constructor"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 139,
									"character": 14
								}
							]
						},
						{
							"id": 287,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 288,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 42,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								279
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								266,
								267,
								273,
								275,
								265,
								272,
								271,
								274
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								298,
								293,
								289,
								300,
								287
							]
						}
					],
					"sources": [
						{
							"fileName": "interpolators.ts",
							"line": 18,
							"character": 38
						}
					]
				},
				{
					"id": 306,
					"name": "AnimationCallback",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "interpolators.ts",
							"line": 16,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 307,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 308,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 309,
											"name": "f",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ScalerFunction",
												"id": 302
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 16,
									"character": 31
								}
							]
						}
					}
				},
				{
					"id": 302,
					"name": "ScalerFunction",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "interpolators.ts",
							"line": 15,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 303,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 304,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 305,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "interpolators.ts",
									"line": 15,
									"character": 28
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						264
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						306,
						302
					]
				}
			],
			"sources": [
				{
					"fileName": "interpolators.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"style\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/style.ts",
			"children": [
				{
					"id": 2,
					"name": "BarChartChannelStyle",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"indexSignature": {
						"id": 4,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 5,
								"name": "key",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "reference",
							"name": "ElementStyle",
							"id": 14
						}
					},
					"children": [
						{
							"id": 3,
							"name": "bar",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 176,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "ElementStyle",
								"id": 14
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 175,
							"character": 37
						}
					]
				},
				{
					"id": 50,
					"name": "AreaChartChannelStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "A single channel of a `AreaChart` maps the properties \"area\" and \"line\" to\nthe `ElementStyle` for the rendered area and outline respectively.",
						"text": "Example:\n```\n{\n    line: {\n        normal: { stroke: primaryColor, fill: \"none\", strokeWidth: 1 },\n        highlighted: { stroke: highlightColor, fill: \"none\", strokeWidth: 1 },\n        selected: { stroke: selectedColor, fill: \"none\", strokeWidth: 1 },\n        muted: { stroke: primaryColor, fill: \"none\", opacity: mutedLineOpacity, strokeWidth: 1 }\n    },\n    area: {\n        normal: { fill: primaryColor, stroke: \"none\", opacity: areaOpacity },\n        highlighted: { fill: highlightColor, stroke: \"none\", opacity: areaOpacity },\n        selected: { fill: selectedColor, stroke: \"none\", opacity: areaOpacity },\n        muted: { fill: primaryColor, stroke: \"none\", opacity: mutedAreaOpacity },\n    }\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 129,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 51,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 53,
									"name": "area",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 131,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 14
									}
								},
								{
									"id": 52,
									"name": "line",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 130,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 14
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										53,
										52
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 129,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 54,
					"name": "AreaChartStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "The style of a `AreaChart` is a mapping of `channel` name (corresponding\nto the column of a `TimeSeries`) to the `AreaChartChannelStyle`.",
						"text": "Example:\n```\n{\n    temperature: {\n        line: {\n            normal: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 1 },\n            highlighted: { stroke: \"#5a98cb\", fill: \"none\", strokeWidth: 1 },\n            selected: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 2 },\n            muted: { stroke: \"steelblue\", fill: \"none\", opacity: 0.5, strokeWidth: 1 }\n        }\n    }\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 152,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 55,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 56,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 57,
										"name": "channel",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "AreaChartChannelStyle",
									"id": 50
								}
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 152,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 94,
					"name": "BarChartStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "The style of a `BarChart` is a mapping of `channel` name (corresponding\nto the column of a `TimeSeries`) to the `BarChartChannelStyle`.",
						"text": "Example:\n```\n{\n    temperature: {\n        bar: {\n            normal: { fill: \"steelblue\", opacity: 0.8 },\n            highlighted: { fill: \"#5a98cb\", opacity: 1.0 },\n            selected: { fill: \"orange\", opacity: 1.0 },\n            muted: { fill: \"steelblue\", opacity: 0.4 }\n        }\n    }\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 198,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 95,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 96,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 97,
										"name": "channel",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "BarChartChannelStyle",
									"id": 2
								}
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 198,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 158,
					"name": "BaselineStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 320,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 159,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 160,
									"name": "label",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 321,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 161,
									"name": "line",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 322,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										160,
										161
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 320,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 118,
					"name": "BoxChartChannelStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 222,
							"character": 32
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "LevelStyle",
							"id": 112
						}
					}
				},
				{
					"id": 119,
					"name": "BoxChartStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 223,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 120,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 121,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 122,
										"name": "channel",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "BoxChartChannelStyle",
									"id": 118
								}
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 223,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 205,
					"name": "CategoryStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 404,
							"character": 25
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 206,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 210,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 211,
										"name": "elem",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "ElementStyle",
									"id": 14
								}
							},
							"children": [
								{
									"id": 208,
									"name": "label",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 406,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 14
									}
								},
								{
									"id": 207,
									"name": "symbol",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 405,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 14
									}
								},
								{
									"id": 209,
									"name": "value",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 407,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 14
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										208,
										207,
										209
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 404,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 14,
					"name": "ElementStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "A single element which can be interactive with may be in 4 different modes:\n * normal\n * highlighted\n * selected\n * muted",
						"text": "Its style for those modes are provided using this style object. Each\nmode defines `CSSProperties` appropiate for the underlying svg elements\nbeing rendered.\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 37,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 15,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 20,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 21,
										"name": "mode",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "CSSProperties"
								}
							},
							"children": [
								{
									"id": 17,
									"name": "highlighted",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 39,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 19,
									"name": "muted",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 41,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 16,
									"name": "normal",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 38,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 18,
									"name": "selected",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 40,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										17,
										19,
										16,
										18
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 37,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 153,
					"name": "EventChartStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 314,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 154,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 155,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 156,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Event",
												"typeArguments": [
													{
														"type": "reference",
														"name": "Key"
													}
												]
											}
										},
										{
											"id": 157,
											"name": "mode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 314,
									"character": 29
								}
							]
						}
					}
				},
				{
					"id": 186,
					"name": "EventMarkerStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 366,
							"character": 28
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "InfoBoxStyle",
								"id": 172
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 187,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 189,
											"name": "marker",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 368,
													"character": 10
												}
											],
											"type": {
												"type": "reference",
												"name": "CSSProperties"
											}
										},
										{
											"id": 188,
											"name": "stem",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 367,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"name": "CSSProperties"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												189,
												188
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 366,
											"character": 45
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 172,
					"name": "InfoBoxStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 343,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 173,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 175,
									"name": "box",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 345,
											"character": 7
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 174,
									"name": "text",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 344,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										175,
										174
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 343,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 212,
					"name": "LegendStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 411,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 213,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 214,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 215,
										"name": "key",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "CategoryStyle",
									"id": 205
								}
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 411,
									"character": 25
								}
							]
						}
					}
				},
				{
					"id": 112,
					"name": "LevelStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 215,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 113,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 115,
									"name": "highlighted",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 217,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 117,
									"name": "muted",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 219,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 114,
									"name": "normal",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 216,
											"character": 10
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								},
								{
									"id": 116,
									"name": "selected",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 218,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "CSSProperties"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										115,
										117,
										114,
										116
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 215,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 22,
					"name": "LineChartChannelStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "A single channel of a `LineChart` maps the single property \"line\" to\nthe `ElementStyle` for the rendered line.",
						"text": "Example:\n```\n{\n    line: {\n        normal: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 1 },\n        highlighted: { stroke: \"#5a98cb\", fill: \"none\", strokeWidth: 1 },\n        selected: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 2 },\n        muted: { stroke: \"steelblue\", fill: \"none\", opacity: 0.5, strokeWidth: 1 }\n    }\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 67,
							"character": 33
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 23,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 25,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 26,
										"name": "elem",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "ElementStyle",
									"id": 14
								}
							},
							"children": [
								{
									"id": 24,
									"name": "line",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 68,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 14
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										24
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 67,
									"character": 35
								}
							]
						}
					}
				},
				{
					"id": 27,
					"name": "LineChartStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "The style of a `LineChart` is a mapping of `channel` name (corresponding\nto the column of a `TimeSeries`) to the `LineChartChannelStyle`.",
						"text": "Example:\n```\n{\n    temperature: {\n        line: {\n            normal: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 1 },\n            highlighted: { stroke: \"#5a98cb\", fill: \"none\", strokeWidth: 1 },\n            selected: { stroke: \"steelblue\", fill: \"none\", strokeWidth: 2 },\n            muted: { stroke: \"steelblue\", fill: \"none\", opacity: 0.5, strokeWidth: 1 }\n        }\n    }\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 90,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 28,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 29,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 30,
										"name": "channel",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "LineChartChannelStyle",
									"id": 22
								}
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 90,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 130,
					"name": "ScatterChartChannelStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "A single channel of a `ScatterChart` maps the single property \"point\" to\nthe `ElementStyle` for the rendered dot.",
						"text": "Example:\n```\n{\n    point: {\n        normal: { fill: \"steelblue\" },\n        highlighted: { fill: \"lightsteelblue\" },\n        selected: { fill: \"yellow\" },\n        muted: { fill: \"steelblue\", pacity: 0.5 }\n    }\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 276,
							"character": 36
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 131,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 133,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 134,
										"name": "elem",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "ElementStyle",
									"id": 14
								}
							},
							"children": [
								{
									"id": 132,
									"name": "point",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 277,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "ElementStyle",
										"id": 14
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										132
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 276,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 135,
					"name": "ScatterChartStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "The style of a `ScatterChart` is a mapping of `channel` name (corresponding\nto the column of a `TimeSeries`) to the `ScatterChartChannelStyle`.",
						"text": "Example:\n```\n{\n    temperature: {\n        point: {\n            normal: { fill: \"steelblue\" },\n            highlighted: { fill: \"#5a98cb\" },\n            selected: { fill: \"steelblue\" },\n            muted: { fill: \"steelblue\" }\n        }\n    }\n}\n```\n"
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 299,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 136,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 137,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 138,
										"name": "channel",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "ScatterChartChannelStyle",
									"id": 130
								}
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 299,
									"character": 31
								}
							]
						}
					}
				},
				{
					"id": 13,
					"name": "StyleMode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 24,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "normal"
							},
							{
								"type": "stringLiteral",
								"value": "selected"
							},
							{
								"type": "stringLiteral",
								"value": "highlighted"
							},
							{
								"type": "stringLiteral",
								"value": "muted"
							}
						]
					}
				},
				{
					"id": 197,
					"name": "TimeMarkerStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 387,
							"character": 27
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "InfoBoxStyle",
								"id": 172
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 198,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 199,
											"name": "line",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 388,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"name": "CSSProperties"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												199
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 387,
											"character": 44
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 10,
					"name": "areaOpacity",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 20,
							"character": 17
						}
					],
					"type": {
						"type": "unknown",
						"name": "0.75"
					},
					"defaultValue": "0.75"
				},
				{
					"id": 129,
					"name": "defaultBoxChartStyle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 233,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"name": "BoxChartChannelStyle",
						"id": 118
					},
					"defaultValue": " [\n    {\n        normal: { ...defaultBoxFillStyle, opacity: 0.2 },\n        highlighted: { ...defaultBoxFillStyle, opacity: 0.3 },\n        selected: { ...defaultBoxFillStyle, opacity: 0.3 },\n        muted: { ...defaultMutedBoxFillStyle, opacity: 0.1 }\n    },\n    {\n        normal: { ...defaultBoxFillStyle, opacity: 0.5 },\n        highlighted: { ...defaultBoxFillStyle, opacity: 0.6 },\n        selected: { ...defaultBoxFillStyle, opacity: 0.6 },\n        muted: { ...defaultMutedBoxFillStyle, opacity: 0.2 }\n    },\n    {\n        normal: { ...defaultBoxFillStyle, opacity: 0.9 },\n        highlighted: { ...defaultBoxFillStyle, opacity: 1.0 },\n        selected: { ...defaultBoxFillStyle, opacity: 1.0 },\n        muted: { ...defaultMutedBoxFillStyle, opacity: 0.2 }\n    }\n]"
				},
				{
					"id": 7,
					"name": "highlightColor",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 15,
							"character": 20
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "#5a98cb"
					},
					"defaultValue": "\"#5a98cb\""
				},
				{
					"id": 12,
					"name": "mutedAreaOpacity",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 22,
							"character": 22
						}
					],
					"type": {
						"type": "unknown",
						"name": "0.2"
					},
					"defaultValue": "0.2"
				},
				{
					"id": 9,
					"name": "mutedColor",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 17,
							"character": 16
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "grey"
					},
					"defaultValue": "\"grey\""
				},
				{
					"id": 11,
					"name": "mutedLineOpacity",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 21,
							"character": 22
						}
					],
					"type": {
						"type": "unknown",
						"name": "0.4"
					},
					"defaultValue": "0.4"
				},
				{
					"id": 6,
					"name": "primaryColor",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 14,
							"character": 18
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "steelblue"
					},
					"defaultValue": "\"steelblue\""
				},
				{
					"id": 8,
					"name": "selectedColor",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "style.ts",
							"line": 16,
							"character": 19
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "steelblue"
					},
					"defaultValue": " primaryColor"
				},
				{
					"id": 162,
					"name": "baselineDefaultStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 163,
							"name": "label",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 164,
									"name": "fill",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 327,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#8B7E7E\""
								},
								{
									"id": 165,
									"name": "fontSize",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 328,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "11"
								},
								{
									"id": 166,
									"name": "pointerEvents",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 329,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"none\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										164,
										165,
										166
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 326,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 167,
							"name": "line",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 171,
									"name": "pointerEvents",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 335,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"none\""
								},
								{
									"id": 168,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 332,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#626262\""
								},
								{
									"id": 170,
									"name": "strokeDasharray",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 334,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"5,3\""
								},
								{
									"id": 169,
									"name": "strokeWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 333,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										171,
										168,
										170,
										169
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 331,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								163,
								167
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 325,
							"character": 33
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 58,
					"name": "defaultAreaChartStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 77,
							"name": "area",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 82,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 83,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 163,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " highlightColor"
										},
										{
											"id": 85,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 163,
													"character": 68
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " areaOpacity"
										},
										{
											"id": 84,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 163,
													"character": 51
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												83,
												85,
												84
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 163,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 90,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 91,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 165,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " primaryColor"
										},
										{
											"id": 93,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 165,
													"character": 60
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " mutedAreaOpacity"
										},
										{
											"id": 92,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 165,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												91,
												93,
												92
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 165,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 78,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 79,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 162,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " primaryColor"
										},
										{
											"id": 81,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 162,
													"character": 61
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " areaOpacity"
										},
										{
											"id": 80,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 162,
													"character": 44
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												79,
												81,
												80
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 162,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 86,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 87,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 164,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " selectedColor"
										},
										{
											"id": 89,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 164,
													"character": 64
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " areaOpacity"
										},
										{
											"id": 88,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 164,
													"character": 47
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												87,
												89,
												88
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 164,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										82,
										90,
										78,
										86
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 161,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 59,
							"name": "line",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 64,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 66,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 157,
													"character": 51
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 65,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 157,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " highlightColor"
										},
										{
											"id": 67,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 157,
													"character": 72
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												66,
												65,
												67
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 157,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 72,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 74,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 159,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 75,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 159,
													"character": 60
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " mutedLineOpacity"
										},
										{
											"id": 73,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 159,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " primaryColor"
										},
										{
											"id": 76,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 159,
													"character": 91
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												74,
												75,
												73,
												76
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 159,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 60,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 62,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 156,
													"character": 44
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 61,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 156,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " primaryColor"
										},
										{
											"id": 63,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 156,
													"character": 65
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												62,
												61,
												63
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 156,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 68,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 70,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 158,
													"character": 47
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 69,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 158,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " selectedColor"
										},
										{
											"id": 71,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 158,
													"character": 68
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												70,
												69,
												71
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 158,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										64,
										72,
										60,
										68
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 155,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								77,
								59
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 154,
							"character": 34
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 98,
					"name": "defaultBarChartChannelStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 99,
							"name": "bar",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 103,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 104,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 203,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " highlightColor"
										},
										{
											"id": 105,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 203,
													"character": 52
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												104,
												105
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 203,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 109,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 110,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 205,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " primaryColor"
										},
										{
											"id": 111,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 205,
													"character": 44
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.4"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												110,
												111
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 205,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 100,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 101,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 202,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " primaryColor"
										},
										{
											"id": 102,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 202,
													"character": 45
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.8"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												101,
												102
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 202,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 106,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 107,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 204,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": " selectedColor"
										},
										{
											"id": 108,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 204,
													"character": 48
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												107,
												108
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 204,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										103,
										109,
										100,
										106
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 201,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								99
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 200,
							"character": 40
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 123,
					"name": "defaultBoxFillStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 124,
							"name": "fill",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 226,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " primaryColor"
						},
						{
							"id": 125,
							"name": "stroke",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 227,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"none\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								124,
								125
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 225,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 190,
					"name": "defaultEventMarkerStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 195,
							"name": "marker",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 196,
									"name": "fill",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 378,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#999\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										196
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 377,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 191,
							"name": "stem",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 193,
									"name": "cursor",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 374,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"crosshair\""
								},
								{
									"id": 194,
									"name": "pointerEvents",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 375,
											"character": 21
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "none"
									},
									"defaultValue": "\"none\""
								},
								{
									"id": 192,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 373,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#999\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										193,
										194,
										192
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 372,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								195,
								191
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 371,
							"character": 36
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 176,
					"name": "defaultInfoBoxStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 177,
							"name": "box",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 178,
									"name": "fill",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 350,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#FEFEFE\""
								},
								{
									"id": 180,
									"name": "opacity",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 352,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0.8"
								},
								{
									"id": 181,
									"name": "pointerEvents",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 353,
											"character": 21
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "none"
									},
									"defaultValue": "\"none\""
								},
								{
									"id": 179,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 351,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#DDD\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										178,
										180,
										181,
										179
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 349,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 182,
							"name": "text",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 184,
									"name": "fill",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 357,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#bdbdbd\""
								},
								{
									"id": 183,
									"name": "fontSize",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 356,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "11"
								},
								{
									"id": 185,
									"name": "pointerEvents",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 358,
											"character": 21
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "none"
									},
									"defaultValue": "\"none\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										184,
										183,
										185
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 355,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								177,
								182
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 348,
							"character": 32
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 216,
					"name": "defaultLegendCategoryStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 235,
							"name": "label",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 239,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 241,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 422,
													"character": 48
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#222\""
										},
										{
											"id": 240,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 422,
													"character": 31
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												241,
												240
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 422,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 245,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 247,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 424,
													"character": 42
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#333\""
										},
										{
											"id": 246,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 424,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										},
										{
											"id": 248,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 424,
													"character": 59
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.4"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												247,
												246,
												248
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 424,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 236,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 238,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 421,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#333\""
										},
										{
											"id": 237,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 421,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												238,
												237
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 421,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 242,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 244,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 423,
													"character": 45
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#333\""
										},
										{
											"id": 243,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 423,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												244,
												243
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 423,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										239,
										245,
										236,
										242
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 420,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 217,
							"name": "symbol",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 222,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 224,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 416,
													"character": 46
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 223,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 416,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#5a98cb\""
										},
										{
											"id": 225,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 416,
													"character": 67
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												224,
												223,
												225
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 416,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 230,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 232,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 418,
													"character": 42
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 233,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 418,
													"character": 59
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.4"
										},
										{
											"id": 231,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 418,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 234,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 418,
													"character": 77
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												232,
												233,
												231,
												234
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 418,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 218,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 220,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 415,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 219,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 415,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 221,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 415,
													"character": 64
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												220,
												219,
												221
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 415,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 226,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 228,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 417,
													"character": 45
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 227,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 417,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 229,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 417,
													"character": 66
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "2"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												228,
												227,
												229
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 417,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										222,
										230,
										218,
										226
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 414,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 249,
							"name": "value",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 253,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 255,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 428,
													"character": 48
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#222\""
										},
										{
											"id": 254,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 428,
													"character": 31
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												255,
												254
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 428,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 259,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 261,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 430,
													"character": 42
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#333\""
										},
										{
											"id": 260,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 430,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										},
										{
											"id": 262,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 430,
													"character": 59
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.4"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												261,
												260,
												262
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 430,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 250,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 252,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 427,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#333\""
										},
										{
											"id": 251,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 427,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												252,
												251
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 427,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 256,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 258,
											"name": "color",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 429,
													"character": 45
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#333\""
										},
										{
											"id": 257,
											"name": "fontSize",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 429,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"normal\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												258,
												257
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 429,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										253,
										259,
										250,
										256
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 426,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								235,
								217,
								249
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 413,
							"character": 39
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 31,
					"name": "defaultLineChartChannelStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 32,
							"name": "line",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 37,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 39,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 95,
													"character": 46
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 38,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 95,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"#5a98cb\""
										},
										{
											"id": 40,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 95,
													"character": 67
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												39,
												38,
												40
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 95,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 45,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 47,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 97,
													"character": 42
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 48,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 97,
													"character": 59
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": " mutedLineOpacity"
										},
										{
											"id": 46,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 97,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 49,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 97,
													"character": 90
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												47,
												48,
												46,
												49
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 97,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 33,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 35,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 94,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 34,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 94,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 36,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 94,
													"character": 64
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												35,
												34,
												36
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 94,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 41,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 43,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 96,
													"character": 45
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"none\""
										},
										{
											"id": 42,
											"name": "stroke",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 96,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 44,
											"name": "strokeWidth",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 96,
													"character": 66
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "2"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												43,
												42,
												44
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 96,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										37,
										45,
										33,
										41
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 93,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								32
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 92,
							"character": 41
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 126,
					"name": "defaultMutedBoxFillStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 127,
							"name": "fill",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 230,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " mutedColor"
						},
						{
							"id": 128,
							"name": "stroke",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "style.ts",
									"line": 231,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"none\""
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								127,
								128
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 229,
							"character": 30
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 139,
					"name": "defaultScatterChartChannelStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 140,
							"name": "point",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 144,
									"name": "highlighted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 145,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 304,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 146,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 304,
													"character": 49
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												145,
												146
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 304,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 150,
									"name": "muted",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 151,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 306,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 152,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 306,
													"character": 43
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.4"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												151,
												152
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 306,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 141,
									"name": "normal",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 142,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 303,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 143,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 303,
													"character": 44
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0.8"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												142,
												143
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 303,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 147,
									"name": "selected",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"children": [
										{
											"id": 148,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 305,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"steelblue\""
										},
										{
											"id": 149,
											"name": "opacity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "style.ts",
													"line": 305,
													"character": 46
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												148,
												149
											]
										}
									],
									"sources": [
										{
											"fileName": "style.ts",
											"line": 305,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										144,
										150,
										141,
										147
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 302,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								140
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 301,
							"character": 44
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 200,
					"name": "defaultTimeMarkerStyle",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isExternal": true,
						"isConst": true
					},
					"children": [
						{
							"id": 201,
							"name": "line",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"children": [
								{
									"id": 203,
									"name": "cursor",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 394,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"crosshair\""
								},
								{
									"id": 204,
									"name": "pointerEvents",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 395,
											"character": 21
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "none"
									},
									"defaultValue": "\"none\""
								},
								{
									"id": 202,
									"name": "stroke",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "style.ts",
											"line": 393,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"#999\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										203,
										204,
										202
									]
								}
							],
							"sources": [
								{
									"fileName": "style.ts",
									"line": 392,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								201
							]
						}
					],
					"sources": [
						{
							"fileName": "style.ts",
							"line": 391,
							"character": 35
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						50,
						54,
						94,
						158,
						118,
						119,
						205,
						14,
						153,
						186,
						172,
						212,
						112,
						22,
						27,
						130,
						135,
						13,
						197
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						10,
						129,
						7,
						12,
						9,
						11,
						6,
						8
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						162,
						58,
						98,
						123,
						190,
						176,
						216,
						31,
						126,
						139,
						200
					]
				}
			],
			"sources": [
				{
					"fileName": "style.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 580,
			"name": "\"styler\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/styler.ts",
			"children": [
				{
					"id": 581,
					"name": "Styler",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "For our Style we want to represent two things:",
						"text": "  1. The overall style of an AreaChart should be consistent across a site\n  2. The specific style of a columnName (e.g. \"pressure\") should be consistent\n\nThe overall style is implemented with methods specific to\neach chart type or entity:\n\n  - lineChartStyle()\n  - areaChartStyle()\n  - legendStyle()\n  - etc\n\nThese will render out an object that can be passed into the\ncharts themselves and will control the visual appearance,\nkeyed by columnName. This abstracts away the SVG details of the\nunderlying DOM elements.\n\nFor the specific style we define here three out of the box parameters\nby which one column can be different from another when rendered:\n  - color\n  - width (of a line)\n  - dashed or not\n\n"
					},
					"children": [
						{
							"id": 588,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "The `column`s define the style associated with a particular\nquantity, such as \"inTraffic\" or \"temperature\". The columns\nare an array, with each element being either a `string`, or\nand `object` defining the style.",
								"text": " * Using a string makes the assumption that you want to use a\ncolor scheme, so you need to define that if you don't want the\ndefault. A color will be then assigned to each column based\non the scheme. The string is the column name.\n\n * In the second case of providing an object, you define properties\nof the style yourself. Each object should contain a \"key\" property\nwhich is the column name and optionally the `width` and `dashed`\nproperty. If you don't supply the color, then the color\nwill come from the scheme.\n\n"
							},
							"signatures": [
								{
									"id": 589,
									"name": "new Styler",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "The `column`s define the style associated with a particular\nquantity, such as \"inTraffic\" or \"temperature\". The columns\nare an array, with each element being either a `string`, or\nand `object` defining the style.",
										"text": " * Using a string makes the assumption that you want to use a\ncolor scheme, so you need to define that if you don't want the\ndefault. A color will be then assigned to each column based\non the scheme. The string is the column name.\n\n * In the second case of providing an object, you define properties\nof the style yourself. Each object should contain a \"key\" property\nwhich is the column name and optionally the `width` and `dashed`\nproperty. If you don't supply the color, then the color\nwill come from the scheme.\n\n"
									},
									"parameters": [
										{
											"id": 590,
											"name": "columns",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Column",
													"id": 627
												}
											}
										},
										{
											"id": 591,
											"name": "scheme",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Paired\""
										}
									],
									"type": {
										"type": "reference",
										"name": "Styler",
										"id": 581
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 69,
									"character": 56
								}
							]
						},
						{
							"id": 582,
							"name": "colorScheme",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 67,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 583,
							"name": "columnNames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 68,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 584,
							"name": "columnStyles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 69,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 585,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 586,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 587,
												"name": "columnName",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"name": "StylerStyle",
											"id": 619
										}
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 69,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 601,
							"name": "areaChartStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 602,
									"name": "areaChartStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AreaChartStyle",
										"id": 54
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 204,
									"character": 18
								}
							]
						},
						{
							"id": 609,
							"name": "axisStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 610,
									"name": "axisStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 611,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 612,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 613,
													"name": "fill",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "styler.ts",
															"line": 351,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": " c"
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														613
													]
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 343,
									"character": 13
								}
							]
						},
						{
							"id": 605,
							"name": "barChartStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 606,
									"name": "barChartStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BarChartStyle",
										"id": 94
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 288,
									"character": 17
								}
							]
						},
						{
							"id": 614,
							"name": "boxChartStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 615,
									"name": "boxChartStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BoxChartStyle",
										"id": 119
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 355,
									"character": 17
								}
							]
						},
						{
							"id": 594,
							"name": "colorLookup",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 595,
									"name": "colorLookup",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the color scheme with the appropiate number of colors.\nIf there are more columns than the largest set in the scheme then\njust the largest scheme set will be returned.\nIf there are less columns than the smallest set in the scheme then\njust the smallest scheme will be returned."
									},
									"parameters": [
										{
											"id": 596,
											"name": "columnCount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 126,
									"character": 15
								}
							]
						},
						{
							"id": 597,
							"name": "legendStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 598,
									"name": "legendStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 599,
											"name": "column",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 600,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LegendItemType",
												"id": 457
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "CategoryStyle",
										"id": 205
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 141,
									"character": 15
								}
							]
						},
						{
							"id": 603,
							"name": "lineChartStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 604,
									"name": "lineChartStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "LineChartStyle",
										"id": 27
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 253,
									"character": 18
								}
							]
						},
						{
							"id": 592,
							"name": "numColumns",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 593,
									"name": "numColumns",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 115,
									"character": 14
								}
							]
						},
						{
							"id": 607,
							"name": "scatterChartStyle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 608,
									"name": "scatterChartStyle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ScatterChartStyle",
										"id": 135
									}
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 316,
									"character": 21
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								588
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								582,
								583,
								584
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								601,
								609,
								605,
								614,
								594,
								597,
								603,
								592,
								607
							]
						}
					],
					"sources": [
						{
							"fileName": "styler.ts",
							"line": 66,
							"character": 19
						}
					]
				},
				{
					"id": 627,
					"name": "Column",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "styler.ts",
							"line": 38,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "KeyedStyle",
								"id": 616
							}
						]
					}
				},
				{
					"id": 616,
					"name": "KeyedStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "styler.ts",
							"line": 25,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 617,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 618,
									"name": "key",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 26,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										618
									]
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 25,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 619,
					"name": "StylerStyle",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "styler.ts",
							"line": 29,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 620,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 623,
									"name": "color",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 32,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 626,
									"name": "dashed",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 35,
											"character": 10
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 621,
									"name": "key",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 30,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 624,
									"name": "selected",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 33,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 622,
									"name": "style",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 31,
											"character": 9
										}
									],
									"type": {
										"type": "reference",
										"name": "StylerStyle",
										"id": 619
									}
								},
								{
									"id": 625,
									"name": "width",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "styler.ts",
											"line": 34,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										623,
										626,
										621,
										624,
										622,
										625
									]
								}
							],
							"sources": [
								{
									"fileName": "styler.ts",
									"line": 29,
									"character": 25
								}
							]
						}
					}
				},
				{
					"id": 628,
					"name": "styler",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"signatures": [
						{
							"id": 629,
							"name": "styler",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 630,
									"name": "columns",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Column",
											"id": 627
										}
									}
								},
								{
									"id": 631,
									"name": "scheme",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Styler",
								"id": 581
							}
						}
					],
					"sources": [
						{
							"fileName": "styler.ts",
							"line": 398,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						581
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						627,
						616,
						619
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						628
					]
				}
			],
			"sources": [
				{
					"fileName": "styler.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 418,
			"name": "\"types\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/types.ts",
			"children": [
				{
					"id": 422,
					"name": "CurveInterpolation",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 423,
							"name": "curveBasis",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 27,
									"character": 14
								}
							],
							"defaultValue": "\"curveBasis\""
						},
						{
							"id": 424,
							"name": "curveBasisOpen",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 28,
									"character": 18
								}
							],
							"defaultValue": "\"curveBasisOpen\""
						},
						{
							"id": 425,
							"name": "curveBundle",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 29,
									"character": 15
								}
							],
							"defaultValue": "\"curveBundle\""
						},
						{
							"id": 426,
							"name": "curveCardinal",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 30,
									"character": 17
								}
							],
							"defaultValue": "\"curveCardinal\""
						},
						{
							"id": 427,
							"name": "curveCardinalOpen",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 31,
									"character": 21
								}
							],
							"defaultValue": "\"curveCardinalOpen\""
						},
						{
							"id": 428,
							"name": "curveCatmullRom",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 32,
									"character": 19
								}
							],
							"defaultValue": "\"curveCatmullRom\""
						},
						{
							"id": 429,
							"name": "curveCatmullRomOpen",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 33,
									"character": 23
								}
							],
							"defaultValue": "\"curveCatmullRomOpen\""
						},
						{
							"id": 430,
							"name": "curveLinear",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 34,
									"character": 15
								}
							],
							"defaultValue": "\"curveLinear\""
						},
						{
							"id": 431,
							"name": "curveMonotoneX",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 35,
									"character": 18
								}
							],
							"defaultValue": "\"curveMonotoneX\""
						},
						{
							"id": 432,
							"name": "curveMonotoneY",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 36,
									"character": 18
								}
							],
							"defaultValue": "\"curveMonotoneY\""
						},
						{
							"id": 433,
							"name": "curveNatural",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 37,
									"character": 16
								}
							],
							"defaultValue": "\"curveNatural\""
						},
						{
							"id": 434,
							"name": "curveRadial",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 38,
									"character": 15
								}
							],
							"defaultValue": "\"curveRadial\""
						},
						{
							"id": 435,
							"name": "curveStep",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 39,
									"character": 13
								}
							],
							"defaultValue": "\"curveStep\""
						},
						{
							"id": 436,
							"name": "curveStepAfter",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 40,
									"character": 18
								}
							],
							"defaultValue": "\"curveStepAfter\""
						},
						{
							"id": 437,
							"name": "curveStepBefore",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 41,
									"character": 19
								}
							],
							"defaultValue": "\"curveStepBefore\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								423,
								424,
								425,
								426,
								427,
								428,
								429,
								430,
								431,
								432,
								433,
								434,
								435,
								436,
								437
							]
						}
					],
					"sources": [
						{
							"fileName": "types.ts",
							"line": 26,
							"character": 30
						}
					]
				},
				{
					"id": 419,
					"name": "AreaChartColumns",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 421,
							"name": "down",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 23,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 420,
							"name": "up",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 22,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								421,
								420
							]
						}
					],
					"sources": [
						{
							"fileName": "types.ts",
							"line": 21,
							"character": 33
						}
					]
				},
				{
					"id": 438,
					"name": "LabelValueList",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": " Copyright (c) 2018, The Regents of the University of California,\n through Lawrence Berkeley National Laboratory (subject to receipt\n of any required approvals from the U.S. Dept. of Energy).\n All rights reserved.",
						"text": " This source code is licensed under the BSD-style license found in the\n LICENSE file in the root directory of this source tree.\n"
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 11,
							"character": 26
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 439,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"children": [
									{
										"id": 440,
										"name": "label",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExternal": true,
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "types.ts",
												"line": 12,
												"character": 9
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 441,
										"name": "value",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExternal": true,
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "types.ts",
												"line": 13,
												"character": 9
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Variables",
										"kind": 32,
										"children": [
											440,
											441
										]
									}
								],
								"sources": [
									{
										"fileName": "types.ts",
										"line": 11,
										"character": 28
									}
								]
							}
						}
					}
				},
				{
					"id": 442,
					"name": "LineData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 16,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 443,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 444,
									"name": "x",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 17,
											"character": 5
										}
									],
									"type": {
										"type": "reference",
										"name": "Date"
									}
								},
								{
									"id": 445,
									"name": "y",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 18,
											"character": 5
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										444,
										445
									]
								}
							],
							"sources": [
								{
									"fileName": "types.ts",
									"line": 16,
									"character": 22
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						422
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						419
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						438,
						442
					]
				}
			],
			"sources": [
				{
					"fileName": "types.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 446,
			"name": "\"util\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/ssbaveja/Desktop/Projects/react-timeseries-charts/packages/react-timeseries-charts/src/util.ts",
			"children": [
				{
					"id": 450,
					"name": "getElementOffset",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"signatures": [
						{
							"id": 451,
							"name": "getElementOffset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 452,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SVGRectElement"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 453,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 455,
											"name": "left",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "util.ts",
													"line": 23,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 454,
											"name": "top",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "util.ts",
													"line": 23,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												455,
												454
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "util.ts",
							"line": 18,
							"character": 32
						}
					]
				},
				{
					"id": 447,
					"name": "scaleAsString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"signatures": [
						{
							"id": 448,
							"name": "scaleAsString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 449,
									"name": "scale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ScaleTime",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "util.ts",
							"line": 13,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						450,
						447
					]
				}
			],
			"sources": [
				{
					"fileName": "util.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				656,
				1267,
				1414,
				1508,
				1704,
				2340,
				2076,
				310,
				2493,
				2211,
				1088,
				2714,
				2817,
				456,
				2972,
				3111,
				3202,
				1830,
				3355,
				3452,
				2617,
				1949,
				632,
				805,
				263,
				1,
				580,
				418,
				446
			]
		}
	]
}